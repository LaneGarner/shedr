[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/firebase.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/Store.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js":"26","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js":"27","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js":"28","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js":"29","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js":"30","/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx":"31","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx":"32","/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx":"33","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx":"34","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx":"35","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx":"36","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx":"37","/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx":"38","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx":"39","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx":"40","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx":"41","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx":"42","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx":"43","/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx":"44","/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx":"45","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx":"46","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx":"47","/Users/lanegarner/Documents/Dev/shedr/src/App.jsx":"48","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx":"49","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx":"50","/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx":"51","/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx":"52","/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx":"53","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx":"54","/Users/lanegarner/Documents/Dev/shedr/src/components/RecordingIcon.jsx":"55"},{"size":232,"mtime":1616703050188,"results":"56","hashOfConfig":"57"},{"size":1116,"mtime":1616719995036,"results":"58","hashOfConfig":"57"},{"size":1840,"mtime":1618246616171,"results":"59","hashOfConfig":"57"},{"size":873,"mtime":1612799339284,"results":"60","hashOfConfig":"61"},{"size":1006,"mtime":1616703050185,"results":"62","hashOfConfig":"61"},{"size":579,"mtime":1612286994566,"results":"63","hashOfConfig":"61"},{"size":1281,"mtime":1616703050184,"results":"64","hashOfConfig":"57"},{"size":690,"mtime":1616703050182,"results":"65","hashOfConfig":"57"},{"size":906,"mtime":1616703050182,"results":"66","hashOfConfig":"57"},{"size":19145,"mtime":1615855134420,"results":"67","hashOfConfig":"61"},{"size":571,"mtime":1616703050181,"results":"68","hashOfConfig":"57"},{"size":565,"mtime":1616703050182,"results":"69","hashOfConfig":"57"},{"size":805,"mtime":1616703050184,"results":"70","hashOfConfig":"57"},{"size":570,"mtime":1616703050185,"results":"71","hashOfConfig":"57"},{"size":661,"mtime":1616703050181,"results":"72","hashOfConfig":"57"},{"size":4507,"mtime":1616734462994,"results":"73","hashOfConfig":"57"},{"size":19109,"mtime":1616703050184,"results":"74","hashOfConfig":"57"},{"size":5401,"mtime":1616703050183,"results":"75","hashOfConfig":"57"},{"size":5398,"mtime":1616703050182,"results":"76","hashOfConfig":"57"},{"size":577,"mtime":1616703050167,"results":"77","hashOfConfig":"57"},{"size":962,"mtime":1616703050181,"results":"78","hashOfConfig":"57"},{"size":516,"mtime":1616703050186,"results":"79","hashOfConfig":"57"},{"size":892,"mtime":1616703050185,"results":"80","hashOfConfig":"57"},{"size":5480,"mtime":1616703050183,"results":"81","hashOfConfig":"57"},{"size":9764,"mtime":1616719737805,"results":"82","hashOfConfig":"57"},{"size":19375,"mtime":1616719744380,"results":"83","hashOfConfig":"57"},{"size":17516,"mtime":1616703050187,"results":"84","hashOfConfig":"57"},{"size":71637,"mtime":1616719770131,"results":"85","hashOfConfig":"57"},{"size":984,"mtime":1616703050184,"results":"86","hashOfConfig":"57"},{"size":834,"mtime":1616703050182,"results":"87","hashOfConfig":"57"},{"size":349,"mtime":1616703050171,"results":"88","hashOfConfig":"57"},{"size":857,"mtime":1616703050172,"results":"89","hashOfConfig":"57"},{"size":2828,"mtime":1616703050168,"results":"90","hashOfConfig":"57"},{"size":1842,"mtime":1618247469589,"results":"91","hashOfConfig":"57"},{"size":2186,"mtime":1618247448765,"results":"92","hashOfConfig":"57"},{"size":2372,"mtime":1616703050170,"results":"93","hashOfConfig":"57"},{"size":14638,"mtime":1616725331038,"results":"94","hashOfConfig":"57"},{"size":870,"mtime":1616734733002,"results":"95","hashOfConfig":"57"},{"size":14176,"mtime":1616720518069,"results":"96","hashOfConfig":"57"},{"size":9460,"mtime":1616725285855,"results":"97","hashOfConfig":"57"},{"size":1393,"mtime":1616703050179,"results":"98","hashOfConfig":"61"},{"size":7590,"mtime":1616727676124,"results":"99","hashOfConfig":"61"},{"size":10192,"mtime":1616727620061,"results":"100","hashOfConfig":"61"},{"size":3169,"mtime":1618247225766,"results":"101","hashOfConfig":"57"},{"size":10156,"mtime":1616703050179,"results":"102","hashOfConfig":"57"},{"size":1139,"mtime":1616703050180,"results":"103","hashOfConfig":"57"},{"size":930,"mtime":1616703050179,"results":"104","hashOfConfig":"57"},{"size":769,"mtime":1616703050167,"results":"105","hashOfConfig":"57"},{"size":8296,"mtime":1616703050173,"results":"106","hashOfConfig":"57"},{"size":3473,"mtime":1616703050171,"results":"107","hashOfConfig":"57"},{"size":2057,"mtime":1616727509167,"results":"108","hashOfConfig":"57"},{"size":451,"mtime":1616703050179,"results":"109","hashOfConfig":"57"},{"size":4166,"mtime":1616626367037,"results":"110","hashOfConfig":"57"},{"size":3599,"mtime":1616720747016,"results":"111","hashOfConfig":"57"},{"size":1037,"mtime":1616680882843,"results":"112","hashOfConfig":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bzv263",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgxmb7",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"123"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"123"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/firebase.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Router.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],["229","230"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],["231","232"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],["233","234"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Store.js",["235"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js",["236"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx",["237"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx",["238"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx",["239"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx",["240"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx",["241"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx",["242","243","244","245"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx",["246"],"/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx",["247"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx",["248"],"import { useState, useContext, useEffect } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { NewRecording } from \"./NewRecording.jsx\"\nimport { MyRecordings } from \"./MyRecordings.jsx\"\n\nexport const Record = () => {    \n    const { setActivePage, user } = useContext(StoreContext)\n    const [ update, setUpdate ] = useState(0)\n    const [ updateTwo, setUpdateTwo ] = useState(0)\n    const [ loadingComplete, setLoadingComplete] = useState(false)\n    const [ recordingNames, setRecordingNames ] = useState([])\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setActivePage(\"record\")\n    }, [])\n\n    return (\n        <div>\n            <NewRecording loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} recordingNames={recordingNames} setRecordingNames={setRecordingNames} />\n            {user && \n                <>\n                    <hr style={{width: \"60%\", marginTop: \"2em\", border:\"1.5px solid #222\", backgroundColor: \"#222\"}} />\n                    <MyRecordings loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} recordingNames={recordingNames} setRecordingNames={setRecordingNames} />\n                </>\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx",["249","250","251","252","253","254"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport Moment from \"react-moment\"\nimport \"moment-timezone\"\nimport Loader from \"react-loader-spinner\";\n\nimport { CloseIcon } from \"../icons/CloseIcon\"\n\nimport \"./MyRecordings.scss\"\n\nMoment.globalLocal = true\n\nlet selectedRecording\n\nexport const MyRecordings = ({loadingComplete, setLoadingComplete, update, setUpdate, updateTwo, setRecordingNames}) => {\n    const { firebase, user } = useContext(StoreContext)\n    const [ myRecordings, setMyRecordings ] = useState([])\n    const [ myRecordingsURL, setMyRecordingsURL ] = useState([])\n    const [ myRecordingsMetadata, setMyRecordingsMetadata ] = useState([])\n    // const [ loadingComplete, setLoadingComplete] = useState(false)\n    const [ deleteRecordingModal, setDeleteRecordingModal] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ loadingSpinner, setLoadingSpinner ] = useState(false)\n    \n    let userId, storage, listRef\n\n    const fetchRecordings = () => {\n        userId = user.uid\n        storage = firebase.storage().ref(`audio/${userId}`)\n        listRef = storage.child(`audio/${userId}`)\n        storage.list().then(snap => {\n            let metadataPromise = []\n            let urlPromise = []\n\n            snap.items.map(itemRef => metadataPromise.push(itemRef.getMetadata()))\n            snap.items.map(itemRef => urlPromise.push(itemRef.getDownloadURL()))\n            \n            Promise.all(metadataPromise).then((data) => {\n                setMyRecordingsMetadata(data)\n            })\n            \n            Promise.all(urlPromise).then((data) => {\n                setMyRecordingsURL(data)\n                // setLoadingComplete(true)\n            })\n        })\n    }\n\n    useEffect(()=> {\n        const names = []\n        if (loadingComplete) {\n            myRecordings.forEach((recording) => {\n                names.push(recording.meta.name)\n            })\n            setRecordingNames(names)\n        }\n    }, [myRecordings])\n    \n    useEffect(() => {\n        if(user) {\n            fetchRecordings()\n            updateList()\n        }\n    }, [])\n\n    useEffect(()=> {\n        if (deleteRecordingModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ deleteRecordingModal])\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden'\n        } else {\n            document.body.style.overflow = 'unset'\n        }\n    }, [modalOpen])\n\n\n    const setRecordings = () => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n    }\n    \n    const updateList = () => {\n        fetchRecordings()\n        setRecordings()\n    }\n\n    useEffect(() => {\n        setTimeout(()=> {\n            updateList()\n            setLoadingComplete(true)\n        }, 1000)\n    }, [])\n\n    useEffect(() => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n        // updateList()\n    }, [loadingComplete])\n\n    const handleDeleteRecording = (recording) => {\n        setDeleteRecordingModal(true)\n        selectedRecording = recording\n    }\n\n    const deleteRecording = () => {\n        setDeleteRecordingModal(false)\n        const deleteRef = firebase.storage().ref(selectedRecording.meta.fullPath)\n        deleteRef.delete().then(() => {\n            updateList()\n            setLoadingSpinner(true)\n            const newUpdate = update + 1\n            setTimeout(()=> {\n                setUpdate(newUpdate)\n                setLoadingSpinner(false)\n            }, 500)\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    useEffect(()=> {\n        updateList()\n    }, [update, updateTwo])\n    \n    return (\n        <div className=\"recordings-container\">\n                <h1>My Recordings</h1>\n                <ul>\n                    {loadingComplete && <button className=\"modalBtn skip\" onClick={updateList}>Update list</button>}\n                    {loadingComplete ? (\n                        myRecordings.map((recording, index) => (\n                            <li className=\"recording-card\" key={index}>\n                                {loadingSpinner && selectedRecording ? \n                                    <Loader className=\"delete-recording-button\" type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30}/> :\n                                    <div className=\"delete-recording-button\" onClick={()=>handleDeleteRecording(recording)}><CloseIcon/></div>\n                                }\n                                <h2>{recording.meta.name.substring(0, recording.meta.name.length - 4)}</h2>\n                                <span>\n                                    <Moment format=\"MMMM Do, YYYY\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <span>\n                                    <Moment format=\"LT\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <audio src={recording.url} controls=\"controls\" />\n                            </li>\n                        ))\n                        ): \n                        <div>\n                            <Loader type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30} />\n                            <p>Loading</p>\n                        </div>\n                    }\n                    {myRecordings.length === 0 && loadingComplete && (\n                        <div>\n                            <p>You do not have any recordings saved...</p> \n                            <p>Click above to create your first recording</p>\n                        </div>\n                    )\n                    }\n                </ul>\n                {deleteRecordingModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will permanently delete this recording</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteRecordingModal(false)}>Back</button>\n                        <button className=\"modalBtn cancel\" onClick={deleteRecording}>Delete</button>\n                    </div>\n                </div>) \n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx",["255"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport MicRecorder from \"mic-recorder-to-mp3\"\nimport { Link } from \"react-router-dom\"\n\nimport \"./NewRecording.scss\"\nimport { RecordingIcon } from \"./RecordingIcon\"\n\nconst recorder = new MicRecorder({ bitRate: 128 })\nlet userRef\n\nexport const NewRecording = ({setLoadingComplete, update, setUpdate, updateTwo, setUpdateTwo, recordingNames }) => {\n    const { isRecording, setIsRecording, blobURL, setBlobURL, isBlocked, recordingCreated, setRecordingCreated, firebase, user, recordTimerStarted, setRecordTimerStart, setRecordTimerRunning, recordTimerPaused, setRecordTimerPaused, recordTInterval, setRecordTInterval, recordTimer, setRecordTimer, recordDifferenceState, setRecordDifferenceState, } = useContext(StoreContext)\n    const [ recordingTitle, setRecordingTitle ] = useState(\"\")\n    const [ recordingFile, setRecordingFile] = useState(\"\")\n    const [ saveRecordingModal, setSaveRecordingModal ] = useState(false)\n    const [ nameExistsModal, setNameExistsModal ] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n\n    let startTime\n\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + 600)\n\n    const storageRef = firebase.storage().ref()\n    const audioRef = storageRef.child(\"audio\")\n\n    let userId\n    if(user) {\n        userId = user.uid\n    } \n    \n    useEffect(()=> {\n        if(user){\n            userRef = audioRef.child(userId)\n        }\n    }, [user])\n\n    useEffect(()=> {\n        if (saveRecordingModal || nameExistsModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ saveRecordingModal, nameExistsModal])\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden'\n        } else {\n            document.body.style.overflow = 'unset'\n        }\n    }, [modalOpen])\n\n    // const testBrowser = async () => {\n    //     let stream = await navigator.mediaDevices.getUserMedia({audio: true});\n    //     let track = stream.getAudioTracks()[0];\n    //     console.log(track.getCapabilities());\n    // }\n\n    // testBrowser()\n\n    // const getAudio = () => {\n    //     // navigator.mediaDevices.getUserMedia({ audio: true },\n    //     navigator.mediaDevices.getUserMedia({ audio: { \n    //         echoCancellation: false,\n    //         autoGainControl: true,\n    //         // sampleRate: 96000,\n    //         // sampleRate: 16000,\n    //         // noiseSuppression: false,\n    //         // googAutoGainControl: true,\n    //         // mozNoiseSuppression: false,\n    //         // mozAutoGainControl: false \n    //     }},\n    //         () => {\n    //         console.log('Permission Granted')\n    //         setIsBlocked(false);\n    //         },\n    //         () => {\n    //         console.log('Permission Denied')\n    //         setIsBlocked(true)\n    //         },\n    //     )\n    // }\n\n    const record = () => {\n        // getAudio()\n        setRecordingCreated(false)\n        if (isBlocked) {\n            console.log('Permission Denied')\n        } else {\n            recorder\n            .start()\n            .then(() => {\n                setIsRecording(true)\n                startTimer()\n            }).catch((e) => console.error(e))\n        }\n    }\n\n    const stopRecording = () => {\n        setRecordingCreated(true)\n        stopTimer()\n        recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                const file = new File(buffer, 'me-at-thevoice.mp3', {\n                    type: blob.type,\n                    lastModified: Date.now()\n                });\n                setRecordingFile(file)\n\n                const newBlobURL = URL.createObjectURL(blob)\n                setBlobURL(newBlobURL)\n                setIsRecording(false)\n            }).catch((e) => console.log(e));\n    }\n    \n    const discardRecording = () => {\n        setRecordingCreated(false)\n        setBlobURL(\"\")\n    }\n    \n    const handleSaveRecording = (e) => {\n        e.preventDefault()\n        nameCheck()\n    }\n\n    const nameCheck = () => {\n        const title = `${recordingTitle}.mp3`\n        if (recordingNames.includes(title)) {\n            setSaveRecordingModal(false)\n            setNameExistsModal(true)\n            // alert(\"name exists\")\n        } else {\n            saveRecording()\n        }\n    }\n    \n    const saveRecording = () => {\n        setLoadingComplete(false)\n        setSaveRecordingModal(false)\n        setNameExistsModal(false)\n        setRecordingCreated(false)\n\n\n        if (user) {\n            const recordingRef = userRef.child(`${recordingTitle}.mp3`)\n            recordingRef.put(recordingFile).then(() => {\n                const newUpdate = update + 1\n                setUpdate(newUpdate)\n            })\n            .then(()=> {\n                const newUpdateTwo = updateTwo + 1\n                setTimeout(()=>{\n                    setLoadingComplete(true)\n                    setUpdateTwo(newUpdateTwo)\n                }, 1000)\n            })\n        }\n        setRecordingTitle(\"\")\n    }\n\n    const startTimer = () => {\n        if(!recordTimerStarted){\n            setRecordTimerStart(true)\n        } \n        startTime = new Date().getTime()\n        setRecordTInterval(setInterval(getTime, 1000))\n        setRecordTimerRunning(true);\n        setRecordTimerPaused(false);\n    }\n\n    const getTime = () => {\n        let difference;\n        const updatedTime = new Date().getTime();\n            if (recordDifferenceState){\n                difference = (updatedTime - startTime) + recordDifferenceState\n                setRecordDifferenceState(difference)\n            } else {\n                difference = (updatedTime - startTime)\n                setRecordDifferenceState(difference)\n            }\n\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n            \n            hours = (hours < 10) ? `0${hours}` : hours;\n            minutes = (minutes < 10) ? `0${minutes}` : minutes;\n            seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n            setRecordTimer(`${hours}:${minutes}:${seconds}`)\n    }\n\n    const stopTimer = () => {\n        pause()\n        setRecordTimerStart(false)\n        setRecordTimer(\"00:00:00\")\n        setRecordTimerPaused(false)\n        setRecordDifferenceState(null)\n    }\n\n    const pause = () => {\n        if (!recordTimerPaused) {\n            setRecordTimerRunning(false)\n            setRecordTimerPaused(true)\n            clearInterval(recordTInterval)\n        } else {\n            setRecordTimerPaused(!recordTimerPaused)\n            startTimer()\n        }\n    }\n    \n    return (\n        <div className=\"record-container\">\n            {!recordingCreated && <RecordingIcon isRecording={isRecording} stopRecording={stopRecording} recordTimer={recordTimer} record={record}/>}\n            {recordingCreated &&\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                <h1 style={{paddingBottom: \".5em\"}}>Preview Recording</h1>\n                <audio src={blobURL} controls=\"controls\" />\n                <div>\n                    <div className=\"record-buttons\">\n                        {user ? (\n                            <>\n                                <button className=\"timerBtn cancelBtn\" onClick={discardRecording}>Discard</button>\n                                <button className=\"timerBtn startBtn\" onClick={()=>setSaveRecordingModal(true)}>Save</button> \n                            </>\n                            ) : (\n                                <button className=\"timerBtn cancelBtn\" onClick={discardRecording}>Discard</button>\n                            )}\n                    </div>\n                    {!user && <Link to=\"/dashboard\">Login or sign up for an account to save your recordings</Link>}\n                </div>\n            </div>\n            }\n            {saveRecordingModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"save-recording-form\" onSubmit={handleSaveRecording}>\n                            <h2>Save Recording</h2>\n                            <label htmlFor=\"recordingName\">Title*</label><br/>\n                            <input autoFocus value={recordingTitle} onChange={e=>setRecordingTitle(e.target.value)} type=\"text\" placeholder=\"Name your recording\" id=\"recordingName\" required/>\n                            <div style={{marginTop: \"1em\"}}>\n                                <button className=\"modalBtn cancel\" type=\"button\" onClick={()=>setSaveRecordingModal(false)}>Cancel</button>\n                                <button className=\"modalBtn submit\" type=\"submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>) \n            }\n            {nameExistsModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"save-recording-form\" onSubmit={handleSaveRecording}>\n                            <h2>File name exists</h2>\n                            <p style={{textAlign: \"center\"}}>Please enter a new name or overwrite your recording</p>\n                            <label htmlFor=\"recordingName\">Title*</label><br/>\n                            <input autoFocus value={recordingTitle} onChange={e=>setRecordingTitle(e.target.value)} type=\"text\" placeholder=\"Name your recording\" id=\"recordingName\" required/>\n                            <div style={{marginTop: \"1em\"}}>\n                                <button className=\"modalBtn cancel\" type=\"button\" onClick={saveRecording}>Overwrite</button>\n                                <button className=\"modalBtn submit\" type=\"submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>) \n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx",["256","257"],"/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx",["258","259"],"/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/App.jsx",["260"],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx",["261","262","263","264"],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx",["265"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx",["266"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx",["267","268","269","270"],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx",["271"],"/Users/lanegarner/Documents/Dev/shedr/src/components/RecordingIcon.jsx",[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"272","replacedBy":"276"},{"ruleId":"274","replacedBy":"277"},{"ruleId":"272","replacedBy":"278"},{"ruleId":"274","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":6,"column":1,"nodeType":"282","endLine":132,"endColumn":2},{"ruleId":"283","severity":1,"message":"284","line":34,"column":7,"nodeType":"285","endLine":34,"endColumn":9,"suggestions":"286"},{"ruleId":"283","severity":1,"message":"287","line":15,"column":8,"nodeType":"285","endLine":15,"endColumn":10,"suggestions":"288"},{"ruleId":"283","severity":1,"message":"287","line":21,"column":8,"nodeType":"285","endLine":21,"endColumn":10,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":13,"column":53,"nodeType":"292","messageId":"293","endLine":13,"endColumn":64},{"ruleId":"290","severity":1,"message":"294","line":8,"column":10,"nodeType":"292","messageId":"293","endLine":8,"endColumn":23},{"ruleId":"283","severity":1,"message":"287","line":18,"column":8,"nodeType":"285","endLine":18,"endColumn":10,"suggestions":"295"},{"ruleId":"283","severity":1,"message":"287","line":528,"column":8,"nodeType":"285","endLine":528,"endColumn":10,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":616,"column":17,"nodeType":"299","messageId":"300","endLine":616,"endColumn":30},{"ruleId":"283","severity":1,"message":"301","line":621,"column":8,"nodeType":"285","endLine":621,"endColumn":14,"suggestions":"302"},{"ruleId":"283","severity":1,"message":"301","line":630,"column":8,"nodeType":"285","endLine":630,"endColumn":26,"suggestions":"303"},{"ruleId":"283","severity":1,"message":"287","line":16,"column":8,"nodeType":"285","endLine":16,"endColumn":10,"suggestions":"304"},{"ruleId":"283","severity":1,"message":"305","line":51,"column":8,"nodeType":"285","endLine":51,"endColumn":23,"suggestions":"306"},{"ruleId":"283","severity":1,"message":"287","line":17,"column":8,"nodeType":"285","endLine":17,"endColumn":10,"suggestions":"307"},{"ruleId":"290","severity":1,"message":"308","line":31,"column":9,"nodeType":"292","messageId":"293","endLine":31,"endColumn":16},{"ruleId":"283","severity":1,"message":"309","line":58,"column":8,"nodeType":"285","endLine":58,"endColumn":22,"suggestions":"310"},{"ruleId":"283","severity":1,"message":"311","line":65,"column":8,"nodeType":"285","endLine":65,"endColumn":10,"suggestions":"312"},{"ruleId":"283","severity":1,"message":"313","line":118,"column":8,"nodeType":"285","endLine":118,"endColumn":10,"suggestions":"314"},{"ruleId":"283","severity":1,"message":"315","line":143,"column":8,"nodeType":"285","endLine":143,"endColumn":25,"suggestions":"316"},{"ruleId":"283","severity":1,"message":"317","line":168,"column":8,"nodeType":"285","endLine":168,"endColumn":27,"suggestions":"318"},{"ruleId":"283","severity":1,"message":"319","line":38,"column":8,"nodeType":"285","endLine":38,"endColumn":14,"suggestions":"320"},{"ruleId":"290","severity":1,"message":"321","line":11,"column":10,"nodeType":"292","messageId":"293","endLine":11,"endColumn":25},{"ruleId":"283","severity":1,"message":"287","line":26,"column":8,"nodeType":"285","endLine":26,"endColumn":10,"suggestions":"322"},{"ruleId":"283","severity":1,"message":"287","line":35,"column":8,"nodeType":"285","endLine":35,"endColumn":10,"suggestions":"323"},{"ruleId":"283","severity":1,"message":"305","line":127,"column":8,"nodeType":"285","endLine":127,"endColumn":14,"suggestions":"324"},{"ruleId":"283","severity":1,"message":"325","line":21,"column":7,"nodeType":"285","endLine":21,"endColumn":9,"suggestions":"326"},{"ruleId":"290","severity":1,"message":"327","line":18,"column":149,"nodeType":"292","messageId":"293","endLine":18,"endColumn":166},{"ruleId":"283","severity":1,"message":"328","line":51,"column":8,"nodeType":"285","endLine":51,"endColumn":14,"suggestions":"329"},{"ruleId":"283","severity":1,"message":"330","line":174,"column":8,"nodeType":"285","endLine":174,"endColumn":60,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":225,"column":39,"nodeType":"299","messageId":"334","endLine":225,"endColumn":41},{"ruleId":"283","severity":1,"message":"287","line":14,"column":8,"nodeType":"285","endLine":14,"endColumn":10,"suggestions":"335"},{"ruleId":"283","severity":1,"message":"287","line":12,"column":8,"nodeType":"285","endLine":12,"endColumn":10,"suggestions":"336"},{"ruleId":"283","severity":1,"message":"287","line":16,"column":8,"nodeType":"285","endLine":16,"endColumn":10,"suggestions":"337"},{"ruleId":"283","severity":1,"message":"305","line":45,"column":8,"nodeType":"285","endLine":45,"endColumn":23,"suggestions":"338"},{"ruleId":"283","severity":1,"message":"339","line":79,"column":8,"nodeType":"285","endLine":79,"endColumn":14,"suggestions":"340"},{"ruleId":"283","severity":1,"message":"339","line":93,"column":8,"nodeType":"285","endLine":93,"endColumn":14,"suggestions":"341"},{"ruleId":"283","severity":1,"message":"339","line":125,"column":8,"nodeType":"285","endLine":125,"endColumn":14,"suggestions":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],["343"],["344"],["343"],["344"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'changeState(s => ...)' if you only need 'state' in the 'changeState' call.","ArrayExpression",["345"],"React Hook useEffect has a missing dependency: 'setActivePage'. Either include it or remove the dependency array.",["346"],["347"],"no-unused-vars","'isRecording' is assigned a value but never used.","Identifier","unusedVar","'LogIconHeader' is defined but never used.",["348"],["349"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'setTunerMounted'. Either include it or remove the dependency array.",["350"],["351"],["352"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["353"],["354"],"'listRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadingComplete' and 'setRecordingNames'. Either include them or remove the dependency array. If 'setRecordingNames' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"React Hook useEffect has missing dependencies: 'fetchRecordings', 'updateList', and 'user'. Either include them or remove the dependency array.",["356"],"React Hook useEffect has missing dependencies: 'setLoadingComplete' and 'updateList'. Either include them or remove the dependency array. If 'setLoadingComplete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["357"],"React Hook useEffect has missing dependencies: 'myRecordingsMetadata' and 'myRecordingsURL'. Either include them or remove the dependency array.",["358"],"React Hook useEffect has a missing dependency: 'updateList'. Either include it or remove the dependency array.",["359"],"React Hook useEffect has missing dependencies: 'audioRef' and 'userId'. Either include them or remove the dependency array.",["360"],"'RecordIconLarge' is defined but never used.",["361"],["362"],["363"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["364"],"'setPolyrhythmMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTempo'. Either include it or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'playClick' and 'playing'. Either include them or remove the dependency array.",["366"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["367"],["368"],["369"],["370"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["371"],["372"],["373"],"no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"376","fix":"379"},{"desc":"376","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"376","fix":"385"},{"desc":"386","fix":"387"},{"desc":"376","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"376","fix":"401"},{"desc":"376","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"376","fix":"411"},{"desc":"376","fix":"412"},{"desc":"376","fix":"413"},{"desc":"386","fix":"414"},{"desc":"415","fix":"416"},{"desc":"415","fix":"417"},{"desc":"415","fix":"418"},"Update the dependencies array to be: [state]",{"range":"419","text":"420"},"Update the dependencies array to be: [setActivePage]",{"range":"421","text":"422"},{"range":"423","text":"422"},{"range":"424","text":"422"},{"range":"425","text":"422"},"Update the dependencies array to be: [freq, setTunerMounted]",{"range":"426","text":"427"},"Update the dependencies array to be: [freq, setTunerMounted, tunerOpen]",{"range":"428","text":"429"},{"range":"430","text":"422"},"Update the dependencies array to be: [user, setLogs, firebase]",{"range":"431","text":"432"},{"range":"433","text":"422"},"Update the dependencies array to be: [loadingComplete, myRecordings, setRecordingNames]",{"range":"434","text":"435"},"Update the dependencies array to be: [fetchRecordings, updateList, user]",{"range":"436","text":"437"},"Update the dependencies array to be: [setLoadingComplete, updateList]",{"range":"438","text":"439"},"Update the dependencies array to be: [loadingComplete, myRecordingsMetadata, myRecordingsURL]",{"range":"440","text":"441"},"Update the dependencies array to be: [update, updateList, updateTwo]",{"range":"442","text":"443"},"Update the dependencies array to be: [audioRef, user, userId]",{"range":"444","text":"445"},{"range":"446","text":"422"},{"range":"447","text":"422"},"Update the dependencies array to be: [firebase, user]",{"range":"448","text":"449"},"Update the dependencies array to be: [setUser]",{"range":"450","text":"451"},"Update the dependencies array to be: [setTempo, taps]",{"range":"452","text":"453"},"Update the dependencies array to be: [accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",{"range":"454","text":"455"},{"range":"456","text":"422"},{"range":"457","text":"422"},{"range":"458","text":"422"},{"range":"459","text":"432"},"Update the dependencies array to be: [logs, user]",{"range":"460","text":"461"},{"range":"462","text":"461"},{"range":"463","text":"461"},[830,832],"[state]",[412,414],"[setActivePage]",[699,701],[555,557],[11090,11092],[13566,13572],"[freq, setTunerMounted]",[13717,13735],"[freq, setTunerMounted, tunerOpen]",[469,471],[2054,2069],"[user, setLogs, firebase]",[613,615],[2018,2032],"[loadingComplete, myRecordings, setRecordingNames]",[2152,2154],"[fetchRecordings, updateList, user]",[3509,3511],"[setLoadingComplete, updateList]",[4268,4285],"[loadingComplete, myRecordingsMetadata, myRecordingsURL]",[4978,4997],"[update, updateList, updateTwo]",[1501,1507],"[audioRef, user, userId]",[784,786],[1141,1143],[3862,3868],"[firebase, user]",[564,566],"[setUser]",[1769,1775],"[setTempo, taps]",[4840,4892],"[accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",[329,331],[291,293],[491,493],[1701,1716],[3080,3086],"[logs, user]",[3423,3429],[3122,3128]]
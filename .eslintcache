[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/App.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/firebase.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/components/User.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/components/Login.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js":"26","/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js":"27","/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js":"28","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js":"29","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js":"30","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js":"31","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js":"32","/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js":"33","/Users/lanegarner/Documents/Dev/shedr/src/Store.js":"34"},{"size":255,"mtime":1613720734217,"results":"35","hashOfConfig":"36"},{"size":2788,"mtime":1613720734212,"results":"37","hashOfConfig":"36"},{"size":985,"mtime":1613637240624,"results":"38","hashOfConfig":"36"},{"size":2102,"mtime":1613720734213,"results":"39","hashOfConfig":"36"},{"size":3179,"mtime":1613517817635,"results":"40","hashOfConfig":"36"},{"size":1651,"mtime":1613720734214,"results":"41","hashOfConfig":"36"},{"size":1043,"mtime":1613720734214,"results":"42","hashOfConfig":"36"},{"size":836,"mtime":1613720734214,"results":"43","hashOfConfig":"36"},{"size":1931,"mtime":1613720734217,"results":"44","hashOfConfig":"36"},{"size":887,"mtime":1613720734217,"results":"45","hashOfConfig":"36"},{"size":3216,"mtime":1613720734216,"results":"46","hashOfConfig":"36"},{"size":12902,"mtime":1613720734216,"results":"47","hashOfConfig":"36"},{"size":61,"mtime":1612297958360,"results":"48","hashOfConfig":"36"},{"size":1339,"mtime":1613720734217,"results":"49","hashOfConfig":"36"},{"size":873,"mtime":1612799339284,"results":"50","hashOfConfig":"36"},{"size":925,"mtime":1612799702720,"results":"51","hashOfConfig":"36"},{"size":579,"mtime":1612286994566,"results":"52","hashOfConfig":"36"},{"size":1176,"mtime":1613522370532,"results":"53","hashOfConfig":"36"},{"size":658,"mtime":1612801131282,"results":"54","hashOfConfig":"36"},{"size":889,"mtime":1612799680026,"results":"55","hashOfConfig":"36"},{"size":479,"mtime":1613165360010,"results":"56","hashOfConfig":"36"},{"size":4489,"mtime":1612291900477,"results":"57","hashOfConfig":"36"},{"size":938,"mtime":1613720734215,"results":"58","hashOfConfig":"36"},{"size":571,"mtime":1613016751360,"results":"59","hashOfConfig":"36"},{"size":565,"mtime":1613078154086,"results":"60","hashOfConfig":"36"},{"size":5393,"mtime":1613238902672,"results":"61","hashOfConfig":"36"},{"size":805,"mtime":1613070173552,"results":"62","hashOfConfig":"36"},{"size":570,"mtime":1613069803267,"results":"63","hashOfConfig":"36"},{"size":3627,"mtime":1613720734215,"results":"64","hashOfConfig":"36"},{"size":7126,"mtime":1613720734215,"results":"65","hashOfConfig":"36"},{"size":475,"mtime":1612384701819,"results":"66","hashOfConfig":"36"},{"size":250,"mtime":1611363999277,"results":"67","hashOfConfig":"36"},{"size":661,"mtime":1613238838503,"results":"68","hashOfConfig":"36"},{"size":3190,"mtime":1613720734213,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgxmb7",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"75"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"75"},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/App.js",["146","147"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport Router from './Router'\nimport {Header} from './components/Header'\nimport {Footer} from './components/Footer'\nimport firebase, { auth, uiConfig } from './firebase.js';\n\nimport StoreProvider from \"./Store.js\";\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [logs, setLogs] = useState([])\n\n  const [activePage, setActivePage] = useState()\n\n  const [tempo, setTempo] = useState(120)\n  const [ playing, setPlaying ] = useState (false)\n  const [ timeSig, setTimeSig ] = useState(4)\n  const [ position, setPosition ] = useState(\"0:0:0\")\n  const [ accent, setAccent ] = useState(true)\n  const [clickVolume, setClickVolume] = useState(1)\n  const [polyrhythmMode, setPolyrhythmMode] = useState(false)\n  const [polyrhythm, setPolyrhythm] = useState(.6666666666666666666666666666666666666666666666666666667)\n  \n  const [droning, setDroning] = useState()\n  const [droneVolume, setDroneVolume] = useState(1)\n  const [root, setRoot] = useState(\"C\")\n  const [chordType, setChordType] = useState(\"minor ninth\")\n\n  const [activeSession, setActiveSession] = useState()\n  const [startDate, setStartDate] = useState(Date.now());\n\n  const [timerStarted, setTimerStart] = useState(false)\n  const [timerRunning, setTimerRunning] = useState(false)\n  const [timerPaused, setTimerPaused] = useState(false)\n  const [tInterval, setTInterval] = useState()\n  const [timer, setTimer] = useState(\"00:00:00\")\n  const [differenceState, setDifferenceState] = useState()\n\n  const [practiceTime, setPracticeTime] = useState({hours: \"00\", seconds: \"00\", minutes: \"00\"})\n  const [practiceTopicNotes, setPracticeTopicNotes] = useState({topic: \"\", notes: \"\"})\n  const [newLog, setNewLog] = useState()\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const closeMenu = () => {\n      setIsOpen(false)\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } \n    });\n  },[])\n\n  const removeLog = (logId) => {\n    const logsRef = firebase.database().ref(`/logs/${user.uid}/${logId}`);\n    logsRef.remove();\n  }\n\n  const logout = () => {\n    auth.signOut()\n    .then(() => {\n      setUser(null)\n    });  \n  }\n\n  return (\n    // <Provider store={store}>\n    // <FirebaseDatabaseProvider>\n    <StoreProvider>\n      <BrowserRouter>\n        <Header isOpen={isOpen} setIsOpen={setIsOpen} closeMenu={closeMenu} logout={logout} user={user} activePage={activePage} setActivePage={setActivePage} activeSession={activeSession} setActiveSession={setActiveSession} tempo={tempo} playing={playing} timeSig={timeSig} droning={droning} root={root} chordType={chordType} />\n        <Router polyrhythmMode={polyrhythmMode} setPolyrhythmMode={setPolyrhythmMode} polyrhythm={polyrhythm} setPolyrhythm={setPolyrhythm} setClickVolume={setClickVolume} clickVolume={clickVolume} uiConfig={uiConfig} firebaseAuth={firebase.auth()} logout={logout} user={user} removeLog={removeLog} setLogs={setLogs} logs={logs} firebase={firebase} setActivePage={setActivePage} newLog={newLog} setNewLog={setNewLog} practiceTopicNotes={practiceTopicNotes} setPracticeTopicNotes={setPracticeTopicNotes} practiceTime={practiceTime} setPracticeTime={setPracticeTime} timerStarted={timerStarted} setTimerStart={setTimerStart} timerRunning={timerRunning} setTimerRunning={setTimerRunning} timerPaused={timerPaused} setTimerPaused={setTimerPaused} tInterval={tInterval} setTInterval={setTInterval} timer={timer} setTimer={setTimer} differenceState={differenceState} setDifferenceState={setDifferenceState} startDate={startDate} setStartDate={setStartDate} activeSession={activeSession} setActiveSession={setActiveSession} tempo={tempo} setTempo={setTempo} playing={playing} setPlaying={setPlaying} timeSig={timeSig} setTimeSig={setTimeSig} position={position} setPosition={setPosition} accent={accent} setAccent={setAccent} droning={droning} setDroning={setDroning} droneVolume={droneVolume} setDroneVolume={setDroneVolume} root={root} setRoot={setRoot} chordType={chordType} setChordType={setChordType} />\n        <Footer closeMenu={closeMenu} activePage={activePage} setActivePage={setActivePage} />\n      </BrowserRouter>\n    </StoreProvider>\n    //  </FirebaseDatabaseProvider>\n  );\n}\n\nexport default App",["148","149"],"/Users/lanegarner/Documents/Dev/shedr/src/firebase.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Router.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js",["150"],"import \"./PracticeTimer.css\";\n\nexport const PracticeTimer = ({ pause, setStopSessionModal, setStartSessionModal, setStartDate, setPracticeTime, timerStarted, setTimerStart, timerRunning, setTimerRunning, timerPaused, setTimerPaused, tInterval, setTInterval, timer, setTimer, differenceState, setDifferenceState }) => {\n    \n    let startTime\n\n    const start = () => {\n        setStartSessionModal(true)\n    }\n\n    const stop = () => {\n        if(!timerPaused) {\n            pause()\n        }\n        setStopSessionModal(true)\n    }\n    \n    // const start = () => {\n    //     if(!timerStarted){\n    //         setTimerStart(true)\n    //     } \n    //     startTime = new Date().getTime()\n    //     setStartDate(Date.now())\n    //     setTInterval(setInterval(getTime, 1000))\n    //     setTimerRunning(true);\n    //     setTimerPaused(false);\n    // }\n    \n    const getTime = () => {\n        let difference;\n        const updatedTime = new Date().getTime();\n            if (differenceState){\n                difference = (updatedTime - startTime) + differenceState\n                setDifferenceState(difference)\n            } else {\n                difference = (updatedTime - startTime)\n                setDifferenceState(difference)\n            }\n\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n            \n            hours = (hours < 10) ? `0${hours}` : hours;\n            minutes = (minutes < 10) ? `0${minutes}` : minutes;\n            seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n            setTimer(`${hours}:${minutes}:${seconds}`)\n    }\n\n    // const pause = () => {\n    //         if (!timerPaused) {\n    //             setTimerRunning(false)\n    //             setTimerPaused(true)\n    //             clearInterval(tInterval)\n    //         } else {\n    //             setTimerPaused(!timerPaused)\n    //             start()\n    //         }\n    // }\n\n    // const stop = () => {\n    //     if(!timerPaused) {\n    //         pause()\n    //     }\n    //     const hrs = timer.slice(0,2)\n    //     const min = timer.slice(3,5)\n    //     const sec = timer.slice(6,8)\n    //     const pTime= [hrs, min, sec]\n    //     setPracticeTime(pTime)\n    //     setTimerStart(false)\n    //     setTimer(\"00:00:00\")\n    //     setTimerPaused(false)\n    //     setDifferenceState(null)\n    // }\n\n    // const reset = () => {\n    //     setTimerStart(false)\n    //     setTimerRunning(false)\n    // }\n\n    return (\n        <>\n            <div className=\"timerDisplay\">\n                {timer}\n            </div>\n            <br />\n            <div>\n                {timerRunning && <button className=\"timerBtn pauseBtn\" onClick={pause}>Pause</button>}\n                {timerPaused && <button className=\"timerBtn pauseBtn\" onClick={pause}>Resume</button>}\n                {timerStarted ? <button className=\"timerBtn stopBtn\" onClick={stop}>Stop</button> : <button className=\"timerBtn startBtn\" onClick={start}>Start</button>}\n            </div>\n        </>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js",["151","152"],"import React, { useEffect } from \"react\";\nimport { ForkIcon } from \"../icons/ForkIcon\";\n\nexport const Fork = ({ setActivePage }) => {\n    \n    useEffect(() => {\n        setActivePage(\"fork\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    const styles = {\n        forkContainer: {\n            paddingTop: \"10em\",\n            backgroundColor: \"#333\",\n            // height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            // justifyItems: \"center\",\n            color: \"white\",\n        },\n    }\n    return (\n        <div style={styles.forkContainer}>\n            <ForkIcon />\n            <h1>fork</h1>\n            <p>Tuner coming soon...</p>\n        </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/User.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.js",["153"],"import React, { useState, useEffect, useContext } from 'react'\nimport firebase from 'firebase'\nimport \"./PracticeLog.css\";\nimport { CloseIcon } from \"../icons/CloseIcon\"\nimport { EditIcon } from \"../icons/EditIcon\"\nimport { LogIcon } from \"../icons/LogIcon\"\nimport { Link } from 'react-router-dom'\nimport { StoreContext } from '../Store'\n\nexport const PracticeLog = () => {\n    const { user, logs, setLogs, removeLog } = useContext(StoreContext)\n\n    useEffect(() => {\n        if(user) {        \n        const logsRef = firebase.database().ref('logs/' + user.uid);\n        logsRef.orderByChild(\"startDate\").on('value', (snapshot) => {\n            let logs = snapshot.val();\n            // const sortedActivities = logs.sort((a, b) => b.startDate - a.startDate)\n            let newState = [];\n            for (let log in logs) {\n                let thisDate = new Date(logs[log].startDate).toLocaleDateString()\n                thisDate = thisDate.replace(/\"/g,\"\")\n                let thisTime = new Date(logs[log].startDate).toLocaleTimeString()\n                newState.push({\n                    id: log,\n                    startDate: JSON.stringify(thisDate),\n                    startTime: JSON.stringify(thisTime),\n                    practiceTime: logs[log].practiceTime,\n                    practiceTopicNotes: logs[log].practiceTopicNotes,\n                    userId: logs[log].userId,\n                    });\n                }\n                setLogs(newState)\n            });\n        }\n    }, [user, setLogs])\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    \n\n    const editLog = (params) => {\n        alert('edit feature coming soon...')\n    }\n    \n    console.log(typeof logs)\n    return (\n        <div className=\"logContainer\">\n            <LogIcon />\n            <h1>Practice log</h1>\n            {logs.length === 0 && <Link to=\"/\">Click here to create your first log</Link>}\n            <div className=\"log-grid\">\n                {logs.map((log, idx) => (\n                    <div key={log.id} id={log.id} className=\"log-card\">\n                        <div id={log.id} className=\"log-card-header\">\n                        \n                            <div>\n                                <div className=\"edit-log-btn\" onClick={() => editLog(log.id)}><EditIcon /></div>\n                                <div className=\"remove-log-btn\" onClick={() => removeLog(log.id)}><CloseIcon /></div>\n                            </div>\n\n                            <span className=\"cal-emoji\">🗓</span>\n                            <h2>{JSON.parse(log.startDate)}</h2>\n                    </div>\n                        <h2>{JSON.parse(log.startTime)}</h2>\n                        <h3>Total practice time:</h3>\n                        <span>\n                            <span>{log.practiceTime[0]}:{log.practiceTime[1]}:{log.practiceTime[2]}</span>\n                        </span><br />\n                        <h3>Topic:</h3>\n                        <span>{log.practiceTopicNotes.topic}</span>\n                        <h3>Notes:</h3>\n                        <span>{log.practiceTopicNotes.notes}</span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],["154","155"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Login.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js",["156","157","158"],"import { useState, useEffect, useRef , useContext} from 'react';\nimport './Metronome.css';\nimport * as Tone from 'tone'\nimport click1Sample from '../click1.flac';\nimport click2Sample from '../click2.wav';\nimport click3Sample from '../click3.wav';\nimport StartAudioContext from 'startaudiocontext'\nimport { StoreContext } from '../../../Store'\n\nconst click1 = new Tone.Player(click1Sample).toDestination()\nconst click2 = new Tone.Player(click2Sample).toDestination()\nconst click3 = new Tone.Player(click3Sample).toDestination()\n\nconst Metronome = () => {    \n    const { tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, setPosition, accent, setAccent, setClickVolume, clickVolume, polyrhythmMode, setPolyrhythmMode, polyrhythm, setPolyrhythm } = useContext(StoreContext)\n    const [taps, setTaps] = useState([])\n\n    const three = 0.6666666666666666666666666666666666666666666666666666667\n    const five = 0.4\n    const seven = 0.285714285714286\n\n    const handleTapTempo = () => {\n        if(!playing) {\n            click3.start()\n        }\n        let time = Date.now()\n        const newTaps = [...taps, time]\n        if (newTaps.length === 3) {\n            newTaps.shift()\n        }\n        console.log(newTaps)\n        setTaps(newTaps)\n    }\n\n    useEffect(() => {\n        if (taps.length > 1) {\n            let newTaps = []\n\n            taps.map((tap, i) => {\n                const tapMath = 60000 / (taps[i] - taps[i - 1])\n                newTaps.push(tapMath)\n            })\n            newTaps.shift()\n            let avgBpm = newTaps = newTaps.reduce((a,b) => a + b, 0) / newTaps.length\n            avgBpm = Math.round(avgBpm)\n            setTempo(avgBpm)\n        }\n    }, [taps])\n    \n    const handleClickVolume = (e) => {\n        setClickVolume(e.target.value)\n    }\n\n    const gainToDecibels = (value) => {\n        if (value == null) return 0\n        return 20 * (0.43429 * Math.log(value))\n    }\n\n    useEffect(() => {\n        click1.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n\n    useEffect(() => {\n        click2.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n\n    useEffect(() => {\n        click3.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n\n    const handleAccent = () => {\n        if (playing) {\n            stopClick()\n            setAccent(!accent)\n            playClick()\n        } else {\n            setAccent(!accent)\n        }\n    }\n\n    const handleTimeSig = (e) => {\n        setTimeSig(parseInt(e.target.value))\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempo = (e) => {\n        setTempo(e.target.value)\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const startStop = () => {\n        StartAudioContext(Tone.context)\n        Tone.start()\n\n        if(!playing) {\n            setPlaying(true)\n            playClick()\n        } else {\n            Tone.Transport.cancel();\n            Tone.Transport.stop();\n            setPlaying(false)\n        }\n    }\n\n    const playClick = () => {\n        const bpmNum = parseInt(tempo);\n        \n        Tone.Transport.bpm.value = bpmNum;\n        Tone.Transport.timeSignature = timeSig;        \n        \n        accent && (\n        Tone.Transport.scheduleRepeat((time) => {\n            click1.start(time)\n        }, \"1m\")\n        )        \n        \n        Tone.Transport.scheduleRepeat((time) => {\n            setPosition(Tone.Transport.position)\n            click3.start(time)\n        }, \".5\");\n\n        if(polyrhythmMode) {\n            setTimeSig(4)\n            Tone.Transport.scheduleRepeat((time) => {\n                setPosition(Tone.Transport.position)\n                click2.start(time)\n            }, polyrhythm);\n        }\n        Tone.Transport.start();\n    }\n\n    const stopClick = () => {\n        Tone.Transport.stop();\n        Tone.Transport.cancel();\n        Tone.Transport.position = \"0:0:0\"\n    }\n\n    const newPosition = parseInt(Tone.Transport.position.split(':')[1])\n    const didMountRef = useRef(false)\n\n    useEffect(() => {\n        if (didMountRef.current) {\n            if (playing) {\n                stopClick()\n                playClick()\n            }\n        } else didMountRef.current = true\n    }, [accent, timeSig, tempo, polyrhythm, polyrhythmMode])\n\n    return (\n        <div className=\"metronome\">\n        {playing ? <h1 style={{color: \"#5AC18E\"}}>Met</h1> : <h1 style={{color: \"white\"}}>Met</h1>}\n        <div>\n            <input checked={accent} type=\"checkbox\" id=\"accent\" onChange={handleAccent} />\n            <label htmlFor=\"accent\">Accent</label>\n        </div>\n        <div>\n            <input checked={polyrhythmMode} type=\"checkbox\" id=\"poly\" onChange={()=>setPolyrhythmMode(!polyrhythmMode)} />\n            <label htmlFor=\"poly\">Polyrhythm mode</label>\n        </div>\n        <div className=\"met-settings\">\n            {!polyrhythmMode ? (\n            <>\n            <label className=\"time-sig-label\" htmlFor=\"selectTimeSig\">Time signature</label><br/>\n            <select onChange={handleTimeSig} name=\"selectTimeSig\" id=\"selectTimeSig\" value={timeSig}>\n                <option value=\"4\">4/4</option>\n                <option value=\"3\">3/4</option>\n                <option value=\"5\">5/4</option>\n                <option value=\"7\">7/4</option>\n            </select>\n            </>\n            ) : (\n                <>\n                <label className=\"time-sig-label\" htmlFor=\"selectPoly\">Polyrhythm</label><br/>\n                <select onChange={(e)=>setPolyrhythm(e.target.value)} name=\"selectPoly\" id=\"selectPoly\" value={polyrhythm}>\n                    {/* <option value=\"3:2\">3:2</option> */}\n                    <option value={three}>3:4</option>\n                    <option value={five}>5:4</option>\n                    <option value={seven}>7:4</option>\n                    {/* <option value=\"7:8\">7:8</option> */}\n                </select>\n                </>\n            )}\n            <div className=\"bpm-slider\">\n                <label htmlFor=\"bpmSlider\">Tempo</label>\n                <div>{tempo} BPM</div>\n                <input\n                    id=\"bpmSlider\"\n                    className=\"Slider\"\n                    type=\"range\"\n                    min=\"01\"\n                    max=\"400\"\n                    value={tempo}\n                    onChange={handleTempo} />\n            </div>\n            <div>\n                <label htmlFor=\"volumeSlider\">Volume</label><br/>\n                <input \n                id=\"volumeSlider\"\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={clickVolume}\n                onChange={handleClickVolume}\n                />\n            </div>\n        </div>\n        <button id=\"startStopBtn\" onClick={startStop}>\n            {playing ? 'Stop' : 'Start'}\n        </button>\n        <button onMouseDown={handleTapTempo}>Tap</button>\n        {playing ? <h3 className=\"Count\" style={{\"fontSize\": \"6em\", \"color\":\"#FFF\"}}>{newPosition + 1}</h3> : <div></div>}\n        </div>\n    )\n}\n\nexport default Metronome;","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Store.js",["159"],"import React, { useState } from 'react'\n\nexport const StoreContext = React.createContext(null)\n\nexport default ({ children }) => {\n\n    const [user, setUser] = useState(null)\n    const [logs, setLogs] = useState([])\n\n    const [activePage, setActivePage] = useState()\n\n    const [tempo, setTempo] = useState(120)\n    const [ playing, setPlaying ] = useState (false)\n    const [ timeSig, setTimeSig ] = useState(4)\n    const [ position, setPosition ] = useState(\"0:0:0\")\n    const [ accent, setAccent ] = useState(true)\n    const [clickVolume, setClickVolume] = useState(1)\n    const [polyrhythmMode, setPolyrhythmMode] = useState(false)\n    const [polyrhythm, setPolyrhythm] = useState(.6666666666666666666666666666666666666666666666666666667)\n\n    const [droning, setDroning] = useState()\n    const [droneVolume, setDroneVolume] = useState(1)\n    const [root, setRoot] = useState(\"C\")\n    const [chordType, setChordType] = useState(\"minor ninth\")\n\n    const [activeSession, setActiveSession] = useState()\n    const [startDate, setStartDate] = useState(Date.now());\n\n    const [timerStarted, setTimerStart] = useState(false)\n    const [timerRunning, setTimerRunning] = useState(false)\n    const [timerPaused, setTimerPaused] = useState(false)\n    const [tInterval, setTInterval] = useState()\n    const [timer, setTimer] = useState(\"00:00:00\")\n    const [differenceState, setDifferenceState] = useState()\n\n    const [practiceTime, setPracticeTime] = useState({hours: \"00\", seconds: \"00\", minutes: \"00\"})\n    const [practiceTopicNotes, setPracticeTopicNotes] = useState({topic: \"\", notes: \"\"})\n    const [newLog, setNewLog] = useState()\n\n    const [isOpen, setIsOpen] = useState(false)  \n\n    const store = {\n        user: [user, setUser],\n        logs: [logs, setLogs],\n\n        activePage: [activePage, setActivePage],\n        setActivePage: setActivePage,\n\n        tempo: [tempo, setTempo],\n        playing: [ playing, setPlaying ],\n        timeSig: [ timeSig, setTimeSig ],\n        position: [ position, setPosition ],\n        accent: [ accent, setAccent ],\n        clickVolume: [clickVolume, setClickVolume],\n        polyrhythmMode: [polyrhythmMode, setPolyrhythmMode],\n        polyrhythm: [polyrhythm, setPolyrhythm],\n        \n        droning: [droning, setDroning],\n        droneVolume: [droneVolume, setDroneVolume],\n        root: [root, setRoot],\n        chordType: [chordType, setChordType],\n    \n        activeSession: [activeSession, setActiveSession],\n        startDate: [startDate, setStartDate],\n    \n        timerStarted: [timerStarted, setTimerStart],\n        timerRunning: [timerRunning, setTimerRunning],\n        timerPaused: [timerPaused, setTimerPaused],\n        tInterval: [tInterval, setTInterval],\n        timer: [timer, setTimer],\n        differenceState: [differenceState, setDifferenceState],\n    \n        practiceTime: [practiceTime, setPracticeTime],\n        practiceTopicNotes: [practiceTopicNotes, setPracticeTopicNotes],\n        newLog: [newLog, setNewLog],\n    \n        isOpen: [isOpen, setIsOpen],\n\n    }\n\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}",{"ruleId":"160","severity":1,"message":"161","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":59,"column":7,"nodeType":"166","endLine":59,"endColumn":9,"suggestions":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"160","severity":1,"message":"172","line":29,"column":11,"nodeType":"162","messageId":"163","endLine":29,"endColumn":18},{"ruleId":"160","severity":1,"message":"173","line":6,"column":13,"nodeType":"162","messageId":"163","endLine":6,"endColumn":23},{"ruleId":"164","severity":1,"message":"174","line":11,"column":8,"nodeType":"166","endLine":11,"endColumn":10,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"168","replacedBy":"176"},{"ruleId":"170","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":39,"column":31,"nodeType":"180","messageId":"181","endLine":39,"endColumn":33},{"ruleId":"164","severity":1,"message":"182","line":48,"column":8,"nodeType":"166","endLine":48,"endColumn":14,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"184","line":154,"column":8,"nodeType":"166","endLine":154,"endColumn":60,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":6,"column":1,"nodeType":"188","endLine":102,"endColumn":2},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["189"],"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'getTime' is assigned a value but never used.","'activePage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setActivePage'. Either include it or remove the dependency array.",["192"],["190"],["191"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setTempo'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has missing dependencies: 'playClick' and 'playing'. Either include them or remove the dependency array.",["194"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"195","fix":"196"},"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [auth, setUser]",{"range":"203","text":"204"},"Update the dependencies array to be: [setActivePage]",{"range":"205","text":"206"},"Update the dependencies array to be: [setTempo, taps]",{"range":"207","text":"208"},"Update the dependencies array to be: [accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",{"range":"209","text":"210"},[2164,2166],"[auth, setUser]",[331,333],"[setActivePage]",[1691,1697],"[setTempo, taps]",[4275,4327],"[accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]"]
[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/App.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/icons/homeIcon.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/components/User.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js":"26"},{"size":296,"mtime":1612306784026,"results":"27","hashOfConfig":"28"},{"size":1367,"mtime":1612500605450,"results":"29","hashOfConfig":"28"},{"size":1620,"mtime":1612488070587,"results":"30","hashOfConfig":"28"},{"size":609,"mtime":1612284415782,"results":"31","hashOfConfig":"28"},{"size":824,"mtime":1612286994566,"results":"32","hashOfConfig":"28"},{"size":617,"mtime":1612296509624,"results":"33","hashOfConfig":"28"},{"size":1291,"mtime":1612416905877,"results":"34","hashOfConfig":"28"},{"size":579,"mtime":1612286994566,"results":"35","hashOfConfig":"28"},{"size":997,"mtime":1612293041406,"results":"36","hashOfConfig":"28"},{"size":874,"mtime":1612286994566,"results":"37","hashOfConfig":"28"},{"size":840,"mtime":1612286994565,"results":"38","hashOfConfig":"28"},{"size":4489,"mtime":1612291900477,"results":"39","hashOfConfig":"28"},{"size":707,"mtime":1612290369298,"results":"40","hashOfConfig":"28"},{"size":1150,"mtime":1612419548809,"results":"41","hashOfConfig":"28"},{"size":2554,"mtime":1612497229152,"results":"42","hashOfConfig":"28"},{"size":759,"mtime":1612308543736,"results":"43","hashOfConfig":"28"},{"size":495,"mtime":1612307997216,"results":"44","hashOfConfig":"28"},{"size":548,"mtime":1612306956556,"results":"45","hashOfConfig":"28"},{"size":61,"mtime":1612297958360,"results":"46","hashOfConfig":"28"},{"size":1822,"mtime":1612500605451,"results":"47","hashOfConfig":"28"},{"size":3665,"mtime":1612500605451,"results":"48","hashOfConfig":"28"},{"size":475,"mtime":1612384701819,"results":"49","hashOfConfig":"28"},{"size":250,"mtime":1611363999277,"results":"50","hashOfConfig":"28"},{"size":3092,"mtime":1612500605451,"results":"51","hashOfConfig":"28"},{"size":2386,"mtime":1612481682133,"results":"52","hashOfConfig":"28"},{"size":3385,"mtime":1612492851348,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1hgxmb7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],["112","113"],"/Users/lanegarner/Documents/Dev/shedr/src/App.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js",["114","115"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/homeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js",["116"],"import React from 'react'\nimport './VegBurg.css'\n\nimport { slide as Menu } from 'react-burger-menu'\n\nclass VegBurg extends React.Component {\nshowSettings (event) {\n    event.preventDefault();\n    // .\n    // .\n    // .\n}\n\nrender () {\n    // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\n    return (\n    <Menu right>\n        <a id=\"home\" className=\"menu-item\" href=\"/\">Home</a>\n        <a id=\"about\" className=\"menu-item\" href=\"/about\">About</a>\n        <a id=\"contact\" className=\"menu-item\" href=\"/contact\">Contact</a>\n        <a onClick={ this.showSettings } className=\"menu-item--small\" href=\"\">Settings</a>\n    </Menu>\n    );\n}\n}\n\nexport default VegBurg;","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Router.js",["117"],"/Users/lanegarner/Documents/Dev/shedr/src/components/User.js",["118"],"import { Logo } from \"../icons/Logo\";\n\nexport const User = () => {\n\n    const styles = {\n        userContainer: {\n            paddingTop: \"10em\",\n            backgroundColor: \"#333\",\n            height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // alignItems: \"center\",\n            color: \"white\",\n        },\n        userDashboard: {\n            display: \"flex\",\n            justifyContent: \"space-around\"\n        }\n    };\n    return (\n        <div style={styles.userContainer}>\n            <h1>User</h1>\n            <div style={styles.userDashboard}>\n                <h2>Practice log</h2>\n                <h2>Repertoire list</h2>\n                <h2>Practice stats</h2>\n            </div>\n        </div>\n    )\n}\n\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js",["119"],"import Metronome from './Components/Metronome';\nimport { Drone } from './Components/Drone';\n\nexport const MetDrone = ({ tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, position, setPosition, accent, setAccent, droning, setDroning, droneVolume, setDroneVolume, root, setRoot, chordType, setChordType }) => {\n\n    const styles = {\n        metDroneContainer: {\n            paddingTop: \"8em\",\n            backgroundColor: \"#333\",\n            paddingBottom: \"8em\",\n            minHeight: \"70vh\",\n\n        },\n        metDroneHeadline: {\n            textAlign: \"center\",\n            color: \"#5AC18E\",\n            paddingBottom: \"1em\",\n        },\n        metDroneComponentContainer: {\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyItems: \"center\",\n            justifyContent: \"space-around\",\n            flexWrap: \"wrap\",\n        }\n    };\n\n    return (\n        // <div>\n            <div style={styles.metDroneContainer}>\n            <h1 style={styles.metDroneHeadline}>MetDrone</h1>\n                <div style={styles.metDroneComponentContainer}>\n                    <div style={{padding: '3em'}}>\n                        <Metronome tempo={tempo} setTempo={setTempo} playing={playing} setPlaying={setPlaying} timeSig={timeSig} setTimeSig={setTimeSig} position={position} setPosition={setPosition} accent={accent} setAccent={setAccent} />\n                    </div>\n                    <div style={{padding: '3em'}}>\n                        <Drone droning={droning} setDroning={setDroning} droneVolume={droneVolume} setDroneVolume={setDroneVolume} root={root} setRoot={setRoot} chordType={chordType} setChordType={setChordType} />\n                    </div>\n                </div>\n            </div>\n        // </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js",["120","121","122","123","124","125","126","127","128"],"import { useState, useEffect } from 'react';\nimport './Metronome.css';\nimport * as Tone from 'tone'\nimport { TimeSigSelect } from \"./TimeSigSelect\";\nimport { Accent } from \"./Accent\"\nimport click1Sample from '../click1.flac';\nimport click2Sample from '../click2.wav';\nimport click3Sample from '../click3.wav';\nimport StartAudioContext from 'startaudiocontext'\n\nconst click1 = new Tone.Player(click1Sample).toDestination()\nconst click2 = new Tone.Player(click2Sample).toDestination()\nconst click3 = new Tone.Player(click3Sample).toDestination()\n\nconst Metronome = ({ tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, position, setPosition, accent, setAccent }) => {\n    // const [ playing, setPlaying ] = useState (false);\n    // const [ timeSig, setTimeSig ] = useState(4);\n    // const [ position, setPosition ] = useState(\"0:0:0\");\n    // const [ accent, setAccent ] = useState(false);\n    \n    const [ bpm, setBpm ] = useState(120);\n    const [ subdivision, setSubDivision ] = useState(\"\");\n\n    // const handleBpmChange = e => {\n    //     const newBpm = e.target.value;\n    //     Tone.Transport.cancel();\n    //     Tone.Transport.stop();\n    //     Tone.Transport.position = \"0:0:0\"\n        \n    //     if(playing) {\n    //         setBpm(newBpm)\n    //         playClick()\n    //         Tone.Transport.start()\n    //     } else {\n    //         setBpm(newBpm)\n    //     }\n    // }\n\n    // const handleTimeSigChange = e => {\n    //     const newTimeSig = parseInt(e.target.value);        \n        \n    //     if(playing) {\n    //         // Tone.Transport.cancel();\n\n    //         playClick()\n    //     } else {\n    //         setTimeSig(newTimeSig)\n    //     }\n    // }\n    // useEffect(() => {\n    //     // console.log(tempo)\n    //     setTempo(tempo)\n    // },[])\n\n\n    useEffect(() => {\n        \n        if (playing) {\n            stopClick()\n            playClick()\n        } \n\n    }, [accent, timeSig, tempo])\n\n    \n    const startStop = () => {\n        StartAudioContext(Tone.context)\n        Tone.start()\n\n        if(!playing) {\n            setPlaying(true)\n            playClick()\n        } else {\n            Tone.Transport.cancel();\n            Tone.Transport.stop();\n            setPlaying(false)\n        }\n    }\n\n    const playClick = () => {\n        const bpmNum = parseInt(tempo);\n        \n        Tone.Transport.bpm.value = bpmNum;\n        Tone.Transport.timeSignature = timeSig;        \n        \n        accent && (\n        Tone.Transport.scheduleRepeat((time) => {\n            click1.start(time)\n        }, \"1m\")\n        )        \n        \n        Tone.Transport.scheduleRepeat((time) => {\n            setPosition(Tone.Transport.position)\n            click3.start(time)\n            console.log(Tone.Transport.position)\n        }, \"4n\");\n        \n        Tone.Transport.start();\n    }\n\n    const stopClick = () => {\n        Tone.Transport.stop();\n        Tone.Transport.cancel();\n        Tone.Transport.position = \"0:0:0\"\n\n    }\n\n\n        const newPosition = parseInt(Tone.Transport.position.split(':')[1])\n\n        return (\n            <div className=\"metronome\">\n            {playing ? <h1 style={{color: \"orange\"}}>met</h1> : <h1 style={{color: \"white\"}}>met</h1>}\n            <div>\n                <input type=\"checkbox\" id=\"checkbox\" value=\"accent\" onChange={() => setAccent(!accent)} />\n                <label htmlFor=\"Accent\">Accent</label>\n            </div>\n            <label htmlFor=\"selectTimeSig\">Time signature</label>\n            <select onChange={(e) => setTimeSig(parseInt(e.target.value))} name=\"selectTimeSig\" id=\"selectTimeSig\" value={timeSig}>\n                <option value=\"4\">4/4</option>\n                <option value=\"3\">3/4</option>\n                <option value=\"5\">5/4</option>\n                <option value=\"7\">7/4</option>\n            </select>\n            <div className=\"bpm-slider\">\n                <label htmlFor=\"bpmSlider\">Tempo</label>\n                <div>{tempo} BPM</div>\n                <input\n                    id=\"bpmSlider\"\n                    className=\"Slider\"\n                    type=\"range\"\n                    min=\"01\"\n                    max=\"500\"\n                    value={tempo}\n                    onChange={(e) => setTempo(e.target.value)} />\n            </div>\n            <button id=\"startStopBtn\" onClick={startStop}>\n                {playing ? 'Stop' : 'Start'}\n            </button>\n            <button>Tap</button>\n            {playing ? <h3 className=\"Count\" style={{\"fontSize\": \"6em\", \"color\":\"#FFF\"}}>{newPosition + 1}</h3> : <div></div>}\n            \n            </div>\n        );\n    // }\n}\n\nexport default Metronome;","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js",["129"],"import React, { useState, useEffect } from 'react'\nimport './Drone.css'\nimport * as Tone from 'tone'\nimport StartAudioContext from 'startaudiocontext'\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { Chord, ChordType } from \"@tonaljs/tonal\";\n\nconst synth = new Tone.PolySynth({\n    oscillator: {\n        type: \"sine\"\n    },\n    envelope: {\n        attack: 2,\n        decay: 1,\n        sustain: 1,\n        release: 0.5,\n    },\n});\nconst filter = new Tone.Filter(2000, \"lowpass\")\nconst verb = new Tone.Reverb(1)\nconst wide = new Tone.StereoWidener()\nsynth.chain( filter, verb, wide, Tone.Destination)\n\nlet chord;\n\nexport const Drone = ({ droning, setDroning, droneVolume, setDroneVolume, root, setRoot, chordType, setChordType }) => {\n    // const [droning, setDroning] = useState(false)\n    // const [droneVolume, setDroneVolume] = useState(-10)\n    // const [root, setRoot] = useState(\"C\")\n    // const [chordType, setChordType] = useState(\"minor ninth\")\n    \n    let myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n    const chordTypes = ChordType.names()\n\n\n    // let chord = Chord.getChord(\"min9\", \"C4\").notes;\n    // let chord\n\n    useEffect(() => {\n        // const myChord = Chord.get(root + chordType);\n            setDroning(false)\n            myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n            // const myChord = Chord.getChord(chordType, `${root}4`, \"C5\");\n\n        chord = myChord.notes\n    }, [root, chordType])\n\n    // const myRoot = `\"${root}4\"`\n    // const myChord = Chord.get(root + chordType);\n    // const myChord = Chord.getChord(chordType, `${root}4`, \"C5\");\n    // const chord = myChord.notes\n    \n    const test = () => {\n        const chordTypes = ChordType.names()\n        // chordTypes.map(chord => console.log(chord))\n        console.log(myChord)\n        // console.log(`\"${root}4\"`)\n    }\n    \n    // const filter = new Tone.Filter(2000, \"lowpass\")\n    // const verb = new Tone.Reverb(1)\n    // const wide = new Tone.StereoWidener()\n    // synth.chain( filter, verb, wide, Tone.Destination)\n\n\n\n    // const vlm = volume\n    // const vol = new Tone.Volume({volume})\n    // const vol = new Tone.Volume(-12).toDestination();\n\n    // synth.chain( filter, verb, wide, vol, Tone.Destination)\n\n    const startDrone = () => {\n        StartAudioContext(Tone.context)\n        setDroning(true)\n        // synth.triggerAttack(chord)\n    }\n\n    // const stopDrone = () => {\n    //     synth.triggerRelease(chord)\n    //     // synth.releaseAll()\n    //     setDroning(false)\n    //     // console.log(\"stop\")\n    // }\n\n    useEffect(() => {\n\n        droning ? synth.triggerAttack(chord) : synth.releaseAll();\n    }, [droning])\n    \n\n    useEffect(() => {\n        // stopDrone()\n        synth.volume.value = droneVolume\n        console.log(synth.volume.value)\n    }, [droneVolume])\n\n    return (\n        <div className=\"Drone\">\n            {/* <button onClick={test}>Test</button> */}\n            <h1 style={{color: \"white\"}}>drone</h1>\n            <input \n                value={root} \n                onChange={(e) => setRoot(e.target.value)}\n                type=\"text\" \n                placeholder=\"root\"/>\n            <select value={chordType} onChange={(e) => setChordType(e.target.value)} name=\"selectDroneRoot\" id=\"selectDroneRoot\">\n                {chordTypes.map((chord, id) => <option key={id} value={chord}>{chord}</option>)}\n                {/* <optgroup label=\"Triads\">\n                    <option value=\"min\">min</option>\n                    <option value=\"major\">maj</option>\n                    <option value=\"dim\">dim</option>\n                    <option value=\"aug\">aug</option>{}\n                </optgroup>\n                <optgroup label=\"7th\">\n                    <option value=\"maj7\">maj7</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"min7\">min7</option>\n                    <option value=\"min7b5\">min7b5</option>\n                    <option value=\"dim7\">dim7</option>\n                    <option value=\"min7#5\">min7#5</option>\n                </optgroup>\n                <optgroup label=\"9th\">\n                    <option value=\"maj9\">maj9</option>\n                    <option value=\"9\">9</option>\n                    <option value=\"minor9\">min9</option>\n                </optgroup> */}\n            </select>\n\n            {/* {!droning ? <button onClick={() => setDroning(!droning)}>Start</button> : <button onClick={stopDrone}>Stop</button>} */}\n            {!droning ? <button onClick={startDrone}>Start</button> : <button onClick={() => setDroning(!droning)}>Stop</button> }\n            \n            \n            <div>\n                <VolumeDown />\n                <input \n                    type=\"range\"\n                    min={-100}\n                    max={0}\n                    step=\"0.1\"\n                    value={droneVolume}\n                    onChange={(e) => setDroneVolume(e.target.value)}\n                />\n                <VolumeUp />\n            </div>\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js",["130"],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js",["131","132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"142","line":7,"column":10,"nodeType":"140","messageId":"141","endLine":7,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":21,"column":9,"nodeType":"145","endLine":21,"endColumn":79},{"ruleId":"138","severity":1,"message":"146","line":20,"column":7,"nodeType":"140","messageId":"141","endLine":20,"endColumn":21},{"ruleId":"138","severity":1,"message":"147","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":5,"column":5,"nodeType":"150","messageId":"151","endLine":5,"endColumn":55},{"ruleId":"138","severity":1,"message":"152","line":1,"column":20,"nodeType":"140","messageId":"141","endLine":1,"endColumn":29},{"ruleId":"138","severity":1,"message":"153","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":23},{"ruleId":"138","severity":1,"message":"154","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":12,"column":7,"nodeType":"140","messageId":"141","endLine":12,"endColumn":13},{"ruleId":"138","severity":1,"message":"156","line":16,"column":13,"nodeType":"140","messageId":"141","endLine":16,"endColumn":16},{"ruleId":"138","severity":1,"message":"157","line":16,"column":18,"nodeType":"140","messageId":"141","endLine":16,"endColumn":24},{"ruleId":"138","severity":1,"message":"158","line":17,"column":13,"nodeType":"140","messageId":"141","endLine":17,"endColumn":24},{"ruleId":"138","severity":1,"message":"159","line":17,"column":26,"nodeType":"140","messageId":"141","endLine":17,"endColumn":40},{"ruleId":"138","severity":1,"message":"160","line":80,"column":11,"nodeType":"140","messageId":"141","endLine":80,"endColumn":20},{"ruleId":"138","severity":1,"message":"161","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"152","line":1,"column":27,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"138","severity":1,"message":"162","line":9,"column":12,"nodeType":"140","messageId":"141","endLine":9,"endColumn":24},{"ruleId":"138","severity":1,"message":"163","line":9,"column":26,"nodeType":"140","messageId":"141","endLine":9,"endColumn":41},{"ruleId":"148","severity":1,"message":"149","line":53,"column":33,"nodeType":"150","messageId":"151","endLine":53,"endColumn":78},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'findByLabelText' is defined but never used.","Identifier","unusedVar","'VegBurgIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ProtectedRoute' is assigned a value but never used.","'Logo' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'TimeSigSelect' is defined but never used.","'Accent' is defined but never used.","'click2' is assigned a value but never used.","'bpm' is assigned a value but never used.","'setBpm' is assigned a value but never used.","'subdivision' is assigned a value but never used.","'setSubDivision' is assigned a value but never used.","'stopClick' is assigned a value but never used.","'useState' is defined but never used.","'practiceTime' is assigned a value but never used.","'setPracticeTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/App.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/icons/homeIcon.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/components/User.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js":"26","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.js":"27","/Users/lanegarner/Documents/Dev/shedr/src/firebase.js":"28"},{"size":296,"mtime":1612306784026,"results":"29","hashOfConfig":"30"},{"size":5186,"mtime":1612852660354,"results":"31","hashOfConfig":"30"},{"size":1144,"mtime":1612850734691,"results":"32","hashOfConfig":"30"},{"size":609,"mtime":1612284415782,"results":"33","hashOfConfig":"30"},{"size":873,"mtime":1612799339284,"results":"34","hashOfConfig":"30"},{"size":658,"mtime":1612801131282,"results":"35","hashOfConfig":"30"},{"size":1389,"mtime":1612804068685,"results":"36","hashOfConfig":"30"},{"size":579,"mtime":1612286994566,"results":"37","hashOfConfig":"30"},{"size":1173,"mtime":1612799776835,"results":"38","hashOfConfig":"30"},{"size":925,"mtime":1612799702720,"results":"39","hashOfConfig":"30"},{"size":889,"mtime":1612799680026,"results":"40","hashOfConfig":"30"},{"size":4489,"mtime":1612291900477,"results":"41","hashOfConfig":"30"},{"size":1877,"mtime":1612850791256,"results":"42","hashOfConfig":"30"},{"size":1539,"mtime":1612804193211,"results":"43","hashOfConfig":"30"},{"size":4541,"mtime":1612851993818,"results":"44","hashOfConfig":"30"},{"size":949,"mtime":1612851725645,"results":"45","hashOfConfig":"30"},{"size":538,"mtime":1612804216849,"results":"46","hashOfConfig":"30"},{"size":591,"mtime":1612804233253,"results":"47","hashOfConfig":"30"},{"size":61,"mtime":1612297958360,"results":"48","hashOfConfig":"30"},{"size":1866,"mtime":1612804327786,"results":"49","hashOfConfig":"30"},{"size":3953,"mtime":1612506128011,"results":"50","hashOfConfig":"30"},{"size":475,"mtime":1612384701819,"results":"51","hashOfConfig":"30"},{"size":250,"mtime":1611363999277,"results":"52","hashOfConfig":"30"},{"size":3147,"mtime":1612504727972,"results":"53","hashOfConfig":"30"},{"size":6877,"mtime":1612852416528,"results":"54","hashOfConfig":"30"},{"size":8415,"mtime":1612720735518,"results":"55","hashOfConfig":"30"},{"size":1222,"mtime":1612853948344,"results":"56","hashOfConfig":"30"},{"size":576,"mtime":1612849956880,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1hgxmb7",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],["122","123"],"/Users/lanegarner/Documents/Dev/shedr/src/App.js",["124","125"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Header.js",["126","127","128"],"import { findByLabelText } from '@testing-library/react';\nimport React from 'react'\nimport { HomeIcon } from \"../icons/HomeIcon\";\nimport { UserIcon } from \"../icons/UserIcon\";\nimport { Link } from 'react-router-dom'\nimport { matchPath } from \"react-router-dom\";\n\nimport \"./Header.css\"\n\nimport { VegBurgIcon } from \"../icons/VegBurgIcon\";\nimport VegBurg from \"./VegBurg\"\n\nexport const Header = ({ login, logout, user, activePage, setActivePage, activeSession, tempo, playing, timeSig, droning, root, chordType }) => {\n\n    return (\n        <header>\n            <nav>\n                <Link to=\"/\">\n                    <HomeIcon activePage={activePage} />\n                </Link>\n                <Link to=\"user\">\n                    <UserIcon activePage={activePage} />\n                </Link>\n\n            </nav>\n                {activeSession && <Link to=\"/form\">Current practice session</Link>}\n                {playing && <Link to=\"./metdrone\">{tempo}BPM {timeSig}/4</Link>}\n                {droning && <Link to=\"./metdrone\">{root} {chordType}</Link>}\n            <VegBurg login={login} logout={logout} user={user} />\n        </header>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/icons/homeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.js",["129"],"import React from 'react'\nimport './VegBurg.css'\n\nimport { slide as Menu } from 'react-burger-menu'\n\nconst VegBurg = ({ login, logout, user }) =>{\n\nconst showSettings = (event) => {\n    event.preventDefault();\n    // .\n    // .\n    // .\n}\n\n\n    // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\n    return (\n    <Menu right>\n        {user ?\n            <button onClick={logout}>Log Out</button>                \n            :\n            <button onClick={login}>Log In</button>              \n        }\n        <a id=\"home\" className=\"menu-item\" href=\"/\">Home</a>\n        <a id=\"about\" className=\"menu-item\" href=\"/about\">About</a>\n        <a id=\"contact\" className=\"menu-item\" href=\"/contact\">Contact</a>\n        <a onClick={ showSettings } className=\"menu-item--small\" href=\"\">Settings</a>\n    </Menu>\n    );\n\n}\n\nexport default VegBurg;\n\n\n\n\n// import React from 'react'\n// import './VegBurg.css'\n\n// import { slide as Menu } from 'react-burger-menu'\n\n// class VegBurg extends React.Component {\n// showSettings (event) {\n//     event.preventDefault();\n//     // .\n//     // .\n//     // .\n// }\n\n// render () {\n//     // NOTE: You also need to provide styles, see https://github.com/negomi/react-burger-menu#styling\n//     return (\n//     <Menu right>\n//         {this.state.user ?\n//             <button onClick={this.logout}>Log Out</button>                \n//             :\n//             <button onClick={this.login}>Log In</button>              \n//         }\n//         <a id=\"home\" className=\"menu-item\" href=\"/\">Home</a>\n//         <a id=\"about\" className=\"menu-item\" href=\"/about\">About</a>\n//         <a id=\"contact\" className=\"menu-item\" href=\"/contact\">Contact</a>\n//         <a onClick={ this.showSettings } className=\"menu-item--small\" href=\"\">Settings</a>\n//     </Menu>\n//     );\n// }\n// }\n\n// export default VegBurg;","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.js",["130"],"import { useEffect } from \"react\";\nimport { NavLink } from 'react-router-dom'\nimport { Logo } from \"../icons/Logo\";\n\n\nexport const Home = ({ setActivePage, activeSession, setActiveSession }) => {\n    \n    // useEffect(() => {\n    //     setActivePage(\"home\")\n    // }, [])\n\n    const startSession = () => {\n        console.log('start')\n        setActiveSession(true)\n    }\n    \n\n    const styles = {\n        homeContainer: {\n            paddingTop: \"8em\",\n            paddingBottom: \"8em\",\n            backgroundColor: \"#333\",\n            // height: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n        },\n        button: {\n            margin: \"2em\",\n            backgroundColor: \"orange\",\n            border: \"none\",\n            borderRadius: \"2em\",\n            padding: \"1.5em\",\n            cursor: \"pointer\",\n            textDecoration: \"none\",\n            color: \"#333\",\n        },\n        homeSubtitle: {\n            color: \"white\",\n            marginBottom: 0,\n            fontWeight: 100,\n\n        }\n    };\n    return (\n        <div style={styles.homeContainer}>\n            <Logo height=\"20em\"/>\n            <h2 style={styles.homeSubtitle}>Musician's practice toolkit</h2>\n            {activeSession ? \n            <NavLink onClick={startSession}  to=\"/form\" style={styles.button}> Current practice session</NavLink> :\n            <NavLink onClick={startSession}  to=\"/form\" style={styles.button}> New practice session</NavLink>\n            }\n        </div>\n    )\n}\n\n","/Users/lanegarner/Documents/Dev/shedr/src/Router.js",["131","132"],"/Users/lanegarner/Documents/Dev/shedr/src/components/User.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Record.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/index.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.js",["133"],"import Metronome from './Components/Metronome';\nimport { Drone } from './Components/Drone';\n\nexport const MetDrone = ({ setActivePage, tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, position, setPosition, accent, setAccent, droning, setDroning, droneVolume, setDroneVolume, root, setRoot, chordType, setChordType }) => {\n    setActivePage(\"metdrone\")\n\n    {droneVolume === undefined && setDroneVolume(-10)}\n\n    const styles = {\n        metDroneContainer: {\n            paddingTop: \"8em\",\n            backgroundColor: \"#333\",\n            paddingBottom: \"8em\",\n            minHeight: \"70vh\",\n\n        },\n        metDroneHeadline: {\n            textAlign: \"center\",\n            color: \"#5AC18E\",\n            paddingBottom: \"0\",\n        },\n        metDroneComponentContainer: {\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyItems: \"center\",\n            justifyContent: \"space-around\",\n            flexWrap: \"wrap\",\n        }\n    };\n\n    return (\n        // <div>\n            <div style={styles.metDroneContainer}>\n            <h1 style={styles.metDroneHeadline}>MetDrone</h1>\n                <div style={styles.metDroneComponentContainer}>\n                    <div style={{padding: '3em'}}>\n                        <Metronome tempo={tempo} setTempo={setTempo} playing={playing} setPlaying={setPlaying} timeSig={timeSig} setTimeSig={setTimeSig} position={position} setPosition={setPosition} accent={accent} setAccent={setAccent} />\n                    </div>\n                    <div style={{padding: '3em'}}>\n                        <Drone droning={droning} setDroning={setDroning} droneVolume={droneVolume} setDroneVolume={setDroneVolume} root={root} setRoot={setRoot} chordType={chordType} setChordType={setChordType} />\n                    </div>\n                </div>\n            </div>\n        // </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Metronome.js",["134","135","136","137","138","139","140","141"],"import { useState, useEffect } from 'react';\nimport './Metronome.css';\nimport * as Tone from 'tone'\nimport { TimeSigSelect } from \"./TimeSigSelect\";\nimport { Accent } from \"./Accent\"\nimport click1Sample from '../click1.flac';\nimport click2Sample from '../click2.wav';\nimport click3Sample from '../click3.wav';\nimport StartAudioContext from 'startaudiocontext'\n\nconst click1 = new Tone.Player(click1Sample).toDestination()\nconst click2 = new Tone.Player(click2Sample).toDestination()\nconst click3 = new Tone.Player(click3Sample).toDestination()\n\nconst Metronome = ({ tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, position, setPosition, accent, setAccent }) => {    \n    const [ bpm, setBpm ] = useState(120);\n    const [ subdivision, setSubDivision ] = useState(\"\");\n\n\n\n    // useEffect(() => {\n        \n    //     if (playing) {\n    //         stopClick()\n    //         playClick()\n    //     } \n\n    // }, [accent, timeSig, tempo])\n\n    const handleAccent = () => {\n        if (playing) {\n            setAccent(!accent)\n            stopClick()\n            playClick()\n        } else {\n            setAccent(!accent)\n        }\n    }\n\n    const handleTimeSig = (e) => {\n        setTimeSig(parseInt(e.target.value))\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempo = (e) => {\n        setTempo(e.target.value)\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n\n    \n    const startStop = () => {\n        StartAudioContext(Tone.context)\n        Tone.start()\n\n        if(!playing) {\n            setPlaying(true)\n            playClick()\n        } else {\n            Tone.Transport.cancel();\n            Tone.Transport.stop();\n            setPlaying(false)\n        }\n    }\n\n    const playClick = () => {\n        const bpmNum = parseInt(tempo);\n        \n        Tone.Transport.bpm.value = bpmNum;\n        Tone.Transport.timeSignature = timeSig;        \n        \n        accent && (\n        Tone.Transport.scheduleRepeat((time) => {\n            click1.start(time)\n        }, \"1m\")\n        )        \n        \n        Tone.Transport.scheduleRepeat((time) => {\n            setPosition(Tone.Transport.position)\n            click3.start(time)\n            console.log(Tone.Transport.position)\n        }, \"4n\");\n        \n        Tone.Transport.start();\n    }\n\n    const stopClick = () => {\n        Tone.Transport.stop();\n        Tone.Transport.cancel();\n        Tone.Transport.position = \"0:0:0\"\n    }\n\n    const newPosition = parseInt(Tone.Transport.position.split(':')[1])\n\n    return (\n        <div className=\"metronome\">\n        {playing ? <h1 style={{color: \"orange\"}}>met</h1> : <h1 style={{color: \"white\"}}>met</h1>}\n        <div>\n            <input checked={accent} type=\"checkbox\" id=\"checkbox\" onChange={handleAccent} />\n            <label htmlFor=\"Accent\">Accent</label>\n        </div>\n        <label htmlFor=\"selectTimeSig\">Time signature</label>\n        <select onChange={handleTimeSig} name=\"selectTimeSig\" id=\"selectTimeSig\" value={timeSig}>\n            <option value=\"4\">4/4</option>\n            <option value=\"3\">3/4</option>\n            <option value=\"5\">5/4</option>\n            <option value=\"7\">7/4</option>\n        </select>\n        <div className=\"bpm-slider\">\n            <label htmlFor=\"bpmSlider\">Tempo</label>\n            <div>{tempo} BPM</div>\n            <input\n                id=\"bpmSlider\"\n                className=\"Slider\"\n                type=\"range\"\n                min=\"01\"\n                max=\"500\"\n                value={tempo}\n                onChange={handleTempo} />\n        </div>\n        <button id=\"startStopBtn\" onClick={startStop}>\n            {playing ? 'Stop' : 'Start'}\n        </button>\n        <button>Tap</button>\n        {playing ? <h3 className=\"Count\" style={{\"fontSize\": \"6em\", \"color\":\"#FFF\"}}>{newPosition + 1}</h3> : <div></div>}\n        \n        </div>\n    )\n}\n\nexport default Metronome;","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/TimeSigSelect.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Accent.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Components/Drone.js",["142"],"import React, { useState, useEffect } from 'react'\nimport './Drone.css'\nimport * as Tone from 'tone'\nimport StartAudioContext from 'startaudiocontext'\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\nimport { Chord, ChordType } from \"@tonaljs/tonal\";\n\nconst synth = new Tone.PolySynth({\n    oscillator: {\n        type: \"sine\"\n    },\n    envelope: {\n        attack: 2,\n        decay: 1,\n        sustain: 1,\n        release: 0.5,\n    },\n});\nconst filter = new Tone.Filter(2000, \"lowpass\")\nconst verb = new Tone.Reverb(1)\nconst wide = new Tone.StereoWidener()\nsynth.chain( filter, verb, wide, Tone.Destination)\n\nlet chord;\n\n// const [droneVolume, setDroneVolume] = useState(-10)\n// const [root, setRoot] = useState(\"C\")\n// const [chordType, setChordType] = useState(\"minor ninth\")\n\nexport const Drone = ({  droning, setDroning, droneVolume, setDroneVolume, root, setRoot, chordType, setChordType }) => {\n    let myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n    const chordTypes = ChordType.names()\n    chord = myChord.notes\n    // useEffect(() => {\n    //     setDroning(false)\n    //     myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n    //     chord = myChord.notes\n    // }, [root])\n    \n    const startDrone = () => {\n        StartAudioContext(Tone.context)\n        setDroning(true)\n        synth.triggerAttack(chord)\n    }\n\n    useEffect(() => {\n        !droning && synth.releaseAll();\n    }, [droning])\n    \n\n    useEffect(() => {\n        synth.volume.value = droneVolume\n        console.log(synth.volume.value)\n    }, [droneVolume])\n\n    const handleChordTypeChange = (e) => {\n        setChordType(e.target.value)\n        setDroning(false)\n        myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n        chord = myChord.notes\n    }\n\n    const handleRootChange = (e) => {\n        setRoot(e.target.value)\n        setDroning(false)\n        myChord = Chord.getChord(chordType, `${root}4`, `${root}5`);\n        chord = myChord.notes\n    }\n    \n\n    return (\n        <div className=\"Drone\">\n            {droning ? <h1 style={{color: \"orange\"}}>drone</h1> : <h1 style={{color: \"white\"}}>drone</h1>}\n            <input \n                value={root} \n                onChange={handleRootChange}\n                type=\"text\" \n                placeholder=\"root\"/>\n            <select value={chordType} onChange={handleChordTypeChange} name=\"selectDroneRoot\" id=\"selectDroneRoot\">\n                {chordTypes.map((chord, id) => <option key={id} value={chord}>{chord}</option>)}\n            </select>\n\n            {!droning ? <button onClick={startDrone}>Start</button> : <button onClick={() => setDroning(!droning)}>Stop</button> }\n            \n            \n            <div>\n                <VolumeDown />\n                <input \n                    type=\"range\"\n                    min={-100}\n                    max={0}\n                    step=\"0.1\"\n                    value={droneVolume}\n                    onChange={(e) => setDroneVolume(e.target.value)}\n                />\n                <VolumeUp />\n            </div>\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.js",["143","144","145","146"],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.js",["147","148","149","150","151","152"],"import React, { useState, useRef } from 'react'\nimport \"./PracticeTimer.css\";\n\nexport const PracticeTimer = ({ practiceTime, setPracticeTime, timerStarted, setTimerStart, timerRunning, setTimerRunning, timerPaused, setTimerPaused, tInterval, setTInterval, timer, setTimer, differenceState, setDifferenceState }) => {\n    // const [timerStarted, setTimerStart] = useState(false)\n    // const [timerRunning, setTimerRunning] = useState(false)\n    // const [timerPaused, setTimerPaused] = useState(false)\n    // const [tInterval, setTInterval] = useState()\n    // const [timer, setTimer] = useState(\"00:00:00\")\n    // const [differenceState, setDifferenceState] = useState()\n    \n    \n    let startTime\n    \n    const test = () => {\n        // const actualTime = getTime();\n        // console.log(actualTime)\n    }\n    \n    const start = () => {\n        {!timerStarted && setTimerStart(true)}\n        startTime = new Date().getTime()\n\n        setTInterval(setInterval(getTime, 1000))\n        setTimerRunning(true);\n        setTimerPaused(false);\n\n\n        //set start date\n    }\n    \n    const getTime = () => {\n        let difference;\n        const updatedTime = new Date().getTime();\n            if (differenceState){\n                difference = (updatedTime - startTime) + differenceState\n                setDifferenceState(difference)\n            } else {\n                difference = (updatedTime - startTime)\n                setDifferenceState(difference)\n            }\n\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n            \n            hours = (hours < 10) ? `0${hours}` : hours;\n            minutes = (minutes < 10) ? `0${minutes}` : minutes;\n            seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n            setTimer(`${hours}:${minutes}:${seconds}`)\n    }\n\n    const pause = () => {\n            if (!timerPaused) {\n                setTimerRunning(false)\n                setTimerPaused(true)\n                clearInterval(tInterval)\n            } else {\n                setTimerPaused(!timerPaused)\n                start()\n            }\n    }\n\n    const stop = () => {\n        {!timerPaused && pause()}\n        const hrs = timer.slice(0,2)\n        const min = timer.slice(3,5)\n        const sec = timer.slice(6,8)\n        const pTime= [hrs, min, sec]\n        console.log([hrs, min, sec])\n        setPracticeTime(pTime)\n        \n        // pause()\n        setTimerStart(false)\n        // setTimerRunning(false)\n        setTimer(\"00:00:00\")\n        setTimerPaused(false)\n        setDifferenceState(null)\n        // setTimerPaused()\n        // {timerPaused && setTimerPaused(!timerPaused)}\n\n\n        // window.confirm('Are you sure? This will end your session and add current practice time to your log')\n        // reset()\n    }\n\n    const reset = () => {\n        setTimerStart(false)\n        setTimerRunning(false)\n\n\n\n\n    //     clearInterval(tInterval);\n    // savedTime = 0;\n    // difference = 0;\n    // paused = 0;\n    // running = 0;\n    }\n\n//     const getShowTime = () => {\n//         updatedTime = new Date().getTime();\n\n//         // if (savedTime){\n//         //   difference = (updatedTime - startTime) + savedTime;\n//         // } else {\n//         //   difference =  updatedTime - startTime;\n//         // }\n//         let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//         let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n//         let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n        \n//         hours = (hours < 10) ? `0${hours}` : hours;\n//         minutes = (minutes < 10) ? `0${minutes}` : minutes;\n//         seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n//         setTimer(`${hours}:${minutes}:${seconds}`)\n// }\n\n\n    return (\n                <>\n                    <div className=\"timerDisplay\">\n                        {timer}\n                    {/* <Timer.Hours />:<Timer.Minutes />:<Timer.Seconds />  */}\n                    </div>\n                    \n                    {/* <div>{timerState}</div> */}\n                    <br />\n                    <div>\n                        {timerStarted ? <><button className=\"timerBtn stopBtn\" onClick={stop}>Stop</button><br/></> : <><button className=\"timerBtn startBtn\" onClick={start}>Start</button><br /></>}\n                        \n                        {timerRunning && <><button className=\"timerBtn pauseBtn\" onClick={pause}>Pause</button><br /></>}\n                        {/* <button onClick={start}>Start</button> */}\n                        {/* <button onClick={pause}>Pause</button> */}\n                        {timerPaused && <><button className=\"timerBtn pauseBtn\" onClick={pause}>Resume</button><br /></>}\n                        \n                        {/* <button onClick={()=>test(getTime)}>Test</button> */}\n                        {/* {timerStarted && <button className=\"timerBtn resetBtn\" onClick={reset}>Reset</button>} */}\n                        \n                    </div>\n                </>\n            )\n\n\n\n\n        // <Timer\n        //     formatValue={(value) => `${(value < 10 ? `0${value}` : value)}`}\n        //     // initialTime={55000}\n        //     startImmediately={false}\n        //     onStart={handleStart}\n        //     onResume={handlePause}\n        //     onPause={handlePause}\n        //     // onChange={()=>setTimer(`${<Timer.Hours />}:${<Timer.Minutes />}:${<Timer.Seconds />}`)}\n        //     // onStop={handleStop}\n        //     onReset={handleStop}\n\n        //     checkpoints={[\n        //         {\n        //             time: 2000,\n        //             callback: () => console.log('Checkpoint A'),\n        //         },\n        //         {\n        //             time: 60000 * 60 * 48 - 5000,\n        //             callback: () => console.log('Checkpoint B'),\n        //         }\n        //     ]}\n\n        // >\n        //     {({ start, resume, pause, stop, reset, getTime, timerState, getTimerState }) => (\n        //         <>\n        //             <div className=\"timerDisplay\" ref={inputEl}>\n        //             <Timer.Hours />:<Timer.Minutes />:<Timer.Seconds /> \n        //             </div>\n                    \n        //             {/* <div>{timerState}</div> */}\n        //             <br />\n        //             <div>\n        //                 {timerStarted ? <><button className=\"timerBtn stopBtn\" onClick={() => {\n        //                     window.confirm('Are you sure? This will end your session and add current practice time to your log')\n        //                         {timerPaused && setTimerPaused(!timerPaused)}\n        //                         // setPracticeTime(Timer)\n        //                         // console.log(inputEl.current.slice(0, 4))\n        //                         handleStop()\n        //                         stop()\n        //                         reset()\n                            \n        //                     // if(window.confirm('Are you sure? This will end your session add current practice time to your log')) {\n        //                     //     {timerPaused && setTimerPaused(!timerPaused)}\n        //                     //     handleStop()\n        //                     //     stop()\n        //                     //     reset()\n        //                     // }\n        //                 }}>Stop</button><br/></> : <><button className=\"timerBtn startBtn\" onClick={start}>Start</button><br /></>}\n                        \n        //                 {timerRunning && <><button className=\"timerBtn pauseBtn\" onClick={pause}>Pause</button><br /></>}\n        //                 {/* <button onClick={start}>Start</button> */}\n        //                 {/* <button onClick={pause}>Pause</button> */}\n        //                 {timerPaused && <><button className=\"timerBtn pauseBtn\" onClick={resume}>Resume</button><br /></>}\n                        \n        //                 <button onClick={()=>test(getTime)}>Test</button>\n        //                 {/* {timerStarted && <button className=\"timerBtn resetBtn\" onClick={reset}>Reset</button>} */}\n                        \n        //             </div>\n        //         </>\n        //     )}\n        // </Timer>\n\n    // )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.js",["153","154"],"/Users/lanegarner/Documents/Dev/shedr/src/firebase.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":2,"column":25,"nodeType":"161","messageId":"162","endLine":2,"endColumn":34},{"ruleId":"159","severity":1,"message":"163","line":13,"column":10,"nodeType":"161","messageId":"162","endLine":13,"endColumn":23},{"ruleId":"159","severity":1,"message":"164","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"165","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":19},{"ruleId":"159","severity":1,"message":"166","line":10,"column":10,"nodeType":"161","messageId":"162","endLine":10,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":27,"column":9,"nodeType":"169","endLine":27,"endColumn":74},{"ruleId":"159","severity":1,"message":"170","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":19},{"ruleId":"159","severity":1,"message":"171","line":7,"column":10,"nodeType":"161","messageId":"162","endLine":7,"endColumn":14},{"ruleId":"159","severity":1,"message":"172","line":21,"column":7,"nodeType":"161","messageId":"162","endLine":21,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":7,"column":5,"nodeType":"175","messageId":"176","endLine":7,"endColumn":55},{"ruleId":"159","severity":1,"message":"170","line":1,"column":20,"nodeType":"161","messageId":"162","endLine":1,"endColumn":29},{"ruleId":"159","severity":1,"message":"177","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":23},{"ruleId":"159","severity":1,"message":"178","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":16},{"ruleId":"159","severity":1,"message":"179","line":12,"column":7,"nodeType":"161","messageId":"162","endLine":12,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":16,"column":13,"nodeType":"161","messageId":"162","endLine":16,"endColumn":16},{"ruleId":"159","severity":1,"message":"181","line":16,"column":18,"nodeType":"161","messageId":"162","endLine":16,"endColumn":24},{"ruleId":"159","severity":1,"message":"182","line":17,"column":13,"nodeType":"161","messageId":"162","endLine":17,"endColumn":24},{"ruleId":"159","severity":1,"message":"183","line":17,"column":26,"nodeType":"161","messageId":"162","endLine":17,"endColumn":40},{"ruleId":"159","severity":1,"message":"184","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"184","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"170","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"185","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":44},{"ruleId":"173","severity":1,"message":"174","line":16,"column":5,"nodeType":"175","messageId":"176","endLine":16,"endColumn":46},{"ruleId":"159","severity":1,"message":"184","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"185","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":33},{"ruleId":"159","severity":1,"message":"186","line":15,"column":11,"nodeType":"161","messageId":"162","endLine":15,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":21,"column":9,"nodeType":"175","messageId":"176","endLine":21,"endColumn":47},{"ruleId":"173","severity":1,"message":"174","line":66,"column":9,"nodeType":"175","messageId":"176","endLine":66,"endColumn":34},{"ruleId":"159","severity":1,"message":"187","line":88,"column":11,"nodeType":"161","messageId":"162","endLine":88,"endColumn":16},{"ruleId":"159","severity":1,"message":"188","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"189","line":8,"column":9,"nodeType":"161","messageId":"162","endLine":8,"endColumn":17},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'PracticeTimer' is defined but never used.","'findByLabelText' is defined but never used.","'matchPath' is defined but never used.","'VegBurgIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'Home' is defined but never used.","'ProtectedRoute' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'TimeSigSelect' is defined but never used.","'Accent' is defined but never used.","'click2' is assigned a value but never used.","'bpm' is assigned a value but never used.","'setBpm' is assigned a value but never used.","'subdivision' is assigned a value but never used.","'setSubDivision' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'test' is assigned a value but never used.","'reset' is assigned a value but never used.","'dummyData' is defined but never used.","'userLogs' is defined but never used.","no-global-assign","no-unsafe-negation"]
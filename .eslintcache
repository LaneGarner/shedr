[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/firebase.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/Store.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js":"26","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js":"27","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js":"28","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js":"29","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js":"30","/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx":"31","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx":"32","/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx":"33","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx":"34","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx":"35","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx":"36","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx":"37","/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx":"38","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx":"39","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx":"40","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx":"41","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx":"42","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx":"43","/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx":"44","/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx":"45","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx":"46","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx":"47","/Users/lanegarner/Documents/Dev/shedr/src/App.jsx":"48","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx":"49","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx":"50","/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx":"51","/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx":"52","/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx":"53","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx":"54"},{"size":232,"mtime":1616381341546,"results":"55","hashOfConfig":"56"},{"size":1024,"mtime":1616382562135,"results":"57","hashOfConfig":"56"},{"size":1464,"mtime":1616464574514,"results":"58","hashOfConfig":"56"},{"size":873,"mtime":1612799339284,"results":"59","hashOfConfig":"56"},{"size":1006,"mtime":1616376581857,"results":"60","hashOfConfig":"56"},{"size":579,"mtime":1612286994566,"results":"61","hashOfConfig":"56"},{"size":1281,"mtime":1616376934892,"results":"62","hashOfConfig":"56"},{"size":690,"mtime":1616376218308,"results":"63","hashOfConfig":"56"},{"size":906,"mtime":1616377233021,"results":"64","hashOfConfig":"56"},{"size":19145,"mtime":1615855134420,"results":"65","hashOfConfig":"56"},{"size":571,"mtime":1613016751360,"results":"66","hashOfConfig":"56"},{"size":565,"mtime":1613078154086,"results":"67","hashOfConfig":"56"},{"size":805,"mtime":1613070173552,"results":"68","hashOfConfig":"56"},{"size":570,"mtime":1613069803267,"results":"69","hashOfConfig":"56"},{"size":661,"mtime":1616417364344,"results":"70","hashOfConfig":"56"},{"size":4502,"mtime":1616431418639,"results":"71","hashOfConfig":"56"},{"size":19109,"mtime":1615838530363,"results":"72","hashOfConfig":"56"},{"size":5401,"mtime":1615837547278,"results":"73","hashOfConfig":"56"},{"size":5398,"mtime":1615855161516,"results":"74","hashOfConfig":"56"},{"size":577,"mtime":1616382695986,"results":"75","hashOfConfig":"56"},{"size":962,"mtime":1616382644840,"results":"76","hashOfConfig":"56"},{"size":516,"mtime":1614273038061,"results":"77","hashOfConfig":"56"},{"size":892,"mtime":1615939400164,"results":"78","hashOfConfig":"56"},{"size":5480,"mtime":1616376122982,"results":"79","hashOfConfig":"56"},{"size":9776,"mtime":1615929446381,"results":"80","hashOfConfig":"56"},{"size":19379,"mtime":1615929954282,"results":"81","hashOfConfig":"56"},{"size":17516,"mtime":1615930470293,"results":"82","hashOfConfig":"56"},{"size":71666,"mtime":1615930520768,"results":"83","hashOfConfig":"56"},{"size":984,"mtime":1615940095661,"results":"84","hashOfConfig":"56"},{"size":834,"mtime":1615940231888,"results":"85","hashOfConfig":"56"},{"size":349,"mtime":1616382070485,"results":"86","hashOfConfig":"56"},{"size":857,"mtime":1616435941136,"results":"87","hashOfConfig":"56"},{"size":2828,"mtime":1616545623141,"results":"88","hashOfConfig":"56"},{"size":1452,"mtime":1616417986558,"results":"89","hashOfConfig":"56"},{"size":2111,"mtime":1616418011684,"results":"90","hashOfConfig":"56"},{"size":2372,"mtime":1616445982851,"results":"91","hashOfConfig":"56"},{"size":14681,"mtime":1616434315269,"results":"92","hashOfConfig":"56"},{"size":840,"mtime":1616544741346,"results":"93","hashOfConfig":"56"},{"size":14096,"mtime":1616556524180,"results":"94","hashOfConfig":"56"},{"size":9566,"mtime":1616558379832,"results":"95","hashOfConfig":"56"},{"size":1190,"mtime":1616514721090,"results":"96","hashOfConfig":"56"},{"size":7434,"mtime":1616514467590,"results":"97","hashOfConfig":"56"},{"size":8498,"mtime":1616627236111,"results":"98","hashOfConfig":"56"},{"size":3161,"mtime":1616467182944,"results":"99","hashOfConfig":"56"},{"size":10156,"mtime":1616544675639,"results":"100","hashOfConfig":"56"},{"size":932,"mtime":1616422710391,"results":"101","hashOfConfig":"56"},{"size":930,"mtime":1616382307925,"results":"102","hashOfConfig":"56"},{"size":769,"mtime":1616446343453,"results":"103","hashOfConfig":"56"},{"size":8296,"mtime":1616435392924,"results":"104","hashOfConfig":"56"},{"size":3473,"mtime":1616435632927,"results":"105","hashOfConfig":"56"},{"size":1788,"mtime":1616559396904,"results":"106","hashOfConfig":"56"},{"size":451,"mtime":1616545009673,"results":"107","hashOfConfig":"56"},{"size":4166,"mtime":1616626367037,"results":"108","hashOfConfig":"56"},{"size":3660,"mtime":1616626747778,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1hgxmb7",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"112"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],["233","234"],"/Users/lanegarner/Documents/Dev/shedr/src/firebase.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Router.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],["235","236"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],["237","238"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Store.js",["239"],"import React, { useState, createContext } from \"react\"\nimport firebase, { auth } from \"./firebase.js\"\n\nexport const StoreContext = createContext(null)\n\nexport default ({ children }) => {\n\n    const [ user, setUser ] = useState(null)\n    const [ logs, setLogs ] = useState([])\n\n    const [ activePage, setActivePage ] = useState()\n    const [ hover, setHover ] = useState()\n    \n    const [ isRecording, setIsRecording ] = useState(false)\n    const [ blobURL, setBlobURL ] = useState(\"\")\n    const [ isBlocked, setIsBlocked ] = useState(false)\n    const [ recordingCreated, setRecordingCreated ] = useState(false)\n\n    const [ tempo, setTempo ] = useState(120)\n    const [ playing, setPlaying ] = useState (false)\n    const [ timeSig, setTimeSig ] = useState(4)\n    const [ position, setPosition ] = useState(\"0:0:0\")\n    const [ accent, setAccent ] = useState(true)\n    const [ clickVolume, setClickVolume ] = useState(.99)\n    const [ polyrhythmMode, setPolyrhythmMode ] = useState(false)\n    const [ polyrhythm, setPolyrhythm ] = useState(.6666666666666666666666666666666666666666666666666666667)\n\n    const [ droning, setDroning ] = useState()\n    const [ droneVolume, setDroneVolume ] = useState(.99)\n    const [ root, setRoot ] = useState(\"C\")\n    const [ chordType, setChordType ] = useState(\"minor ninth\")\n\n    const [ activeSession, setActiveSession ] = useState()\n    const [ startDate, setStartDate ] = useState(Date.now());\n\n    const [ timerStarted, setTimerStart ] = useState(false)\n    const [ timerRunning, setTimerRunning ] = useState(false)\n    const [ timerPaused, setTimerPaused ] = useState(false)\n    const [ tInterval, setTInterval ] = useState()\n    const [ timer, setTimer ] = useState(\"00:00:00\")\n    const [ differenceState, setDifferenceState ] = useState()\n\n    const [ recordTimerStarted, setRecordTimerStart ] = useState(false)\n    const [ recordTimerRunning, setRecordTimerRunning ] = useState(false)\n    const [ recordTimerPaused, setRecordTimerPaused ] = useState(false)\n    const [ recordTInterval, setRecordTInterval ] = useState()\n    const [ recordTimer, setRecordTimer ] = useState(\"00:00:00\")\n    const [ recordDifferenceState, setRecordDifferenceState ] = useState()\n\n    const [ tunerMounted, setTunerMounted ] = useState(false)\n\n    const [ practiceTime, setPracticeTime ] = useState([\"00\", \"00\", \"00\"])\n    const [ practiceTopicNotes, setPracticeTopicNotes ] = useState({topic: \"\", notes: \"\"})\n    // const [ newLog, setNewLog ] = useState()\n\n    const [ isOpen, setIsOpen ] = useState(false)\n\n    const closeMenu = () => {\n        setIsOpen(false)\n    }\n\n    const removeLog = (logId) => {\n        const logsRef = firebase.database().ref(`/logs/${user.uid}/${logId}`);\n        logsRef.remove();\n    }\n    \n    const logout = () => {\n        auth.signOut()\n        .then(() => {\n        setUser(null)\n        });  \n    }\n\n    const store = {\n        user, setUser,\n        logs, setLogs,\n\n        activePage, setActivePage,\n        hover, setHover,\n\n        isRecording, setIsRecording, \n        blobURL, setBlobURL, \n        isBlocked, setIsBlocked,\n        recordingCreated, setRecordingCreated,\n\n        tempo, setTempo,\n        playing, setPlaying ,\n        timeSig, setTimeSig ,\n        position, setPosition ,\n        accent, setAccent ,\n        clickVolume, setClickVolume,\n        polyrhythmMode, setPolyrhythmMode,\n        polyrhythm, setPolyrhythm,\n        \n        droning, setDroning,\n        droneVolume, setDroneVolume,\n        root, setRoot,\n        chordType, setChordType,\n    \n        activeSession, setActiveSession,\n        startDate, setStartDate,\n    \n        timerStarted, setTimerStart,\n        timerRunning, setTimerRunning,\n        timerPaused, setTimerPaused,\n        tInterval, setTInterval,\n        timer, setTimer,\n        differenceState, setDifferenceState,\n\n        recordTimerStarted, setRecordTimerStart, \n        recordTimerRunning, setRecordTimerRunning, \n        recordTimerPaused, setRecordTimerPaused, \n        recordTInterval, setRecordTInterval, \n        recordTimer, setRecordTimer, \n        recordDifferenceState, setRecordDifferenceState,\n\n        tunerMounted, setTunerMounted,\n    \n        practiceTime, setPracticeTime,\n        practiceTopicNotes, setPracticeTopicNotes,\n        // newLog, setNewLog,\n    \n        isOpen, setIsOpen,\n\n        closeMenu, removeLog, logout, firebase\n\n        // firebase, auth, uiConfig\n\n    }\n\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js",["240"],"import React, {createContext,useState, useEffect} from 'react';\nimport { auth } from './firebase';\n\nexport const AuthContext = createContext({userPresent:false,User:null})\n\nexport default function FirebaseAuthContext(props) {    \n\n    let [ state,changeState ] = useState({\n        userDataPresent: false,\n        User:null,\n        listener:null\n    })\n\n    useEffect(()=>{\n        \n        if(state.listener==null){\n        \n    \n        changeState({...state,listener:auth.onAuthStateChanged((User)=>{\n            \n        if(User)\n            changeState(oldState=>({...oldState,userDataPresent:true,User:User}));\n            else\n            changeState(oldState=>({...oldState,userDataPresent:true,User:null}));\n        })});\n        \n    }\n\n    return ()=>{\n    if(state.listener)\n        state.listener()\n    }\n    \n    },[])\n\n    return (\n        <AuthContext.Provider value={state}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx",["241"],"import { useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../../Store\"\n\nimport { Metronome } from \"./Metronome.jsx\"\nimport { Drone } from \"./Drone.jsx\"\n\nimport \"./MetDrone.scss\"\n\nexport const MetDrone = () => {\n    const { setActivePage, droneVolume, setDroneVolume } = useContext(StoreContext)\n    \n    useEffect(() => {\n        setActivePage(\"metdrone\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    if(droneVolume === undefined) {\n        setDroneVolume(-10)\n    }\n\n    return (\n        // <div className=\"metDroneContainer\">\n            <div className=\"metdrone-container\">\n                <div className=\"metdrone-component\">\n                    <Metronome />\n                </div>\n                <div className=\"metdrone-component\">\n                    <Drone />\n                </div>\n            </div>\n        // </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx",["242"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx",["243"],"import { useContext, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { StoreContext } from \"../Store\"\n\nimport { FlatGuitarist } from \"../images/FlatGuitarist\"\nimport { FlatFemaleGuitarist } from \"../images/FlatFemaleGuitarist\"\nimport { FlatDrummer } from \"../images/FlatDrummer\"\nimport { FlatPianist } from \"../images/FlatPianist\"\n\nimport \"./Home.scss\"\n\nexport const Home = () => {\n    const { setActivePage } = useContext(StoreContext)\n    \n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setActivePage(\"none\")\n    }, [])\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"home-container-section\">\n                <div>\n                    <FlatGuitarist />\n                </div>\n                <div>\n                    <h1>Welcome to Shedr</h1>\n                    <p>Shedr is a musician's practice toolkit designed to sit on your music stand while practicing. It is optimized for desktop, tablet, and mobile so you can practice efficiently  wherever you are.</p>\n                    <Link to=\"/dashboard\" className=\"button\"> Get Started</Link>\n                </div>\n            </div>\n            <div className=\"home-container-section\">\n                <div>\n                    <h2>Everything you need in one place</h2>\n                    <ul>\n                        <li><span>Practice Log</span> - Track and time your practice sessions</li>\n                        <li><span>Repertoire List</span> - Build and review your repertoire</li>\n                        <li><span>Practice Stats</span> - Stay motivated by analyzing your progress</li>\n                        <li><span>MetDrone</span> - Practice with an accurate metronome and a harmonic drone</li>\n                        <li><span>Recordings</span> - Record your practice sessions to revisit later</li>\n                        <li><span>Tuner</span> - Make sure your instrument is in tune for each practice session</li>\n                    </ul>\n                </div>\n                <div>\n                    <FlatDrummer/>\n                </div>\n            </div>\n            <div className=\"home-container-section\">\n                <div>\n                    <FlatFemaleGuitarist/>\n                </div>\n                <div>\n                    <FlatPianist/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx",["244","245","246","247"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { pitchDetection } from \"ml5\"\nimport Sketch from \"react-p5\"\nimport StartAudioContext from \"startaudiocontext\"\n\nimport { ForkIcon } from \"../icons/ForkIcon\"\n\nimport \"./Fork.scss\"\n\nexport const Fork = () => {\n\n    const { setActivePage, tunerMounted, setTunerMounted } = useContext(StoreContext)\n    const [ tunerOpen, setTunerOpen ] = useState(false)\n    const [ freq, setFreq ] = useState(0)\n    const [ tuningMode, setTuningMode ] = useState(\"chromatic\")\n\n    let audioContext, pitch, stream, notes\n\n    let threshold = 1\n\n    if (tuningMode === \"chromatic\") {        \n        notes = [\n            {\n            note: 'B8',\n            freq: 7902.133\n            },\n            {\n            note: 'A#8/Bb8',\n            freq: 7458.620\n            },\n            {\n            note: 'A8',\n            freq: 7040.000\n            },\n            {\n            note: 'G#8/Ab8',\n            freq: 6644.875\n            },\n            {\n            note: 'G8',\n            freq: 6271.927\n            },\n            {\n            note: 'F#8/Gb8',\n            freq: 5919.911\n            },\n            {\n            note: 'F8',\n            freq: 5587.652\n            },\n            {\n            note: 'E8',\n            freq: 5274.041\n            },\n            {\n            note: 'D#8/Eb8',\n            freq: 4978.032\n            },\n            {\n            note: 'D8',\n            freq: 4698.636\n            },\n            {\n            note: 'C#8/Db8',\n            freq: 4434.922\n            },\n            {\n            note: 'C8',\n            freq: 4186.009\n            },\n            {\n            note: 'B7',\n            freq: 3951.066\n            },\n            {\n            note: 'A#7/Bb7',\n            freq: 3729.310\n            },\n            {\n            note: 'A7',\n            freq: 3520.000\n            },\n            {\n            note: 'G#7/Ab7',\n            freq: 3322.438\n            },\n            {\n            note: 'G7',\n            freq: 3135.963\n            },\n            {\n            note: 'F#7/Gb7',\n            freq: 2959.955\n            },\n            {\n            note: 'F7',\n            freq: 2793.826\n            },\n            {\n            note: 'E7',\n            freq: 2637.020\n            },\n            {\n            note: 'D#7/Eb7',\n            freq: 2489.016\n            },\n            {\n            note: 'D7',\n            freq: 2349.318\n            },\n            {\n            note: 'C#7/Db7',\n            freq: 2217.461\n            },\n            {\n            note: 'C7',\n            freq: 2093.005\n            },\n            {\n            note: 'B6',\n            freq: 1975.533\n            },\n            {\n            note: 'A#6/Bb6',\n            freq: 1864.655\n            },\n            {\n            note: 'A6',\n            freq: 1760.000\n            },\n            {\n            note: 'G#6/Ab6',\n            freq: 1661.219\n            },\n            {\n            note: 'G6',\n            freq: 1567.982\n            },\n            {\n            note: 'F#6/Gb6',\n            freq: 1479.978\n            },\n            {\n            note: 'F6',\n            freq: 1396.913\n            },\n            {\n            note: 'E6',\n            freq: 1318.510\n            },\n            {\n            note: 'D#6/Eb6',\n            freq: 1244.508\n            },\n            {\n            note: 'D6',\n            freq: 1174.659\n            },\n            {\n            note: 'C#6/Db6',\n            freq: 1108.731\n            },\n            {\n            note: 'C6',\n            freq: 1046.502\n            },\n            {\n            note: 'B5',\n            freq: 987.7666\n            },\n            {\n            note: 'A#5/Bb5',\n            freq: 932.3275\n            },\n            {\n            note: 'A5',\n            freq: 880.0000\n            },\n            {\n            note: 'G#5/Ab5',\n            freq: 830.6094\n            },\n            {\n            note: 'G5',\n            freq: 783.9909\n            },\n            {\n            note: 'F#5/Gb5',\n            freq: 739.9888\n            },\n            {\n            note: 'F5',\n            freq: 698.4565\n            },\n            {\n            note: 'E5',\n            freq: 659.2551\n            },\n            {\n            note: 'D#5/Eb5',\n            freq: 622.2540\n            },\n            {\n            note: 'D5',\n            freq: 587.3295\n            },\n            {\n            note: 'C#5/Db5',\n            freq: 554.3653\n            },\n            {\n            note: 'C5',\n            freq: 523.2511\n            },\n            {\n            note: 'B4',\n            freq: 493.8833\n            },\n            {\n            note: 'A#4/Bb4',\n            freq: 466.1638\n            },\n            {\n            note: 'A4',\n            freq: 440\n            },\n            {\n            note: 'G#4/Ab4',\n            freq: 415.3047\n            },\n            {\n            note: 'G4',\n            freq: 391.9954\n            },\n            {\n            note: 'F#4/Gb4',\n            freq: 369.9944\n            },\n            {\n            note: 'F4',\n            freq: 349.2282\n            },\n            {\n            note: 'E4',\n            freq: 329.6276\n            },\n            {\n            note: 'D#4/Eb4',\n            freq: 311.1270\n            },\n            {\n            note: 'D4',\n            freq: 293.6648\n            },\n            {\n            note: 'C#4/Db4',\n            freq: 277.1826\n            },\n            {\n            note: 'C4',\n            freq: 261.6256\n            },\n            {\n            note: 'B3',\n            freq: 246.9417\n            },\n            {\n            note: 'A#3/Bb3',\n            freq: 233.0819\n            },\n            {\n            note: 'A3',\n            freq: 220.0000\n            },\n            {\n            note: 'G#3/Ab3',\n            freq: 207.6523\n            },\n            {\n            note: 'G3',\n            freq: 195.9977\n            },\n            {\n            note: 'F#3/Gb3',\n            freq: 184.9972\n            },\n            {\n            note: 'F3',\n            freq: 174.6141\n            },\n            {\n            note: 'E3',\n            freq: 164.8138\n            },\n            {\n            note: 'D#3/Eb3',\n            freq: 155.5635\n            },\n            {\n            note: 'D3',\n            freq: 146.8324\n            },\n            {\n            note: 'C#3/Db3',\n            freq: 138.5913\n            },\n            {\n            note: 'C3',\n            freq: 130.8128\n            },\n            {\n            note: 'B2',\n            freq: 123.4708\n            },\n            {\n            note: 'A#2/Bb2',\n            freq: 116.5409\n            },\n            {\n            note: 'A2',\n            freq: 110.0000\n            },\n            {\n            note: 'G#2/Ab2',\n            freq: 103.8262\n            },\n            {\n            note: 'G2',\n            freq: 97.99886\n            },\n            {\n            note: 'F#2/Gb2',\n            freq: 92.49861\n            },\n            {\n            note: 'F2',\n            freq: 87.30706\n            },\n            {\n            note: 'E2',\n            freq: 82.40689\n            },\n            {\n            note: 'D#2/Eb2',\n            freq: 77.78175\n            },\n            {\n            note: 'D2',\n            freq: 73.41619\n            },\n            {\n            note: 'C#2/Db2',\n            freq: 69.29566\n            },\n            {\n            note: 'C2',\n            freq: 65.40639\n            },\n            {\n            note: 'B1',\n            freq: 61.73541\n            },\n            {\n            note: 'A#1/Bb1',\n            freq: 58.27047\n            },\n            {\n            note: 'A1',\n            freq: 55.00000\n            },\n            {\n            note: 'G#1/Ab1',\n            freq: 51.91309\n            },\n            {\n            note: 'G1',\n            freq: 48.99943\n            },\n            {\n            note: 'F#1/Gb1',\n            freq: 46.24930\n            },\n            {\n            note: 'F1',\n            freq: 43.65353\n            },\n            {\n            note: 'E1',\n            freq: 41.20344\n            },\n            {\n            note: 'D#1/Eb1',\n            freq: 38.89087\n            },\n            {\n            note: 'D1',\n            freq: 36.70810\n            },\n            {\n            note: 'C#1/Db1',\n            freq: 34.64783\n            },\n            {\n            note: 'C1',\n            freq: 32.70320\n            },\n            {\n            note: 'B0',\n            freq: 30.86771\n            },\n            {\n            note: 'A#0/Bb0',\n            freq: 29.13524\n            },\n            {\n            note: 'A0',\n            freq: 27.50000\n            },\n            {\n            note: 'G#0/Ab0',\n            freq: 25.95654\n            },\n            {\n            note: 'G0',\n            freq: 24.49971\n            },\n            {\n            note: 'F#0/Gb0',\n            freq: 23.12465\n            },\n            {\n            note: 'F0',\n            freq: 21.82676\n            },\n            {\n            note: 'E0',\n            freq: 20.60172\n            },\n            {\n            note: 'D#0/Eb0',\n            freq: 19.44544\n            },\n            {\n            note: 'D0',\n            freq: 18.35405\n            },\n            {\n            note: 'C#0/Db0',\n            freq: 17.32391\n            },\n            {\n            note: 'C0',\n            freq: 16.35160\n            }\n        ]\n    } else if (tuningMode === \"uke\") {\n        notes = [\n            {\n                note: 'A4',\n                freq: 440\n            },\n            {\n                note: 'E4',\n                freq: 329.6276\n            },\n            {\n                note: 'C4',\n                freq: 261.6256\n            },\n            {\n                note: 'G4',\n                freq: 391.9954\n            },\n        ]\n    } else if (tuningMode === \"guitar\") {\n        notes = [\n            {\n                note: 'E4',\n                freq: 329.6276\n            },\n            {\n                note: 'B3',\n                freq: 246.9417\n            },\n            {\n                note: 'G3',\n                freq: 195.9977\n            },\n            {\n                note: 'D3',\n                freq: 146.8324\n            },\n            {\n                note: 'A2',\n                freq: 110.0000\n            },\n            {\n                note: 'E2',\n                freq: 82.40689\n            },\n        ]\n    } else if (tuningMode === \"bass\") {\n        notes = [\n            {\n                note: 'G2',\n                freq: 195.9977\n            },\n            {\n                note: 'D2',\n                freq: 146.8324\n            },\n            {\n                note: 'A1',\n                freq: 110.0000\n            },\n            {\n                note: 'E1',\n                freq: 82.40689\n            },\n        ]\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"fork\")\n    }, [])\n\n\n    const setup = (p5, canvasParentRef) => {\n\t\tp5.createCanvas(400, 400).parent(canvasParentRef)\n\t}\n\n    const draw = (p5) => {\n\n        p5.background(51);\n        p5.textAlign(p5.CENTER, p5.CENTER)\n        p5.fill(255)\n        p5.textSize(32)\n        p5.text(freq.toFixed(2), p5.width / 2, p5.height - 150);\n\n        let closestNote = -1\n        let recordDiff = Infinity\n        for (let i = 0; i < notes.length; i++) {\n            let diff = freq - notes[i].freq\n            if (p5.abs(diff) < p5.abs(recordDiff)) {\n            closestNote = notes[i]\n            recordDiff = diff\n            }\n        }\n\n        p5.textSize(64)\n        p5.text(closestNote.note, p5.width / 2, p5.height - 50)\n\n        let diff = recordDiff\n\n        let alpha = p5.map(p5.abs(diff), 0, 100, 255, 0)\n        p5.rectMode(p5.CENTER)\n        p5.fill(255, alpha)\n        p5.stroke(255)\n        p5.strokeWeight(1)\n        if (p5.abs(diff) < threshold) {\n            p5.fill(89, 193, 142)\n        }\n        p5.rect(200, 100, 200, 50)\n\n        p5.stroke(255)\n        p5.strokeWeight(4)\n        p5.line(200, 0, 200, 200)\n\n        p5.noStroke()\n        p5.fill(255, 98, 71)\n        if (p5.abs(diff) < threshold) {\n            p5.fill(89, 193, 142)\n        }\n        p5.rect(200 + diff / .5 , 100, 10, 75)\n\t}\n\n    const startTuner = () => {\n        setTunerOpen(true)\n        let AudioContext = window.AudioContext || window.webkitAudioContext\n        audioContext = new AudioContext();\n        \n        const setup = async () => {\n            StartAudioContext(audioContext)\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n            startPitch(stream, audioContext)\n        }\n\n        setup();\n\n        const startPitch = (stream, audioContext) => {\n            pitch = pitchDetection('../../model', audioContext , stream, modelLoaded)\n        }\n\n        const modelLoaded = () => {\n            getPitch()\n        }\n\n        const getPitch = () => {\n            pitch.getPitch(function(err, frequency) {\n                if (frequency) {\n                    setFreq(frequency)\n                    console.log(frequency)\n                } \n                if (tunerMounted) {\n                    getPitch();\n                    // clearTimeout\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (freq === freq) {\n                setTunerMounted(false)\n                setTunerOpen(false)\n            }\n        }, 60000)\n    }, [freq])\n\n    useEffect(() => {\n        setTunerMounted(true)\n\n        return function cleanup() {\n            setTunerMounted(false)\n        }\n\n    }, [ freq, tunerOpen])\n\n    return (\n        <div className=\"fork-container\">\n            {!tunerOpen && <ForkIcon width=\"200\" /> }\n            <h1>Fork</h1>\n            {!tunerOpen ? (\n                <>\n                    <label htmlFor=\"tuningMode\">Tuning mode</label>\n                    <select value={tuningMode} onChange={(e)=>setTuningMode(e.target.value)} name=\"tuningMode\" id=\"tuningMode\">\n                        <option value=\"chromatic\">Chromatic</option>\n                        <option value=\"guitar\">Guitar</option>\n                        <option value=\"bass\">Bass</option>\n                        <option value=\"uke\">Ukulele</option>\n                    </select>\n                    <div className=\"startBtn timerBtn\" onClick={startTuner}>Tune</div>\n                </>\n                ) : (\n                    <Sketch setup={setup} draw={draw} />\n                )\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx",["248"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { NewSessionForm } from \"./NewSessionForm.jsx\"\nimport { PracticeLog } from \"./PracticeLog.jsx\"\n\nimport \"./Log.scss\"\n\nexport const Log = () => {\n    const [ newLogOpen, setNewLogOpen ] = useState(false)\n    const { setActivePage } = useContext(StoreContext)\n    \n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"log\")\n    }, [])\n\n    return (\n        <div className=\"log-container\">\n            <h1>New Practice Session</h1>\n            {newLogOpen ? (\n                <NewSessionForm />\n            ) :\n            <div className=\"logStart startBtn timerBtn\" onClick={()=>setNewLogOpen(true)}>New Session</div>\n            }\n            <hr className=\"hr\"/>\n            <PracticeLog />\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx",["249"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx",["250"],"import { useState, useContext, useEffect } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { NewRecording } from \"./NewRecording.jsx\"\nimport { MyRecordings } from \"./MyRecordings.jsx\"\n\nexport const Record = () => {    \n    const { setActivePage, user } = useContext(StoreContext)\n    const [ update, setUpdate ] = useState(0)\n    const [ updateTwo, setUpdateTwo ] = useState(0)\n    const [ loadingComplete, setLoadingComplete] = useState(false)\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setActivePage(\"record\")\n    }, [])\n\n    return (\n        <div>\n            <NewRecording loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} />\n            {user && \n                <>\n                    <hr style={{width: \"60%\", marginTop: \"2em\", border:\"1.5px solid #222\", backgroundColor: \"#222\"}} />\n                    <MyRecordings loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} />\n                </>\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx",["251","252","253","254","255"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport Moment from \"react-moment\"\nimport \"moment-timezone\"\nimport Loader from \"react-loader-spinner\";\n\nimport { CloseIcon } from \"../icons/CloseIcon\"\n\nimport \"./MyRecordings.scss\"\n\nMoment.globalLocal = true\n\nlet selectedRecording\n\nexport const MyRecordings = ({loadingComplete, setLoadingComplete, update, setUpdate, updateTwo, setUpdateTwo}) => {\n    const { firebase, user } = useContext(StoreContext)\n    const [ myRecordings, setMyRecordings ] = useState([])\n    const [ myRecordingsURL, setMyRecordingsURL ] = useState([])\n    const [ myRecordingsMetadata, setMyRecordingsMetadata ] = useState([])\n    // const [ loadingComplete, setLoadingComplete] = useState(false)\n    const [ deleteRecordingModal, setDeleteRecordingModal] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ loadingSpinner, setLoadingSpinner ] = useState(false)\n    \n    let userId, storage, listRef\n\n    const fetchRecordings = () => {\n        userId = user.uid\n        storage = firebase.storage().ref(`audio/${userId}`)\n        listRef = storage.child(`audio/${userId}`)\n        storage.list().then(snap => {\n            let metadataPromise = []\n            let urlPromise = []\n\n            snap.items.map(itemRef => metadataPromise.push(itemRef.getMetadata()))\n            snap.items.map(itemRef => urlPromise.push(itemRef.getDownloadURL()))\n            \n            Promise.all(metadataPromise).then((data) => {\n                setMyRecordingsMetadata(data)\n            })\n            \n            Promise.all(urlPromise).then((data) => {\n                setMyRecordingsURL(data)\n                // setLoadingComplete(true)\n            })\n        })\n    }\n    \n    useEffect(() => {\n        if(user) {\n            fetchRecordings()\n            updateList()\n        }\n    }, [])\n\n    useEffect(()=> {\n        if (deleteRecordingModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ deleteRecordingModal]);\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n    }, [modalOpen]);\n\n\n    const setRecordings = () => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n    }\n    \n    const updateList = () => {\n        // console.log(\"update\")\n        // setLoadingComplete(false)\n        fetchRecordings()\n        setRecordings()\n        // setLoadingComplete(true)\n    }\n\n    useEffect(() => {\n        setTimeout(()=> {\n            updateList()\n            setLoadingComplete(true)\n        }, 1000)\n    }, [])\n\n    useEffect(() => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n        // updateList()\n    }, [loadingComplete])\n\n    const handleDeleteRecording = (recording) => {\n        setDeleteRecordingModal(true)\n        selectedRecording = recording\n    }\n\n    const deleteRecording = () => {\n        setDeleteRecordingModal(false)\n        const deleteRef = firebase.storage().ref(selectedRecording.meta.fullPath)\n        deleteRef.delete().then(() => {\n            updateList()\n            setLoadingSpinner(true)\n            const newUpdate = update + 1\n            setTimeout(()=> {\n                setUpdate(newUpdate)\n                setLoadingSpinner(false)\n            }, 500)\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    useEffect(()=> {\n        updateList()\n    }, [update, updateTwo])\n    \n    return (\n        <div className=\"recordings-container\">\n                <h1>My Recordings</h1>\n                <ul>\n                    {loadingComplete && <button className=\"modalBtn skip\" onClick={updateList}>Update list</button>}\n                    {loadingComplete ? (\n                        myRecordings.map((recording, index) => (\n                            <li className=\"recording-card\" key={index}>\n                                {loadingSpinner && selectedRecording ? \n                                    <Loader className=\"delete-recording-button\" type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30}/> :\n                                    <div className=\"delete-recording-button\" onClick={()=>handleDeleteRecording(recording)}><CloseIcon/></div>\n                                }\n                                <h2>{recording.meta.name.substring(0, recording.meta.name.length - 4)}</h2>\n                                <span>\n                                    <Moment format=\"MMMM Do, YYYY\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <span>\n                                    <Moment format=\"LT\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <audio src={recording.url} controls=\"controls\" />\n                            </li>\n                        ))\n                        ): \n                        <div>\n                            <Loader type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30} />\n                            <p>Loading</p>\n                        </div>\n                    }\n                    {myRecordings.length === 0 && loadingComplete && (\n                        <div>\n                            <p>You do not have any recordings saved...</p> \n                            <p>Click above to create your first recording</p>\n                        </div>\n                    )\n                    }\n                </ul>\n                {deleteRecordingModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will permanently delete this recording</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteRecordingModal(false)}>Back</button>\n                        <button className=\"modalBtn cancel\" onClick={deleteRecording}>Delete</button>\n                    </div>\n                </div>) \n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx",["256","257"],"/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx",["258"],"import { useEffect, useContext } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport { StoreContext } from \"../Store\"\nimport firebase, { uiConfig } from \"../firebase\"\n\nimport { Login } from \"./Login.jsx\";\n\nimport { LogIcon } from \"../icons/LogIcon\"\nimport { PaperClipIcon } from \"../icons/PaperClipIcon\"\nimport { RecordIconLarge } from \"../icons/RecordIconLarge\"\nimport { MetDroneIconLarge } from \"../icons/MetDroneIconLarge\"\nimport { ForkIconLarge } from \"../icons/ForkIconLarge\"\nimport { PieChartIcon } from \"../icons/PieChartIcon\"\n\nimport \"./User.scss\"\n\nconst firebaseAuth = firebase.auth()\n\nexport const User = () => {\n    const { user, setActivePage } = useContext(StoreContext)\n\n    useEffect(() => {\n        setActivePage(\"user\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    return (\n        <div className=\"userContainer\">\n            {!user && \n                <div>\n                    <h1>Welcome to Shedr</h1>\n                    <p>To get the most out of Shedr, please login or sign up.</p>\n                    <p>With an account you can save practice logs, create a repertoire list, and even make recordings. <br/> Best of all you can access all of this content from any of your devices when you're logged in.</p>\n                    <Login uiConfig={uiConfig} firebaseAuth={firebaseAuth} /> \n                    <p>Sign up</p>\n                </div>\n                }\n                {user && (\n                <div>\n                    <h1>Hello {user.displayName.split(\" \")[0]}, welcome to Shedr</h1>\n                    <p style={{color: \"orange\"}}>Choose an option below</p>\n                <div className=\"userDashboard\">\n                    <Link to=\"/log\">\n                        <div className=\"card\">\n                            <LogIcon />\n                            <h2>Practice log</h2>\n                        </div>\n                    </Link>\n                    <Link to=\"/rep\">\n                        <div className=\"card\">\n                            <PaperClipIcon />\n                            <h2>Repertoire list</h2>\n                        </div>\n                    </Link>\n                    <Link to=\"/stats\">\n                        <div className=\"card\">\n                            <PieChartIcon />\n                            <h2>Practice stats</h2>\n                        </div>\n                    </Link>\n                    <Link to=\"/record\">\n                        <div className=\"card\">\n                            <RecordIconLarge />\n                            <h2>Record</h2>\n                        </div>\n                    </Link>\n                    <Link to=\"/metdrone\">\n                        <div className=\"card\">\n                            <MetDroneIconLarge />\n                            <h2>MetDrone</h2>\n                        </div>\n                    </Link>\n                    <Link to=\"/fork\">\n                        <div className=\"card\">\n                            <ForkIconLarge />\n                            <h2>Tuner</h2>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        )}\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx",["259","260"],"import { useState, useEffect, useContext } from 'react'\nimport { StoreContext } from '../Store'\nimport { TrashIcon } from \"../icons/TrashIcon\"\nimport { EditIcon } from \"../icons/EditIcon\"\n\nimport \"./RepList.scss\"\n\nlet selectedRep\n\nexport const RepList = () => {\n    const [ newTitle, setNewTitle ] = useState(\"\")\n    const [ newArtist, setNewArtist ] = useState(\"\")\n    const [ newStyle, setNewStyle ] = useState(\"\")\n    const [ newNotes, setNewNotes ] = useState(\"\")\n    const [ addRepModal, setAddRepModal ] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ filterRepertoire, setFilterRepertoire ] = useState(false)\n    const [ filterSearch, setFilterSearch ] = useState(\"\")\n    const [ rep, setRep ] = useState([])\n    const [ deleteRepModal, setDeleteRepModal] = useState(false)\n    const [ editRepModal, setEditRepModal] = useState(false)\n\n    const { user, firebase, setActivePage } = useContext(StoreContext)\n\n    let userId\n    if(user) {\n        userId = user.uid\n    } else {\n        userId = null\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"none\")\n    }, [])\n\n\n    const confirmAddRep = (e) => {\n        e.preventDefault();\n        const repRef = firebase.database().ref(\"repertoire/\" + userId);\n        const newRep = { title: newTitle, artist: newArtist, style: newStyle, notes: newNotes };\n        repRef.push(newRep);\n\n        setNewTitle(\"\");\n        setNewArtist(\"\");\n        setNewStyle(\"\");\n        setNewNotes(\"\");\n        setAddRepModal(false);\n    }\n\n    const handleDeleteRep = (id) => {\n        setDeleteRepModal(true)\n        selectedRep = id;\n    }\n    \n    const confirmDeleteRep = () => {\n        removeRep(selectedRep);\n        setDeleteRepModal(false);\n    }\n\n    const removeRep = (songId) => {\n        const songRef = firebase.database().ref(`/repertoire/${user.uid}/${songId}`);\n        songRef.remove();\n    }\n\n    const handleEditRep = (song) => {\n        setNewTitle(song.title)\n        setNewArtist(song.artist)\n        setNewStyle(song.style)\n        setNewNotes(song.notes)\n        setEditRepModal(true);\n        selectedRep = song.id;\n    }\n    \n    const confirmEditRep = () => {\n        editRep(selectedRep);\n        setEditRepModal(false);\n    }\n    \n    const editRep = (songId) => {\n        const songRef = firebase.database().ref(`/repertoire/${user.uid}/${songId}`);\n        const updatedSong = { title: newTitle, artist: newArtist, style: newStyle, notes: newNotes };\n        songRef.update(updatedSong); \n        setNewTitle(\"\");\n        setNewArtist(\"\");\n        setNewStyle(\"\");\n        setNewNotes(\"\");       \n    }\n    \n    \n    \n    useEffect(()=> {\n        if (addRepModal || deleteRepModal || editRepModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [addRepModal, deleteRepModal, editRepModal]);\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n    }, [modalOpen]);\n    \n    useEffect(() => {\n        if(user) {        \n            const repertoireRef = firebase.database().ref('repertoire/' + user.uid);\n            repertoireRef.on('value', (snapshot) => {\n                const songs = snapshot.val();\n                let newState = [];\n                for (let song in songs) {\n                    newState.push({\n                        id: song,\n                        title: songs[song].title,\n                        artist: songs[song].artist,\n                        style: songs[song].style,\n                        notes: songs[song].notes,\n                        });\n                    }\n                newState.sort((a,b)=> (a.title > b.title ? 1 : -1))\n                setRep(newState);\n            });\n        }\n    }, [user]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    return (\n        <div className=\"rep-list-container\">\n            <h1>Repertoire List</h1>\n            <div>\n                <button className=\"timerBtn submitBtn\" onClick={()=>setAddRepModal(true)}>Add</button>\n                {rep.length !== 0 && \n                    <button className=\"timerBtn cancelBtn\" onClick={()=>setFilterRepertoire(!filterRepertoire)}>Filter</button>\n                }\n            </div>\n            {rep.length !== 0 ? (\n                <>\n                    {filterRepertoire && (\n                        <div>\n                            <label className=\"sr-only\" htmlFor=\"filterRep\">Filter</label>\n                            <input value={filterSearch} onChange={e=>setFilterSearch(e.target.value)} className=\"rep-search-field\" type=\"text\" id=\"filterRep\" placeholder=\"Filter song by title, artist, composer, etc...\" rows=\"5\" />\n                        </div>\n                    )}\n                    <table className=\"rep-table\">\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Artist/Composer</th>\n                                <th>Style</th>\n                                <th>Notes</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rep.length !== 0 && (\n                                rep.map((song)=> (\n                                    <tr key={song.id}>\n                                        <td>{song.title}</td>\n                                        <td>{song.artist}</td>\n                                        <td>{song.style}</td>\n                                        <td>\n                                            <div className=\"remove-edit-rep\">\n                                                <div className=\"rep-icon\" onClick={()=>handleEditRep(song)}>\n                                                    <EditIcon  />\n                                                </div>\n                                                <div className=\"rep-icon\" onClick={()=>handleDeleteRep(song.id)}>\n                                                    <TrashIcon />\n                                                </div>\n                                            </div>\n                                            <div className=\"rep-notes\">{song.notes}</div>\n                                        </td>\n                                    </tr>\n                                ))\n                            )}\n                        </tbody>\n                    </table>\n                    </>\n                ) :\n                <div>\n                    <p>You do not have any songs saved...</p> \n                    <p>Click above to add your first song</p>\n                </div>\n            }\n            {addRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"add-rep\" onSubmit={confirmAddRep}>\n                        <h2>Add new song</h2>\n                            <label htmlFor=\"title\">Title</label>\n                            <input value={newTitle} onChange={e=>setNewTitle(e.target.value)} id=\"title\" type=\"text\"/>\n                            <label htmlFor=\"artistComposer\">Artist/Composer</label>\n                            <input value={newArtist} onChange={e=>setNewArtist(e.target.value)} id=\"artistComposer\" type=\"text\"/>\n                            <label htmlFor=\"style\">Style</label>\n                            <input value={newStyle} onChange={e=>setNewStyle(e.target.value)} id=\"style\" type=\"text\"/>\n                            <label htmlFor=\"title\">Notes</label>\n                            <input value={newNotes} onChange={e=>setNewNotes(e.target.value)} id=\"notes\" type=\"text\"/>\n                            <div>\n                                <button type=\"button\" className=\"modalBtn cancel\" onClick={()=>setAddRepModal(false)}>Cancel</button>\n                                <button type=\"submit\" className=\"modalBtn submit\">Add</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>)\n            }\n            {deleteRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will delete this item from your repertoire list</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteRepModal(false)}>Cancel</button>\n                        <button className=\"modalBtn cancel\" onClick={confirmDeleteRep}>Delete</button>\n                    </div>\n                </div>)\n            }\n            {editRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                    <form className=\"add-rep\" onSubmit={confirmEditRep}>\n                        <h2>Edit Rep</h2>\n                            <label htmlFor=\"title\">Title</label>\n                            <input value={newTitle} onChange={e=>setNewTitle(e.target.value)} id=\"title\" type=\"text\"/>\n                            <label htmlFor=\"artistComposer\">Artist/Composer</label>\n                            <input value={newArtist} onChange={e=>setNewArtist(e.target.value)} id=\"artistComposer\" type=\"text\"/>\n                            <label htmlFor=\"style\">Style</label>\n                            <input value={newStyle} onChange={e=>setNewStyle(e.target.value)} id=\"style\" type=\"text\"/>\n                            <label htmlFor=\"title\">Notes</label>\n                            <input value={newNotes} onChange={e=>setNewNotes(e.target.value)} id=\"notes\" type=\"text\"/>\n                            <div>\n                                <button type=\"button\" className=\"modalBtn skip\" onClick={()=>setEditRepModal(false)}>Cancel</button>\n                                <button type=\"submit\" className=\"modalBtn submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>)\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/App.jsx",["261"],"import { useEffect, useContext } from \"react\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport { auth } from \"./firebase.js\"\nimport FirebaseAuthContext from \"./firebaseAuthContext\"\n\nimport { Router } from \"./Router\"\nimport { Header } from \"./components/Header.jsx\"\nimport { Footer } from \"./components/Footer.jsx\"\nimport { StoreContext } from \"./Store\"\n\nexport const App = () => {\n  const { setUser } = useContext(StoreContext)\n  \n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } \n      })\n    },[])\n\n    // console.clear()\n    \n  return (\n    <FirebaseAuthContext>\n      <BrowserRouter>\n        <Header />\n        <Router />\n        <Footer />\n      </BrowserRouter>\n    </FirebaseAuthContext>\n  )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx",["262","263","264","265"],"import { useState, useEffect, useRef , useContext} from \"react\"\nimport { StoreContext } from \"../../Store\"\n\nimport * as Tone from \"tone\"\nimport StartAudioContext from \"startaudiocontext\"\n\nimport click1Sample from \"./audio/click1.flac\"\nimport click3Sample from \"./audio/click3.wav\"\n\nimport \"./Metronome.scss\"\n\nconst click1 = new Tone.Player(click1Sample).toDestination()\n//-------SAVE FOR POLYRHYTHM MODE!!!-------------\n// const click2 = new Tone.Player(click2Sample).toDestination()\nconst click3 = new Tone.Player(click3Sample).toDestination()\n\nexport const Metronome = () => {    \n    const { tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, setPosition, accent, setAccent, setClickVolume, clickVolume, polyrhythmMode, setPolyrhythmMode, polyrhythm, setPolyrhythm } = useContext(StoreContext)\n    const [taps, setTaps] = useState([])\n    \n    //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n    const three = 0.6666666666666666666666666666666666666666666666666666667\n    const five = 0.4\n    const seven = 0.285714285714286\n    \n    const handleTapTempo = () => {\n        if(!playing) {\n            click3.start()\n        }\n        let time = Date.now()\n        const newTaps = [...taps, time]\n        if (newTaps.length === 3) {\n            newTaps.shift()\n        }\n        setTaps(newTaps)\n    }\n    \n    useEffect(() => {\n        if (taps.length > 1) {\n            let newTaps = []\n            \n            taps.forEach((tap, i) => {\n                const tapMath = 60000 / (taps[i] - taps[i - 1])\n                newTaps.push(tapMath)\n            })\n            newTaps.shift()\n            let avgBpm = newTaps = newTaps.reduce((a,b) => a + b, 0) / newTaps.length\n            avgBpm = Math.round(avgBpm)\n            setTempo(avgBpm)\n        }\n    }, [taps])\n    \n    const handleClickVolume = (e) => {\n        setClickVolume(e.target.value)\n    }\n    \n    const gainToDecibels = (value) => {\n        if (value == null) return 0\n        return 20 * (0.43429 * Math.log(value))\n    }\n    \n    useEffect(() => {\n        click1.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n    \n    //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n    // useEffect(() => {\n    //     click2.volume.value = gainToDecibels(clickVolume)\n    // }, [clickVolume])\n    \n    useEffect(() => {\n        click3.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n    \n    const handleAccent = () => {\n        if (playing) {\n            stopClick()\n            setAccent(!accent)\n            playClick()\n        } else {\n            setAccent(!accent)\n        }\n    }\n    \n    const handleTimeSig = (e) => {\n        setTimeSig(parseInt(e.target.value))\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempo = (e) => {\n        setTempo(e.target.value)\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempoInput = (e) => {\n        if(e.target.value !== \"\") {\n            setTempo(e.target.value)\n        } else {\n            stopClick()\n            setPlaying(false)\n            setTempo(e.target.value)\n        }\n    }\n    \n    const startStop = () => {\n        StartAudioContext(Tone.context)\n        Tone.start()\n        \n        if(!playing) {\n            setPlaying(true)\n            playClick()\n        } else {\n            Tone.Transport.cancel();\n            Tone.Transport.stop();\n            setPlaying(false)\n        }\n    }\n    \n    const playClick = () => {\n        if (tempo !== \"\") {\n            const bpmNum = parseInt(tempo);\n        \n        Tone.Transport.bpm.value = bpmNum;\n        Tone.Transport.timeSignature = timeSig;        \n        \n        accent && (\n        Tone.Transport.scheduleRepeat((time) => {\n            click1.start(time)\n        }, \"1m\")\n        )        \n        \n        Tone.Transport.scheduleRepeat((time) => {\n            setPosition(Tone.Transport.position)\n            click3.start(time)\n        }, \"4n\");\n        \n        //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n        // if(polyrhythmMode) {\n        //     setTimeSig(4)\n        //     Tone.Transport.scheduleRepeat((time) => {\n        //         setPosition(Tone.Transport.position)\n        //         click2.start(time)\n        //     }, polyrhythm);\n        // }\n\n        Tone.Transport.start();\n\n        }\n    }\n    \n    const stopClick = () => {\n        Tone.Transport.stop();\n        Tone.Transport.cancel();\n        Tone.Transport.position = \"0:0:0\"\n    }\n    \n    const newPosition = parseInt(Tone.Transport.position.split(':')[1])\n    \n    const didMountRef = useRef(false)\n    \n    useEffect(() => {\n        if (didMountRef.current) {\n            if (playing) {\n                stopClick()\n                playClick()\n            }\n        } else didMountRef.current = true\n    }, [accent, timeSig, tempo, polyrhythm, polyrhythmMode])\n    \n    return (\n        <div className=\"metronome\">\n            {playing ? <h1 style={{color: \"#5AC18E\"}}>Met</h1> : <h1 style={{color: \"white\"}}>Met</h1>}\n            <div>\n                <input checked={accent} type=\"checkbox\" id=\"accent\" onChange={handleAccent} />\n                <label htmlFor=\"accent\" style={{fontWeight: 400}} >Accent</label>\n            </div>\n            {/* //-------SAVE FOR POLYRHYTHM MODE!!!------------- */}\n            {/* <div>\n                <input checked={polyrhythmMode} type=\"checkbox\" id=\"poly\" onChange={()=>setPolyrhythmMode(!polyrhythmMode)} />\n                <label htmlFor=\"poly\" style={{fontWeight: 400}} >Polyrhythm mode</label>\n            </div> */}\n            <div className=\"met-settings\">\n                {!polyrhythmMode ? (\n                <>\n                    <label htmlFor=\"selectTimeSig\">Time signature</label><br/>\n                    <select onChange={handleTimeSig} name=\"selectTimeSig\" id=\"selectTimeSig\" value={timeSig}>\n                        <option value=\"4\">4/4</option>\n                        <option value=\"3\">3/4</option>\n                        <option value=\"5\">5/4</option>\n                        <option value=\"7\">7/4</option>\n                    </select>\n                </>\n                ) : (\n                    <>\n                        <label className=\"time-sig-label\" htmlFor=\"selectPoly\">Polyrhythm</label><br/>\n                        <select onChange={(e)=>setPolyrhythm(e.target.value)} name=\"selectPoly\" id=\"selectPoly\" value={polyrhythm}>\n                            {/* <option value=\"3:2\">3:2</option> */}\n                            <option value={three}>3:4</option>\n                            <option value={five}>5:4</option>\n                            <option value={seven}>7:4</option>\n                            {/* <option value=\"7:8\">7:8</option> */}\n                        </select>\n                    </>\n                )}\n                <div className=\"bpm-slider\">\n                    <label htmlFor=\"bpmSlider\">Tempo</label>\n                    <div><input style={{width: \"2.5em\", fontSize: \"1.5em\"}} type=\"text\" value={tempo} onChange={handleTempoInput} /> BPM</div>\n                    <input\n                        id=\"bpmSlider\"\n                        type=\"range\"\n                        min=\"01\"\n                        max=\"400\"\n                        value={tempo}\n                        onChange={handleTempo} \n                    />\n                </div>\n                <div className=\"bpm-slider\">\n                    <label htmlFor=\"volumeSlider\">Volume</label><br/>\n                    <div>{clickVolume != 1 ? Math.round(clickVolume * 10): 11}</div>\n                    <input \n                        id=\"volumeSlider\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"1\"\n                        step=\"0.01\"\n                        value={clickVolume}\n                        onChange={handleClickVolume}\n                    />\n                </div>\n            </div>\n            <button id=\"startStopBtn\" onClick={startStop}>\n                {playing ? 'Stop' : 'Start'}\n            </button>\n            <button onMouseDown={handleTapTempo}>Tap</button>\n            {playing ? <h3 className=\"Count\" style={{\"fontSize\": \"6em\", \"color\":\"#FFF\"}}>{newPosition + 1}</h3> : <div></div>}\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx",["266","267","268","269","270","271","272","273","274"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx",["275"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx",["276","277","278","279"],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx",["280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"281","replacedBy":"285"},{"ruleId":"283","replacedBy":"286"},{"ruleId":"281","replacedBy":"287"},{"ruleId":"283","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":6,"column":1,"nodeType":"291","endLine":132,"endColumn":2},{"ruleId":"292","severity":1,"message":"293","line":34,"column":7,"nodeType":"294","endLine":34,"endColumn":9,"suggestions":"295"},{"ruleId":"292","severity":1,"message":"296","line":15,"column":8,"nodeType":"294","endLine":15,"endColumn":10,"suggestions":"297"},{"ruleId":"292","severity":1,"message":"296","line":21,"column":8,"nodeType":"294","endLine":21,"endColumn":10,"suggestions":"298"},{"ruleId":"292","severity":1,"message":"296","line":18,"column":8,"nodeType":"294","endLine":18,"endColumn":10,"suggestions":"299"},{"ruleId":"292","severity":1,"message":"296","line":528,"column":8,"nodeType":"294","endLine":528,"endColumn":10,"suggestions":"300"},{"ruleId":"301","severity":1,"message":"302","line":617,"column":17,"nodeType":"303","messageId":"304","endLine":617,"endColumn":30},{"ruleId":"292","severity":1,"message":"305","line":622,"column":8,"nodeType":"294","endLine":622,"endColumn":14,"suggestions":"306"},{"ruleId":"292","severity":1,"message":"305","line":631,"column":8,"nodeType":"294","endLine":631,"endColumn":26,"suggestions":"307"},{"ruleId":"292","severity":1,"message":"296","line":16,"column":8,"nodeType":"294","endLine":16,"endColumn":10,"suggestions":"308"},{"ruleId":"292","severity":1,"message":"309","line":55,"column":8,"nodeType":"294","endLine":55,"endColumn":23,"suggestions":"310"},{"ruleId":"292","severity":1,"message":"296","line":16,"column":8,"nodeType":"294","endLine":16,"endColumn":10,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":31,"column":9,"nodeType":"314","messageId":"315","endLine":31,"endColumn":16},{"ruleId":"292","severity":1,"message":"316","line":55,"column":8,"nodeType":"294","endLine":55,"endColumn":10,"suggestions":"317"},{"ruleId":"292","severity":1,"message":"318","line":111,"column":8,"nodeType":"294","endLine":111,"endColumn":10,"suggestions":"319"},{"ruleId":"292","severity":1,"message":"320","line":136,"column":8,"nodeType":"294","endLine":136,"endColumn":25,"suggestions":"321"},{"ruleId":"292","severity":1,"message":"322","line":161,"column":8,"nodeType":"294","endLine":161,"endColumn":27,"suggestions":"323"},{"ruleId":"292","severity":1,"message":"324","line":37,"column":8,"nodeType":"294","endLine":37,"endColumn":14,"suggestions":"325"},{"ruleId":"312","severity":1,"message":"326","line":47,"column":11,"nodeType":"314","messageId":"315","endLine":47,"endColumn":19},{"ruleId":"292","severity":1,"message":"296","line":26,"column":8,"nodeType":"294","endLine":26,"endColumn":10,"suggestions":"327"},{"ruleId":"292","severity":1,"message":"296","line":35,"column":8,"nodeType":"294","endLine":35,"endColumn":10,"suggestions":"328"},{"ruleId":"292","severity":1,"message":"309","line":127,"column":8,"nodeType":"294","endLine":127,"endColumn":14,"suggestions":"329"},{"ruleId":"292","severity":1,"message":"330","line":21,"column":7,"nodeType":"294","endLine":21,"endColumn":9,"suggestions":"331"},{"ruleId":"312","severity":1,"message":"332","line":18,"column":149,"nodeType":"314","messageId":"315","endLine":18,"endColumn":166},{"ruleId":"292","severity":1,"message":"333","line":51,"column":8,"nodeType":"294","endLine":51,"endColumn":14,"suggestions":"334"},{"ruleId":"292","severity":1,"message":"335","line":174,"column":8,"nodeType":"294","endLine":174,"endColumn":60,"suggestions":"336"},{"ruleId":"337","severity":1,"message":"338","line":225,"column":39,"nodeType":"303","messageId":"339","endLine":225,"endColumn":41},{"ruleId":"292","severity":1,"message":"296","line":14,"column":8,"nodeType":"294","endLine":14,"endColumn":10,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":20,"column":35,"nodeType":"343","endLine":20,"endColumn":82},{"ruleId":"341","severity":1,"message":"342","line":20,"column":135,"nodeType":"343","endLine":20,"endColumn":184},{"ruleId":"341","severity":1,"message":"342","line":20,"column":198,"nodeType":"343","endLine":20,"endColumn":253},{"ruleId":"341","severity":1,"message":"342","line":20,"column":323,"nodeType":"343","endLine":20,"endColumn":375},{"ruleId":"341","severity":1,"message":"342","line":20,"column":388,"nodeType":"343","endLine":20,"endColumn":447},{"ruleId":"341","severity":1,"message":"342","line":20,"column":461,"nodeType":"343","endLine":20,"endColumn":537},{"ruleId":"341","severity":1,"message":"342","line":20,"column":569,"nodeType":"343","endLine":20,"endColumn":617},{"ruleId":"341","severity":1,"message":"342","line":20,"column":632,"nodeType":"343","endLine":20,"endColumn":676},{"ruleId":"292","severity":1,"message":"296","line":12,"column":8,"nodeType":"294","endLine":12,"endColumn":10,"suggestions":"344"},{"ruleId":"292","severity":1,"message":"296","line":16,"column":8,"nodeType":"294","endLine":16,"endColumn":10,"suggestions":"345"},{"ruleId":"292","severity":1,"message":"309","line":45,"column":8,"nodeType":"294","endLine":45,"endColumn":23,"suggestions":"346"},{"ruleId":"292","severity":1,"message":"347","line":79,"column":8,"nodeType":"294","endLine":79,"endColumn":14,"suggestions":"348"},{"ruleId":"292","severity":1,"message":"347","line":93,"column":8,"nodeType":"294","endLine":93,"endColumn":14,"suggestions":"349"},{"ruleId":"292","severity":1,"message":"347","line":126,"column":8,"nodeType":"294","endLine":126,"endColumn":14,"suggestions":"350"},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],["351"],["352"],["351"],["352"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'changeState(s => ...)' if you only need 'state' in the 'changeState' call.","ArrayExpression",["353"],"React Hook useEffect has a missing dependency: 'setActivePage'. Either include it or remove the dependency array.",["354"],["355"],["356"],["357"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'setTunerMounted'. Either include it or remove the dependency array.",["358"],["359"],["360"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["361"],["362"],"no-unused-vars","'listRef' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'fetchRecordings', 'updateList', and 'user'. Either include them or remove the dependency array.",["363"],"React Hook useEffect has missing dependencies: 'setLoadingComplete' and 'updateList'. Either include them or remove the dependency array. If 'setLoadingComplete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["364"],"React Hook useEffect has missing dependencies: 'myRecordingsMetadata' and 'myRecordingsURL'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has a missing dependency: 'updateList'. Either include it or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'audioRef' and 'userId'. Either include them or remove the dependency array.",["367"],"'getAudio' is assigned a value but never used.",["368"],["369"],["370"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["371"],"'setPolyrhythmMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTempo'. Either include it or remove the dependency array.",["372"],"React Hook useEffect has missing dependencies: 'playClick' and 'playing'. Either include them or remove the dependency array.",["373"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["374"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["375"],["376"],["377"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["378"],["379"],["380"],"no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"383","fix":"385"},{"desc":"383","fix":"386"},{"desc":"383","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"383","fix":"392"},{"desc":"393","fix":"394"},{"desc":"383","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"383","fix":"406"},{"desc":"383","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"383","fix":"416"},{"desc":"383","fix":"417"},{"desc":"383","fix":"418"},{"desc":"393","fix":"419"},{"desc":"420","fix":"421"},{"desc":"420","fix":"422"},{"desc":"420","fix":"423"},"Update the dependencies array to be: [state]",{"range":"424","text":"425"},"Update the dependencies array to be: [setActivePage]",{"range":"426","text":"427"},{"range":"428","text":"427"},{"range":"429","text":"427"},{"range":"430","text":"427"},"Update the dependencies array to be: [freq, setTunerMounted]",{"range":"431","text":"432"},"Update the dependencies array to be: [freq, setTunerMounted, tunerOpen]",{"range":"433","text":"434"},{"range":"435","text":"427"},"Update the dependencies array to be: [user, setLogs, firebase]",{"range":"436","text":"437"},{"range":"438","text":"427"},"Update the dependencies array to be: [fetchRecordings, updateList, user]",{"range":"439","text":"440"},"Update the dependencies array to be: [setLoadingComplete, updateList]",{"range":"441","text":"442"},"Update the dependencies array to be: [loadingComplete, myRecordingsMetadata, myRecordingsURL]",{"range":"443","text":"444"},"Update the dependencies array to be: [update, updateList, updateTwo]",{"range":"445","text":"446"},"Update the dependencies array to be: [audioRef, user, userId]",{"range":"447","text":"448"},{"range":"449","text":"427"},{"range":"450","text":"427"},"Update the dependencies array to be: [firebase, user]",{"range":"451","text":"452"},"Update the dependencies array to be: [setUser]",{"range":"453","text":"454"},"Update the dependencies array to be: [setTempo, taps]",{"range":"455","text":"456"},"Update the dependencies array to be: [accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",{"range":"457","text":"458"},{"range":"459","text":"427"},{"range":"460","text":"427"},{"range":"461","text":"427"},{"range":"462","text":"437"},"Update the dependencies array to be: [logs, user]",{"range":"463","text":"464"},{"range":"465","text":"464"},{"range":"466","text":"464"},[830,832],"[state]",[412,414],"[setActivePage]",[699,701],[555,557],[11090,11092],[13609,13615],"[freq, setTunerMounted]",[13760,13778],"[freq, setTunerMounted, tunerOpen]",[455,457],[2118,2133],"[user, setLogs, firebase]",[550,552],[1886,1888],"[fetchRecordings, updateList, user]",[3353,3355],"[setLoadingComplete, updateList]",[4112,4129],"[loadingComplete, myRecordingsMetadata, myRecordingsURL]",[4822,4841],"[update, updateList, updateTwo]",[1392,1398],"[audioRef, user, userId]",[784,786],[1141,1143],[3862,3868],"[firebase, user]",[564,566],"[setUser]",[1769,1775],"[setTempo, taps]",[4840,4892],"[accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",[329,331],[291,293],[491,493],[1701,1716],[3080,3086],"[logs, user]",[3423,3429],[3152,3158]]
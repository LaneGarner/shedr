[{"/Users/lanegarner/Documents/Dev/shedr/src/index.js":"1","/Users/lanegarner/Documents/Dev/shedr/src/firebase.js":"2","/Users/lanegarner/Documents/Dev/shedr/src/Router.js":"3","/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js":"4","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js":"5","/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js":"6","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js":"7","/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js":"8","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js":"9","/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js":"10","/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js":"11","/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js":"12","/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js":"13","/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js":"14","/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js":"15","/Users/lanegarner/Documents/Dev/shedr/src/Store.js":"16","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js":"17","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js":"18","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js":"19","/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js":"20","/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js":"21","/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js":"22","/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js":"23","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js":"24","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js":"25","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js":"26","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js":"27","/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js":"28","/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js":"29","/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js":"30","/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx":"31","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx":"32","/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx":"33","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx":"34","/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx":"35","/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx":"36","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx":"37","/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx":"38","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx":"39","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx":"40","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx":"41","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx":"42","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx":"43","/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx":"44","/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx":"45","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx":"46","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx":"47","/Users/lanegarner/Documents/Dev/shedr/src/App.jsx":"48","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx":"49","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx":"50","/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx":"51","/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx":"52","/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx":"53","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx":"54","/Users/lanegarner/Documents/Dev/shedr/src/components/RecordingIcon.jsx":"55"},{"size":232,"mtime":1616703050188,"results":"56","hashOfConfig":"57"},{"size":1116,"mtime":1616719995036,"results":"58","hashOfConfig":"57"},{"size":1840,"mtime":1618246616171,"results":"59","hashOfConfig":"57"},{"size":873,"mtime":1612799339284,"results":"60","hashOfConfig":"57"},{"size":1006,"mtime":1616703050185,"results":"61","hashOfConfig":"57"},{"size":579,"mtime":1612286994566,"results":"62","hashOfConfig":"57"},{"size":1281,"mtime":1616703050184,"results":"63","hashOfConfig":"57"},{"size":690,"mtime":1616703050182,"results":"64","hashOfConfig":"57"},{"size":906,"mtime":1616703050182,"results":"65","hashOfConfig":"57"},{"size":19145,"mtime":1615855134420,"results":"66","hashOfConfig":"57"},{"size":571,"mtime":1616703050181,"results":"67","hashOfConfig":"57"},{"size":565,"mtime":1616703050182,"results":"68","hashOfConfig":"57"},{"size":805,"mtime":1616703050184,"results":"69","hashOfConfig":"57"},{"size":570,"mtime":1616703050185,"results":"70","hashOfConfig":"57"},{"size":661,"mtime":1616703050181,"results":"71","hashOfConfig":"57"},{"size":4507,"mtime":1616734462994,"results":"72","hashOfConfig":"57"},{"size":19109,"mtime":1616703050184,"results":"73","hashOfConfig":"57"},{"size":5401,"mtime":1616703050183,"results":"74","hashOfConfig":"57"},{"size":5398,"mtime":1616703050182,"results":"75","hashOfConfig":"57"},{"size":577,"mtime":1616703050167,"results":"76","hashOfConfig":"57"},{"size":962,"mtime":1616703050181,"results":"77","hashOfConfig":"57"},{"size":516,"mtime":1616703050186,"results":"78","hashOfConfig":"57"},{"size":892,"mtime":1616703050185,"results":"79","hashOfConfig":"57"},{"size":5480,"mtime":1616703050183,"results":"80","hashOfConfig":"57"},{"size":9764,"mtime":1616719737805,"results":"81","hashOfConfig":"57"},{"size":19375,"mtime":1616719744380,"results":"82","hashOfConfig":"57"},{"size":17516,"mtime":1616703050187,"results":"83","hashOfConfig":"57"},{"size":71637,"mtime":1616719770131,"results":"84","hashOfConfig":"57"},{"size":984,"mtime":1616703050184,"results":"85","hashOfConfig":"57"},{"size":834,"mtime":1616703050182,"results":"86","hashOfConfig":"57"},{"size":349,"mtime":1616703050171,"results":"87","hashOfConfig":"57"},{"size":857,"mtime":1616703050172,"results":"88","hashOfConfig":"57"},{"size":2828,"mtime":1616703050168,"results":"89","hashOfConfig":"57"},{"size":1842,"mtime":1618247469589,"results":"90","hashOfConfig":"57"},{"size":2186,"mtime":1618247448765,"results":"91","hashOfConfig":"57"},{"size":2372,"mtime":1616703050170,"results":"92","hashOfConfig":"57"},{"size":14638,"mtime":1616725331038,"results":"93","hashOfConfig":"57"},{"size":870,"mtime":1616734733002,"results":"94","hashOfConfig":"57"},{"size":14176,"mtime":1616720518069,"results":"95","hashOfConfig":"57"},{"size":9460,"mtime":1616725285855,"results":"96","hashOfConfig":"57"},{"size":1393,"mtime":1616703050179,"results":"97","hashOfConfig":"57"},{"size":7590,"mtime":1616727676124,"results":"98","hashOfConfig":"57"},{"size":10192,"mtime":1616727620061,"results":"99","hashOfConfig":"57"},{"size":3169,"mtime":1618247225766,"results":"100","hashOfConfig":"57"},{"size":10156,"mtime":1616703050179,"results":"101","hashOfConfig":"57"},{"size":1139,"mtime":1616703050180,"results":"102","hashOfConfig":"57"},{"size":930,"mtime":1616703050179,"results":"103","hashOfConfig":"57"},{"size":769,"mtime":1616703050167,"results":"104","hashOfConfig":"57"},{"size":8296,"mtime":1616703050173,"results":"105","hashOfConfig":"57"},{"size":3473,"mtime":1616703050171,"results":"106","hashOfConfig":"57"},{"size":2057,"mtime":1616727509167,"results":"107","hashOfConfig":"57"},{"size":451,"mtime":1616703050179,"results":"108","hashOfConfig":"57"},{"size":4166,"mtime":1616626367037,"results":"109","hashOfConfig":"57"},{"size":3599,"mtime":1616720747016,"results":"110","hashOfConfig":"57"},{"size":1037,"mtime":1616680882843,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1hgxmb7",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"123"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"123"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"114"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"114"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lanegarner/Documents/Dev/shedr/src/index.js",[],["244","245"],"/Users/lanegarner/Documents/Dev/shedr/src/firebase.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Router.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/UserIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIcon.js",[],["246","247"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/VegBurgIcon.js",[],["248","249"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/HomeIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/Logo.js",[],["250","251"],"/Users/lanegarner/Documents/Dev/shedr/src/icons/CloseIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/EditIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PaperClipIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/PieChartIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ClockIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/Store.js",["252"],"import React, { useState, createContext } from \"react\"\nimport firebase, { auth } from \"./firebase.js\"\n\nexport const StoreContext = createContext(null)\n\nexport default ({ children }) => {\n\n    const [ user, setUser ] = useState(null)\n    const [ logs, setLogs ] = useState([])\n\n    const [ activePage, setActivePage ] = useState()\n    const [ hover, setHover ] = useState()\n    \n    const [ isRecording, setIsRecording ] = useState(false)\n    const [ blobURL, setBlobURL ] = useState(\"\")\n    const [ isBlocked, setIsBlocked ] = useState(false)\n    const [ recordingCreated, setRecordingCreated ] = useState(false)\n\n    const [ tempo, setTempo ] = useState(120)\n    const [ playing, setPlaying ] = useState (false)\n    const [ timeSig, setTimeSig ] = useState(4)\n    const [ position, setPosition ] = useState(\"0:0:0\")\n    const [ accent, setAccent ] = useState(true)\n    const [ clickVolume, setClickVolume ] = useState(.99)\n    const [ polyrhythmMode, setPolyrhythmMode ] = useState(false)\n    const [ polyrhythm, setPolyrhythm ] = useState(.6666666666666666666666666666666666666666666666666666667)\n\n    const [ droning, setDroning ] = useState()\n    const [ droneVolume, setDroneVolume ] = useState(.99)\n    const [ root, setRoot ] = useState(\"C\")\n    const [ chordType, setChordType ] = useState(\"minor ninth\")\n\n    const [ activeSession, setActiveSession ] = useState(false)\n    const [ startDate, setStartDate ] = useState(Date.now());\n\n    const [ timerStarted, setTimerStart ] = useState(false)\n    const [ timerRunning, setTimerRunning ] = useState(false)\n    const [ timerPaused, setTimerPaused ] = useState(false)\n    const [ tInterval, setTInterval ] = useState()\n    const [ timer, setTimer ] = useState(\"00:00:00\")\n    const [ differenceState, setDifferenceState ] = useState()\n\n    const [ recordTimerStarted, setRecordTimerStart ] = useState(false)\n    const [ recordTimerRunning, setRecordTimerRunning ] = useState(false)\n    const [ recordTimerPaused, setRecordTimerPaused ] = useState(false)\n    const [ recordTInterval, setRecordTInterval ] = useState()\n    const [ recordTimer, setRecordTimer ] = useState(\"00:00:00\")\n    const [ recordDifferenceState, setRecordDifferenceState ] = useState()\n\n    const [ tunerMounted, setTunerMounted ] = useState(false)\n\n    const [ practiceTime, setPracticeTime ] = useState([\"00\", \"00\", \"00\"])\n    const [ practiceTopicNotes, setPracticeTopicNotes ] = useState({topic: \"\", notes: \"\"})\n    // const [ newLog, setNewLog ] = useState()\n\n    const [ isOpen, setIsOpen ] = useState(false)\n\n    const closeMenu = () => {\n        setIsOpen(false)\n    }\n\n    const removeLog = (logId) => {\n        const logsRef = firebase.database().ref(`/logs/${user.uid}/${logId}`);\n        logsRef.remove();\n    }\n    \n    const logout = () => {\n        auth.signOut()\n        .then(() => {\n        setUser(null)\n        });  \n    }\n\n    const store = {\n        user, setUser,\n        logs, setLogs,\n\n        activePage, setActivePage,\n        hover, setHover,\n\n        isRecording, setIsRecording, \n        blobURL, setBlobURL, \n        isBlocked, setIsBlocked,\n        recordingCreated, setRecordingCreated,\n\n        tempo, setTempo,\n        playing, setPlaying ,\n        timeSig, setTimeSig ,\n        position, setPosition ,\n        accent, setAccent ,\n        clickVolume, setClickVolume,\n        polyrhythmMode, setPolyrhythmMode,\n        polyrhythm, setPolyrhythm,\n        \n        droning, setDroning,\n        droneVolume, setDroneVolume,\n        root, setRoot,\n        chordType, setChordType,\n    \n        activeSession, setActiveSession,\n        startDate, setStartDate,\n    \n        timerStarted, setTimerStart,\n        timerRunning, setTimerRunning,\n        timerPaused, setTimerPaused,\n        tInterval, setTInterval,\n        timer, setTimer,\n        differenceState, setDifferenceState,\n\n        recordTimerStarted, setRecordTimerStart, \n        recordTimerRunning, setRecordTimerRunning, \n        recordTimerPaused, setRecordTimerPaused, \n        recordTInterval, setRecordTInterval, \n        recordTimer, setRecordTimer, \n        recordDifferenceState, setRecordDifferenceState,\n\n        tunerMounted, setTunerMounted,\n    \n        practiceTime, setPracticeTime,\n        practiceTopicNotes, setPracticeTopicNotes,\n        // newLog, setNewLog,\n    \n        isOpen, setIsOpen,\n\n        closeMenu, removeLog, logout, firebase\n\n        // firebase, auth, uiConfig\n\n    }\n\n    return <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/icons/LogoIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconSmall.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/ProtectedRoute.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/firebaseAuthContext.js",["253"],"import React, {createContext,useState, useEffect} from 'react';\nimport { auth } from './firebase';\n\nexport const AuthContext = createContext({userPresent:false,User:null})\n\nexport default function FirebaseAuthContext(props) {    \n\n    let [ state,changeState ] = useState({\n        userDataPresent: false,\n        User:null,\n        listener:null\n    })\n\n    useEffect(()=>{\n        \n        if(state.listener==null){\n        \n    \n        changeState({...state,listener:auth.onAuthStateChanged((User)=>{\n            \n        if(User)\n            changeState(oldState=>({...oldState,userDataPresent:true,User:User}));\n            else\n            changeState(oldState=>({...oldState,userDataPresent:true,User:null}));\n        })});\n        \n    }\n\n    return ()=>{\n    if(state.listener)\n        state.listener()\n    }\n    \n    },[])\n\n    return (\n        <AuthContext.Provider value={state}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/icons/TrashIcon.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/RecordIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/LogIconHeader.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatDrummer.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatFemaleGuitarist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/images/FlatPianist.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/MetDroneIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/icons/ForkIconLarge.js",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/Login.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/MetDrone.jsx",["254"],"import { useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../../Store\"\n\nimport { Metronome } from \"./Metronome.jsx\"\nimport { Drone } from \"./Drone.jsx\"\n\nimport \"./MetDrone.scss\"\n\nexport const MetDrone = () => {\n    const { setActivePage, droneVolume, setDroneVolume } = useContext(StoreContext)\n    \n    useEffect(() => {\n        setActivePage(\"metdrone\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    if(droneVolume === undefined) {\n        setDroneVolume(-10)\n    }\n\n    return (\n        // <div className=\"metDroneContainer\">\n            <div className=\"metdrone-container\">\n                <div className=\"metdrone-component\">\n                    <Metronome />\n                </div>\n                <div className=\"metdrone-component\">\n                    <Drone />\n                </div>\n            </div>\n        // </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/Feedback.jsx",["255"],"import React, { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport TextareaAutosize from \"react-textarea-autosize\"\nimport Axios from \"axios\"\nimport ReCAPTCHA from \"react-google-recaptcha\"\n\nimport \"./Feedback.scss\"\n\nexport const Feedback = () => {\n    const { setActivePage, firebase } = useContext(StoreContext)\n    const [ feedbackForm, setFeedbackForm ] = useState(true)\n    const [ name, setName ] = useState(\"\")\n    const [ email, setEmail ] = useState(\"\")\n    const [ message, setMessage ] = useState(\"\")\n    const [ verified, setVerified ] = useState(false)\n\n    useEffect(() => {\n        setActivePage(\"none\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    const handleFeedbackSubmit = (e) => {\n        e.preventDefault()\n        const data = { name, email, message }\n\n        Axios.post(\"https://us-central1-shedr-app.cloudfunctions.net/submit\", data)\n        .then(res => {\n            return firebase\n                .database()\n                .ref(\"feedback\")\n                .push(data)\n        })\n        .catch(error => {\n            console.log(error)\n        });\n    \n        \n        setName(\"\")\n        setEmail(\"\")\n        setMessage(\"\")\n        setFeedbackForm(false)\n    }\n    \n    \n    return (\n        <div className=\"feedback-form\">\n            {feedbackForm ? (\n            <>\n                <h1>Feedback</h1>\n                <p>Thanks for checking out shedr!</p>\n                <p>What do you think of the app? What would you add? What would you change?</p>\n                <p>Your feedback is <span>highly appreciated</span>, thanks!</p>\n                <form onSubmit={handleFeedbackSubmit}>\n                    <label htmlFor=\"name\">Name*</label>\n                    <input value={name} onChange={e=>setName(e.target.value)} type=\"text\" id=\"name\" placeholder=\"Your name\" required/>\n                    <label htmlFor=\"email\">Email*</label>\n                    <input value={email} onChange={e=>setEmail(e.target.value)} type=\"email\" id=\"email\" placeholder=\"Your email\" required/>\n                    <label htmlFor=\"message\">Message*</label>\n                    <TextareaAutosize value={message} onChange={e=>setMessage(e.target.value)} id=\"message\" type=\"text\" placeholder=\"Your message...\" minRows=\"3\" required />\n                    <ReCAPTCHA className=\"recaptcha\" sitekey={process.env.REACT_APP_RECAPTCHA_KEY} onChange={()=>setVerified(true)} />\n                    <button style={{margin: 0}} disabled={!verified} type=\"submit\" className={!verified ? \"disabledBtn\" : \"timerBtn submitBtn\" }>Submit</button>\n                </form>\n            </>\n            ) : \n            <>\n                <p className=\"checkmark\">🤘</p>\n                <p>Thanks, your feedback has been submitted!</p>\n            </>\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Footer.jsx",["256"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Header.jsx",["257"],"/Users/lanegarner/Documents/Dev/shedr/src/components/Home.jsx",["258"],"import { useContext, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { StoreContext } from \"../Store\"\n\nimport { FlatGuitarist } from \"../images/FlatGuitarist\"\nimport { FlatFemaleGuitarist } from \"../images/FlatFemaleGuitarist\"\nimport { FlatDrummer } from \"../images/FlatDrummer\"\nimport { FlatPianist } from \"../images/FlatPianist\"\n\nimport \"./Home.scss\"\n\nexport const Home = () => {\n    const { setActivePage } = useContext(StoreContext)\n    \n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setActivePage(\"none\")\n    }, [])\n\n    return (\n        <div className=\"home-container\">\n            <div className=\"home-container-section\">\n                <div>\n                    <FlatGuitarist />\n                </div>\n                <div>\n                    <h1>Welcome to Shedr</h1>\n                    <p>Shedr is a musician's practice toolkit designed to sit on your music stand while practicing. It is optimized for desktop, tablet, and mobile so you can practice efficiently  wherever you are.</p>\n                    <Link to=\"/dashboard\" className=\"button\"> Get Started</Link>\n                </div>\n            </div>\n            <div className=\"home-container-section\">\n                <div>\n                    <h2>Everything you need in one place</h2>\n                    <ul>\n                        <li><span>Practice Log</span> - Track and time your practice sessions</li>\n                        <li><span>Repertoire List</span> - Build and review your repertoire</li>\n                        <li><span>Practice Stats</span> - Stay motivated by analyzing your progress</li>\n                        <li><span>MetDrone</span> - Practice with an accurate metronome and a harmonic drone</li>\n                        <li><span>Recordings</span> - Record your practice sessions to revisit later</li>\n                        <li><span>Tuner</span> - Make sure your instrument is in tune for each practice session</li>\n                    </ul>\n                </div>\n                <div>\n                    <FlatDrummer/>\n                </div>\n            </div>\n            <div className=\"home-container-section\">\n                <div>\n                    <FlatFemaleGuitarist/>\n                </div>\n                <div>\n                    <FlatPianist/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Fork.jsx",["259","260","261","262"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { pitchDetection } from \"ml5\"\nimport Sketch from \"react-p5\"\nimport StartAudioContext from \"startaudiocontext\"\n\nimport { ForkIcon } from \"../icons/ForkIcon\"\n\nimport \"./Fork.scss\"\n\nexport const Fork = () => {\n\n    const { setActivePage, tunerMounted, setTunerMounted } = useContext(StoreContext)\n    const [ tunerOpen, setTunerOpen ] = useState(false)\n    const [ freq, setFreq ] = useState(0)\n    const [ tuningMode, setTuningMode ] = useState(\"chromatic\")\n\n    let audioContext, pitch, stream, notes\n\n    let threshold = 1\n\n    if (tuningMode === \"chromatic\") {        \n        notes = [\n            {\n            note: 'B8',\n            freq: 7902.133\n            },\n            {\n            note: 'A#8/Bb8',\n            freq: 7458.620\n            },\n            {\n            note: 'A8',\n            freq: 7040.000\n            },\n            {\n            note: 'G#8/Ab8',\n            freq: 6644.875\n            },\n            {\n            note: 'G8',\n            freq: 6271.927\n            },\n            {\n            note: 'F#8/Gb8',\n            freq: 5919.911\n            },\n            {\n            note: 'F8',\n            freq: 5587.652\n            },\n            {\n            note: 'E8',\n            freq: 5274.041\n            },\n            {\n            note: 'D#8/Eb8',\n            freq: 4978.032\n            },\n            {\n            note: 'D8',\n            freq: 4698.636\n            },\n            {\n            note: 'C#8/Db8',\n            freq: 4434.922\n            },\n            {\n            note: 'C8',\n            freq: 4186.009\n            },\n            {\n            note: 'B7',\n            freq: 3951.066\n            },\n            {\n            note: 'A#7/Bb7',\n            freq: 3729.310\n            },\n            {\n            note: 'A7',\n            freq: 3520.000\n            },\n            {\n            note: 'G#7/Ab7',\n            freq: 3322.438\n            },\n            {\n            note: 'G7',\n            freq: 3135.963\n            },\n            {\n            note: 'F#7/Gb7',\n            freq: 2959.955\n            },\n            {\n            note: 'F7',\n            freq: 2793.826\n            },\n            {\n            note: 'E7',\n            freq: 2637.020\n            },\n            {\n            note: 'D#7/Eb7',\n            freq: 2489.016\n            },\n            {\n            note: 'D7',\n            freq: 2349.318\n            },\n            {\n            note: 'C#7/Db7',\n            freq: 2217.461\n            },\n            {\n            note: 'C7',\n            freq: 2093.005\n            },\n            {\n            note: 'B6',\n            freq: 1975.533\n            },\n            {\n            note: 'A#6/Bb6',\n            freq: 1864.655\n            },\n            {\n            note: 'A6',\n            freq: 1760.000\n            },\n            {\n            note: 'G#6/Ab6',\n            freq: 1661.219\n            },\n            {\n            note: 'G6',\n            freq: 1567.982\n            },\n            {\n            note: 'F#6/Gb6',\n            freq: 1479.978\n            },\n            {\n            note: 'F6',\n            freq: 1396.913\n            },\n            {\n            note: 'E6',\n            freq: 1318.510\n            },\n            {\n            note: 'D#6/Eb6',\n            freq: 1244.508\n            },\n            {\n            note: 'D6',\n            freq: 1174.659\n            },\n            {\n            note: 'C#6/Db6',\n            freq: 1108.731\n            },\n            {\n            note: 'C6',\n            freq: 1046.502\n            },\n            {\n            note: 'B5',\n            freq: 987.7666\n            },\n            {\n            note: 'A#5/Bb5',\n            freq: 932.3275\n            },\n            {\n            note: 'A5',\n            freq: 880.0000\n            },\n            {\n            note: 'G#5/Ab5',\n            freq: 830.6094\n            },\n            {\n            note: 'G5',\n            freq: 783.9909\n            },\n            {\n            note: 'F#5/Gb5',\n            freq: 739.9888\n            },\n            {\n            note: 'F5',\n            freq: 698.4565\n            },\n            {\n            note: 'E5',\n            freq: 659.2551\n            },\n            {\n            note: 'D#5/Eb5',\n            freq: 622.2540\n            },\n            {\n            note: 'D5',\n            freq: 587.3295\n            },\n            {\n            note: 'C#5/Db5',\n            freq: 554.3653\n            },\n            {\n            note: 'C5',\n            freq: 523.2511\n            },\n            {\n            note: 'B4',\n            freq: 493.8833\n            },\n            {\n            note: 'A#4/Bb4',\n            freq: 466.1638\n            },\n            {\n            note: 'A4',\n            freq: 440\n            },\n            {\n            note: 'G#4/Ab4',\n            freq: 415.3047\n            },\n            {\n            note: 'G4',\n            freq: 391.9954\n            },\n            {\n            note: 'F#4/Gb4',\n            freq: 369.9944\n            },\n            {\n            note: 'F4',\n            freq: 349.2282\n            },\n            {\n            note: 'E4',\n            freq: 329.6276\n            },\n            {\n            note: 'D#4/Eb4',\n            freq: 311.1270\n            },\n            {\n            note: 'D4',\n            freq: 293.6648\n            },\n            {\n            note: 'C#4/Db4',\n            freq: 277.1826\n            },\n            {\n            note: 'C4',\n            freq: 261.6256\n            },\n            {\n            note: 'B3',\n            freq: 246.9417\n            },\n            {\n            note: 'A#3/Bb3',\n            freq: 233.0819\n            },\n            {\n            note: 'A3',\n            freq: 220.0000\n            },\n            {\n            note: 'G#3/Ab3',\n            freq: 207.6523\n            },\n            {\n            note: 'G3',\n            freq: 195.9977\n            },\n            {\n            note: 'F#3/Gb3',\n            freq: 184.9972\n            },\n            {\n            note: 'F3',\n            freq: 174.6141\n            },\n            {\n            note: 'E3',\n            freq: 164.8138\n            },\n            {\n            note: 'D#3/Eb3',\n            freq: 155.5635\n            },\n            {\n            note: 'D3',\n            freq: 146.8324\n            },\n            {\n            note: 'C#3/Db3',\n            freq: 138.5913\n            },\n            {\n            note: 'C3',\n            freq: 130.8128\n            },\n            {\n            note: 'B2',\n            freq: 123.4708\n            },\n            {\n            note: 'A#2/Bb2',\n            freq: 116.5409\n            },\n            {\n            note: 'A2',\n            freq: 110.0000\n            },\n            {\n            note: 'G#2/Ab2',\n            freq: 103.8262\n            },\n            {\n            note: 'G2',\n            freq: 97.99886\n            },\n            {\n            note: 'F#2/Gb2',\n            freq: 92.49861\n            },\n            {\n            note: 'F2',\n            freq: 87.30706\n            },\n            {\n            note: 'E2',\n            freq: 82.40689\n            },\n            {\n            note: 'D#2/Eb2',\n            freq: 77.78175\n            },\n            {\n            note: 'D2',\n            freq: 73.41619\n            },\n            {\n            note: 'C#2/Db2',\n            freq: 69.29566\n            },\n            {\n            note: 'C2',\n            freq: 65.40639\n            },\n            {\n            note: 'B1',\n            freq: 61.73541\n            },\n            {\n            note: 'A#1/Bb1',\n            freq: 58.27047\n            },\n            {\n            note: 'A1',\n            freq: 55.00000\n            },\n            {\n            note: 'G#1/Ab1',\n            freq: 51.91309\n            },\n            {\n            note: 'G1',\n            freq: 48.99943\n            },\n            {\n            note: 'F#1/Gb1',\n            freq: 46.24930\n            },\n            {\n            note: 'F1',\n            freq: 43.65353\n            },\n            {\n            note: 'E1',\n            freq: 41.20344\n            },\n            {\n            note: 'D#1/Eb1',\n            freq: 38.89087\n            },\n            {\n            note: 'D1',\n            freq: 36.70810\n            },\n            {\n            note: 'C#1/Db1',\n            freq: 34.64783\n            },\n            {\n            note: 'C1',\n            freq: 32.70320\n            },\n            {\n            note: 'B0',\n            freq: 30.86771\n            },\n            {\n            note: 'A#0/Bb0',\n            freq: 29.13524\n            },\n            {\n            note: 'A0',\n            freq: 27.50000\n            },\n            {\n            note: 'G#0/Ab0',\n            freq: 25.95654\n            },\n            {\n            note: 'G0',\n            freq: 24.49971\n            },\n            {\n            note: 'F#0/Gb0',\n            freq: 23.12465\n            },\n            {\n            note: 'F0',\n            freq: 21.82676\n            },\n            {\n            note: 'E0',\n            freq: 20.60172\n            },\n            {\n            note: 'D#0/Eb0',\n            freq: 19.44544\n            },\n            {\n            note: 'D0',\n            freq: 18.35405\n            },\n            {\n            note: 'C#0/Db0',\n            freq: 17.32391\n            },\n            {\n            note: 'C0',\n            freq: 16.35160\n            }\n        ]\n    } else if (tuningMode === \"uke\") {\n        notes = [\n            {\n                note: 'A4',\n                freq: 440\n            },\n            {\n                note: 'E4',\n                freq: 329.6276\n            },\n            {\n                note: 'C4',\n                freq: 261.6256\n            },\n            {\n                note: 'G4',\n                freq: 391.9954\n            },\n        ]\n    } else if (tuningMode === \"guitar\") {\n        notes = [\n            {\n                note: 'E4',\n                freq: 329.6276\n            },\n            {\n                note: 'B3',\n                freq: 246.9417\n            },\n            {\n                note: 'G3',\n                freq: 195.9977\n            },\n            {\n                note: 'D3',\n                freq: 146.8324\n            },\n            {\n                note: 'A2',\n                freq: 110.0000\n            },\n            {\n                note: 'E2',\n                freq: 82.40689\n            },\n        ]\n    } else if (tuningMode === \"bass\") {\n        notes = [\n            {\n                note: 'G2',\n                freq: 195.9977\n            },\n            {\n                note: 'D2',\n                freq: 146.8324\n            },\n            {\n                note: 'A1',\n                freq: 110.0000\n            },\n            {\n                note: 'E1',\n                freq: 82.40689\n            },\n        ]\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"fork\")\n    }, [])\n\n\n    const setup = (p5, canvasParentRef) => {\n\t\tp5.createCanvas(400, 400).parent(canvasParentRef)\n\t}\n\n    const draw = (p5) => {\n\n        p5.background(51);\n        p5.textAlign(p5.CENTER, p5.CENTER)\n        p5.fill(255)\n        p5.textSize(32)\n        p5.text(freq.toFixed(2), p5.width / 2, p5.height - 150);\n\n        let closestNote = -1\n        let recordDiff = Infinity\n        for (let i = 0; i < notes.length; i++) {\n            let diff = freq - notes[i].freq\n            if (p5.abs(diff) < p5.abs(recordDiff)) {\n            closestNote = notes[i]\n            recordDiff = diff\n            }\n        }\n\n        p5.textSize(64)\n        p5.text(closestNote.note, p5.width / 2, p5.height - 50)\n\n        let diff = recordDiff\n\n        let alpha = p5.map(p5.abs(diff), 0, 100, 255, 0)\n        p5.rectMode(p5.CENTER)\n        p5.fill(255, alpha)\n        p5.stroke(255)\n        p5.strokeWeight(1)\n        if (p5.abs(diff) < threshold) {\n            p5.fill(89, 193, 142)\n        }\n        p5.rect(200, 100, 200, 50)\n\n        p5.stroke(255)\n        p5.strokeWeight(4)\n        p5.line(200, 0, 200, 200)\n\n        p5.noStroke()\n        p5.fill(255, 98, 71)\n        if (p5.abs(diff) < threshold) {\n            p5.fill(89, 193, 142)\n        }\n        p5.rect(200 + diff / .5 , 100, 10, 75)\n\t}\n\n    const startTuner = () => {\n        setTunerOpen(true)\n        let AudioContext = window.AudioContext || window.webkitAudioContext\n        audioContext = new AudioContext();\n        \n        const setup = async () => {\n            StartAudioContext(audioContext)\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n            startPitch(stream, audioContext)\n        }\n\n        setup();\n\n        const startPitch = (stream, audioContext) => {\n            pitch = pitchDetection('../../model', audioContext , stream, modelLoaded)\n        }\n\n        const modelLoaded = () => {\n            getPitch()\n        }\n\n        const getPitch = () => {\n            pitch.getPitch(function(err, frequency) {\n                if (frequency) {\n                    setFreq(frequency)\n                } \n                if (tunerMounted) {\n                    getPitch();\n                    // clearTimeout\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (freq === freq) {\n                setTunerMounted(false)\n                setTunerOpen(false)\n            }\n        }, 60000)\n    }, [freq])\n\n    useEffect(() => {\n        setTunerMounted(true)\n\n        return function cleanup() {\n            setTunerMounted(false)\n        }\n\n    }, [ freq, tunerOpen])\n\n    return (\n        <div className=\"fork-container\">\n            {!tunerOpen && <ForkIcon width=\"200\" /> }\n            <h1>Fork</h1>\n            {!tunerOpen ? (\n                <>\n                    <label htmlFor=\"tuningMode\">Tuning mode</label>\n                    <select value={tuningMode} onChange={(e)=>setTuningMode(e.target.value)} name=\"tuningMode\" id=\"tuningMode\">\n                        <option value=\"chromatic\">Chromatic</option>\n                        <option value=\"guitar\">Guitar</option>\n                        <option value=\"bass\">Bass</option>\n                        <option value=\"uke\">Ukulele</option>\n                    </select>\n                    <div className=\"startBtn timerBtn\" onClick={startTuner}>Tune</div>\n                </>\n                ) : (\n                    <Sketch setup={setup} draw={draw} />\n                )\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Log.jsx",["263"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { NewSessionForm } from \"./NewSessionForm.jsx\"\nimport { PracticeLog } from \"./PracticeLog.jsx\"\n\nimport \"./Log.scss\"\n\nexport const Log = () => {\n    const [ newLogOpen, setNewLogOpen ] = useState(false)\n    const { setActivePage, timerRunning } = useContext(StoreContext)\n    \n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"log\")\n    }, [])\n\n    return (\n        <div className=\"log-container\">\n            <h1>New Practice Session</h1>\n            {newLogOpen || timerRunning ? (\n                <NewSessionForm />\n            ) :\n            <div className=\"logStart startBtn timerBtn\" onClick={()=>setNewLogOpen(true)}>New Session</div>\n            }\n            <hr className=\"hr\"/>\n            <PracticeLog />\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewSessionForm.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeLog.jsx",["264"],"import { useEffect, useContext, useState } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport DatePicker from \"react-datepicker\"\nimport TextareaAutosize from \"react-textarea-autosize\"\n\nimport { CloseIcon } from \"../icons/CloseIcon\"\nimport { EditIcon } from \"../icons/EditIcon\"\n\nimport \"./PracticeLog.scss\"\n\nlet selectedLog\n\nexport const PracticeLog = () => {\n    const { user, logs, setLogs, removeLog, firebase } = useContext(StoreContext)\n    const [ deleteLogModal, setDeleteLogModal] = useState(false)\n    const [ editLogModal, setEditLogModal] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ newStartDate, setNewStartDate ] = useState()\n    const [ newTopic, setNewTopic ] = useState()\n    const [ newNotes, setNewNotes ] = useState()\n    const [ newPracticeTime, setNewPracticeTime ] = useState()\n\n    useEffect(() => {\n        if(user) {        \n        const logsRef = firebase.database().ref('logs/' + user.uid);\n        logsRef.orderByChild(\"startDate\").on('value', (snapshot) => {\n            let logs = snapshot.val();\n            let newState = [];\n            for (let log in logs) {\n                let thisDate = new Date(logs[log].startDate).toLocaleDateString()\n                thisDate = thisDate.replace(/\"/g,\"\")\n                let thisTime = new Date(logs[log].startDate).toLocaleTimeString()\n                newState.push({\n                    id: log,\n                    startDate: JSON.stringify(thisDate),\n                    startTime: JSON.stringify(thisTime),\n                    practiceTime: logs[log].practiceTime,\n                    practiceTopicNotes: logs[log].practiceTopicNotes,\n                    userId: logs[log].userId,\n                    })\n                }\n                newState.sort(function compare(a, b) {\n                    var dateA = new Date(a.startDate)\n                    var dateB = new Date(b.startDate)\n                    return dateA - dateB;\n                })\n                setLogs(newState.reverse())\n            });\n        }\n    }, [user, setLogs])\n    \n    useEffect(()=> {\n        if (deleteLogModal || editLogModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ deleteLogModal, editLogModal]);\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = \"hidden\";\n        } else {\n            document.body.style.overflow = \"unset\";\n        }\n    }, [modalOpen])\n\n    const handleDeleteLog = (log) => {\n        setDeleteLogModal(true)\n        selectedLog = log\n    }\n\n    const confirmDeleteLog = () => {\n        removeLog(selectedLog)\n        setDeleteLogModal(false)\n    }\n\n    const handleEditLog = (log) => {\n        let startDt = log.startDate\n        startDt = startDt.replace(/['\"]+/g, '')\n        let startTm = log.startTime\n        startTm = startTm.replace(/['\"]+/g, '')\n        const startDateTime = `${startDt} ${startTm}`\n        // setNewStartDate(startDateTime);\n        setNewStartDate(Date.parse(startDateTime));\n        setNewNotes(log.practiceTopicNotes.notes);\n        setNewTopic(log.practiceTopicNotes.topic);\n        setNewPracticeTime(log.practiceTime)\n        setEditLogModal(true);\n        selectedLog = log;\n    }\n    \n    const confirmEditLog = () => {\n        editLog(selectedLog);\n        setEditLogModal(false);\n    }\n    \n    const editLog = (log) => {\n        const logId = log.id\n        const userId = log.userId\n        const logRef = firebase.database().ref(`/logs/${userId}/${logId}`);\n        const updatedLog = {userId, practiceTopicNotes: {notes: newNotes, topic: newTopic } , startDate: newStartDate, practiceTime: newPracticeTime };\n        logRef.update(updatedLog);        \n    }\n\n    const setNewHrs = (e) => {\n        const hours = e.target.value.padStart(2, \"0\")\n        const minutes = newPracticeTime[1]\n        const seconds = newPracticeTime[2]\n        const updatePracticeTime = [hours, minutes, seconds]\n        setNewPracticeTime(updatePracticeTime)\n    }\n\n    const setNewMin = (e) => {\n        const hours = newPracticeTime[0]\n        const minutes = e.target.value.padStart(2, \"0\")\n        const seconds = newPracticeTime[2]\n        const updatePracticeTime = [hours, minutes, seconds]\n        setNewPracticeTime(updatePracticeTime)\n    }\n\n    const setNewSec = (e) => {\n        const hours = newPracticeTime[0]\n        const minutes = newPracticeTime[1]\n        const seconds = e.target.value.padStart(2, \"0\")\n        const updatePracticeTime = [hours, minutes, seconds]\n        setNewPracticeTime(updatePracticeTime)\n    }\n    \n    return (\n        <div className=\"logContainer\">\n            <h1>Practice log</h1>\n            {logs.length === 0 && \n                <div>\n                    <p>You do not have any saved logs</p> \n                    <p>Create your first log above</p>\n                </div>\n        }\n            <div className=\"log-grid\">\n                {logs.map((log, idx) => (\n                    <div key={log.id} id={log.id} className=\"log-card\">\n                        <div id={log.id} className=\"log-card-header\">\n                            <div>\n                                <div className=\"edit-log-btn\" onClick={() => handleEditLog(log)}><EditIcon /></div>\n                                <div className=\"remove-log-btn\" onClick={() => handleDeleteLog(log.id)}><CloseIcon /></div>\n                            </div>\n                            <span className=\"cal-emoji\">🗓</span>\n                            <h2>{JSON.parse(log.startDate)}</h2>\n                    </div>\n                        <h2>{JSON.parse(log.startTime)}</h2>\n                        <h3>Total practice time:</h3>\n                        <span>\n                            <span>{log.practiceTime[0]}hrs {log.practiceTime[1]}min {log.practiceTime[2]}sec</span>\n                        </span><br />\n                        <h3>Topic:</h3>\n                        <span>{log.practiceTopicNotes.topic}</span>\n                        <h3>Notes:</h3>\n                        <span>{log.practiceTopicNotes.notes}</span>\n                    </div>\n                ))}\n            </div>\n            {deleteLogModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will remove this item from your practice log</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteLogModal(false)}>Back</button>\n                        <button className=\"modalBtn cancel\" onClick={confirmDeleteLog}>Delete</button>\n                    </div>\n                </div> ) \n            }\n            {editLogModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form onSubmit={confirmEditLog}>\n                            {typeof selectedLog !== undefined && \n                            <div>\n                                <label htmlFor=\"datepicker\">Start time</label><br/>\n                                    <DatePicker\n                                        selected={newStartDate}\n                                        onChange={setNewStartDate}\n                                        id=\"datepicker\"\n                                        showTimeSelect\n                                        timeIntervals={1}\n                                        dateFormat=\"Pp\"\n                                    />\n                                    <br/>\n                                    <div className=\"pr-time-input\">\n                                        <h4>Total practice time:</h4>\n                                        <input value={newPracticeTime[0]} onChange={setNewHrs} type=\"number\" id=\"newHrs\" name=\"newHrs\" min=\"0\" max=\"99\"></input>\n                                        <label htmlFor=\"newHrs\">hr</label>\n                                        <input value={newPracticeTime[1]} onChange={setNewMin} type=\"number\" id=\"newMin\" name=\"newMin\" min=\"0\" max=\"60\"></input>\n                                        <label htmlFor=\"newMin\">min</label>\n                                        <input value={newPracticeTime[2]} onChange={setNewSec} type=\"number\" id=\"newSec\" name=\"newSec\" min=\"0\" max=\"60\"></input>\n                                        <label htmlFor=\"newSec\">sec</label>\n                                    </div>\n                                    <label htmlFor=\"topic\">Topic</label><br/>\n                                    <TextareaAutosize required value={newTopic} onChange={e=>setNewTopic(e.target.value)} id=\"topic\" /> \n                                    <br />\n                                    <label htmlFor=\"notes\">Notes</label><br/>\n                                    <TextareaAutosize value={newNotes} onChange={e=>setNewNotes(e.target.value)} id=\"notes\" type=\"text\" minRows=\"5\" />\n                                    <br />\n                            </div>\n                            }\n                            <div>\n                                <button className=\"modalBtn cancel\" type=\"button\" onClick={()=>setEditLogModal(false)}>Cancel</button>\n                                <button className=\"modalBtn submit\" type=\"submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>)\n            }\n        </div>\n    )\n}","/Users/lanegarner/Documents/Dev/shedr/src/components/Record.jsx",["265"],"import { useState, useContext, useEffect } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { NewRecording } from \"./NewRecording.jsx\"\nimport { MyRecordings } from \"./MyRecordings.jsx\"\n\nexport const Record = () => {    \n    const { setActivePage, user } = useContext(StoreContext)\n    const [ update, setUpdate ] = useState(0)\n    const [ updateTwo, setUpdateTwo ] = useState(0)\n    const [ loadingComplete, setLoadingComplete] = useState(false)\n    const [ recordingNames, setRecordingNames ] = useState([])\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n        setActivePage(\"record\")\n    }, [])\n\n    return (\n        <div>\n            <NewRecording loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} recordingNames={recordingNames} setRecordingNames={setRecordingNames} />\n            {user && \n                <>\n                    <hr style={{width: \"60%\", marginTop: \"2em\", border:\"1.5px solid #222\", backgroundColor: \"#222\"}} />\n                    <MyRecordings loadingComplete={loadingComplete} setLoadingComplete={setLoadingComplete} update={update} setUpdate={setUpdate} updateTwo={updateTwo} setUpdateTwo={setUpdateTwo} recordingNames={recordingNames} setRecordingNames={setRecordingNames} />\n                </>\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MyRecordings.jsx",["266","267","268","269","270","271"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport Moment from \"react-moment\"\nimport \"moment-timezone\"\nimport Loader from \"react-loader-spinner\";\n\nimport { CloseIcon } from \"../icons/CloseIcon\"\n\nimport \"./MyRecordings.scss\"\n\nMoment.globalLocal = true\n\nlet selectedRecording\n\nexport const MyRecordings = ({loadingComplete, setLoadingComplete, update, setUpdate, updateTwo, setRecordingNames}) => {\n    const { firebase, user } = useContext(StoreContext)\n    const [ myRecordings, setMyRecordings ] = useState([])\n    const [ myRecordingsURL, setMyRecordingsURL ] = useState([])\n    const [ myRecordingsMetadata, setMyRecordingsMetadata ] = useState([])\n    // const [ loadingComplete, setLoadingComplete] = useState(false)\n    const [ deleteRecordingModal, setDeleteRecordingModal] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ loadingSpinner, setLoadingSpinner ] = useState(false)\n    \n    let userId, storage, listRef\n\n    const fetchRecordings = () => {\n        userId = user.uid\n        storage = firebase.storage().ref(`audio/${userId}`)\n        listRef = storage.child(`audio/${userId}`)\n        storage.list().then(snap => {\n            let metadataPromise = []\n            let urlPromise = []\n\n            snap.items.map(itemRef => metadataPromise.push(itemRef.getMetadata()))\n            snap.items.map(itemRef => urlPromise.push(itemRef.getDownloadURL()))\n            \n            Promise.all(metadataPromise).then((data) => {\n                setMyRecordingsMetadata(data)\n            })\n            \n            Promise.all(urlPromise).then((data) => {\n                setMyRecordingsURL(data)\n                // setLoadingComplete(true)\n            })\n        })\n    }\n\n    useEffect(()=> {\n        const names = []\n        if (loadingComplete) {\n            myRecordings.forEach((recording) => {\n                names.push(recording.meta.name)\n            })\n            setRecordingNames(names)\n        }\n    }, [myRecordings])\n    \n    useEffect(() => {\n        if(user) {\n            fetchRecordings()\n            updateList()\n        }\n    }, [])\n\n    useEffect(()=> {\n        if (deleteRecordingModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ deleteRecordingModal])\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden'\n        } else {\n            document.body.style.overflow = 'unset'\n        }\n    }, [modalOpen])\n\n\n    const setRecordings = () => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n    }\n    \n    const updateList = () => {\n        fetchRecordings()\n        setRecordings()\n    }\n\n    useEffect(() => {\n        setTimeout(()=> {\n            updateList()\n            setLoadingComplete(true)\n        }, 1000)\n    }, [])\n\n    useEffect(() => {\n        let getMeta, getURL\n        const getRecordings = []\n        myRecordingsMetadata.forEach((meta, i) => {\n            const metaIndex = i\n            myRecordingsURL.forEach((url, i) => {\n                if (i === metaIndex) {\n                    getURL = url\n                }\n            })\n            getMeta = meta\n            const newListing = {meta: getMeta, url: getURL}\n            getRecordings.push(newListing)\n        })\n    \n        getRecordings.sort(function compare(a, b) {\n            var dateA = new Date(a.meta.timeCreated);\n            var dateB = new Date(b.meta.timeCreated);\n            return dateA - dateB;\n        })\n\n        setMyRecordings(getRecordings.reverse())\n        // updateList()\n    }, [loadingComplete])\n\n    const handleDeleteRecording = (recording) => {\n        setDeleteRecordingModal(true)\n        selectedRecording = recording\n    }\n\n    const deleteRecording = () => {\n        setDeleteRecordingModal(false)\n        const deleteRef = firebase.storage().ref(selectedRecording.meta.fullPath)\n        deleteRef.delete().then(() => {\n            updateList()\n            setLoadingSpinner(true)\n            const newUpdate = update + 1\n            setTimeout(()=> {\n                setUpdate(newUpdate)\n                setLoadingSpinner(false)\n            }, 500)\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    useEffect(()=> {\n        updateList()\n    }, [update, updateTwo])\n    \n    return (\n        <div className=\"recordings-container\">\n                <h1>My Recordings</h1>\n                <ul>\n                    {loadingComplete && <button className=\"modalBtn skip\" onClick={updateList}>Update list</button>}\n                    {loadingComplete ? (\n                        myRecordings.map((recording, index) => (\n                            <li className=\"recording-card\" key={index}>\n                                {loadingSpinner && selectedRecording ? \n                                    <Loader className=\"delete-recording-button\" type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30}/> :\n                                    <div className=\"delete-recording-button\" onClick={()=>handleDeleteRecording(recording)}><CloseIcon/></div>\n                                }\n                                <h2>{recording.meta.name.substring(0, recording.meta.name.length - 4)}</h2>\n                                <span>\n                                    <Moment format=\"MMMM Do, YYYY\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <span>\n                                    <Moment format=\"LT\">{recording.meta.timeCreated}</Moment>\n                                </span>\n                                <audio src={recording.url} controls=\"controls\" />\n                            </li>\n                        ))\n                        ): \n                        <div>\n                            <Loader type=\"ThreeDots\" color=\"dodgerblue\" height={30} width={30} />\n                            <p>Loading</p>\n                        </div>\n                    }\n                    {myRecordings.length === 0 && loadingComplete && (\n                        <div>\n                            <p>You do not have any recordings saved...</p> \n                            <p>Click above to create your first recording</p>\n                        </div>\n                    )\n                    }\n                </ul>\n                {deleteRecordingModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will permanently delete this recording</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteRecordingModal(false)}>Back</button>\n                        <button className=\"modalBtn cancel\" onClick={deleteRecording}>Delete</button>\n                    </div>\n                </div>) \n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/NewRecording.jsx",["272"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport MicRecorder from \"mic-recorder-to-mp3\"\nimport { Link } from \"react-router-dom\"\n\nimport \"./NewRecording.scss\"\nimport { RecordingIcon } from \"./RecordingIcon\"\n\nconst recorder = new MicRecorder({ bitRate: 128 })\nlet userRef\n\nexport const NewRecording = ({setLoadingComplete, update, setUpdate, updateTwo, setUpdateTwo, recordingNames }) => {\n    const { isRecording, setIsRecording, blobURL, setBlobURL, isBlocked, recordingCreated, setRecordingCreated, firebase, user, recordTimerStarted, setRecordTimerStart, setRecordTimerRunning, recordTimerPaused, setRecordTimerPaused, recordTInterval, setRecordTInterval, recordTimer, setRecordTimer, recordDifferenceState, setRecordDifferenceState, } = useContext(StoreContext)\n    const [ recordingTitle, setRecordingTitle ] = useState(\"\")\n    const [ recordingFile, setRecordingFile] = useState(\"\")\n    const [ saveRecordingModal, setSaveRecordingModal ] = useState(false)\n    const [ nameExistsModal, setNameExistsModal ] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n\n    let startTime\n\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + 600)\n\n    const storageRef = firebase.storage().ref()\n    const audioRef = storageRef.child(\"audio\")\n\n    let userId\n    if(user) {\n        userId = user.uid\n    } \n    \n    useEffect(()=> {\n        if(user){\n            userRef = audioRef.child(userId)\n        }\n    }, [user])\n\n    useEffect(()=> {\n        if (saveRecordingModal || nameExistsModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [ saveRecordingModal, nameExistsModal])\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden'\n        } else {\n            document.body.style.overflow = 'unset'\n        }\n    }, [modalOpen])\n\n    // const testBrowser = async () => {\n    //     let stream = await navigator.mediaDevices.getUserMedia({audio: true});\n    //     let track = stream.getAudioTracks()[0];\n    //     console.log(track.getCapabilities());\n    // }\n\n    // testBrowser()\n\n    // const getAudio = () => {\n    //     // navigator.mediaDevices.getUserMedia({ audio: true },\n    //     navigator.mediaDevices.getUserMedia({ audio: { \n    //         echoCancellation: false,\n    //         autoGainControl: true,\n    //         // sampleRate: 96000,\n    //         // sampleRate: 16000,\n    //         // noiseSuppression: false,\n    //         // googAutoGainControl: true,\n    //         // mozNoiseSuppression: false,\n    //         // mozAutoGainControl: false \n    //     }},\n    //         () => {\n    //         console.log('Permission Granted')\n    //         setIsBlocked(false);\n    //         },\n    //         () => {\n    //         console.log('Permission Denied')\n    //         setIsBlocked(true)\n    //         },\n    //     )\n    // }\n\n    const record = () => {\n        // getAudio()\n        setRecordingCreated(false)\n        if (isBlocked) {\n            console.log('Permission Denied')\n        } else {\n            recorder\n            .start()\n            .then(() => {\n                setIsRecording(true)\n                startTimer()\n            }).catch((e) => console.error(e))\n        }\n    }\n\n    const stopRecording = () => {\n        setRecordingCreated(true)\n        stopTimer()\n        recorder\n            .stop()\n            .getMp3()\n            .then(([buffer, blob]) => {\n                const file = new File(buffer, 'me-at-thevoice.mp3', {\n                    type: blob.type,\n                    lastModified: Date.now()\n                });\n                setRecordingFile(file)\n\n                const newBlobURL = URL.createObjectURL(blob)\n                setBlobURL(newBlobURL)\n                setIsRecording(false)\n            }).catch((e) => console.log(e));\n    }\n    \n    const discardRecording = () => {\n        setRecordingCreated(false)\n        setBlobURL(\"\")\n    }\n    \n    const handleSaveRecording = (e) => {\n        e.preventDefault()\n        nameCheck()\n    }\n\n    const nameCheck = () => {\n        const title = `${recordingTitle}.mp3`\n        if (recordingNames.includes(title)) {\n            setSaveRecordingModal(false)\n            setNameExistsModal(true)\n            // alert(\"name exists\")\n        } else {\n            saveRecording()\n        }\n    }\n    \n    const saveRecording = () => {\n        setLoadingComplete(false)\n        setSaveRecordingModal(false)\n        setNameExistsModal(false)\n        setRecordingCreated(false)\n\n\n        if (user) {\n            const recordingRef = userRef.child(`${recordingTitle}.mp3`)\n            recordingRef.put(recordingFile).then(() => {\n                const newUpdate = update + 1\n                setUpdate(newUpdate)\n            })\n            .then(()=> {\n                const newUpdateTwo = updateTwo + 1\n                setTimeout(()=>{\n                    setLoadingComplete(true)\n                    setUpdateTwo(newUpdateTwo)\n                }, 1000)\n            })\n        }\n        setRecordingTitle(\"\")\n    }\n\n    const startTimer = () => {\n        if(!recordTimerStarted){\n            setRecordTimerStart(true)\n        } \n        startTime = new Date().getTime()\n        setRecordTInterval(setInterval(getTime, 1000))\n        setRecordTimerRunning(true);\n        setRecordTimerPaused(false);\n    }\n\n    const getTime = () => {\n        let difference;\n        const updatedTime = new Date().getTime();\n            if (recordDifferenceState){\n                difference = (updatedTime - startTime) + recordDifferenceState\n                setRecordDifferenceState(difference)\n            } else {\n                difference = (updatedTime - startTime)\n                setRecordDifferenceState(difference)\n            }\n\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\n            \n            hours = (hours < 10) ? `0${hours}` : hours;\n            minutes = (minutes < 10) ? `0${minutes}` : minutes;\n            seconds = (seconds < 10) ? `0${seconds}` : seconds;\n\n            setRecordTimer(`${hours}:${minutes}:${seconds}`)\n    }\n\n    const stopTimer = () => {\n        pause()\n        setRecordTimerStart(false)\n        setRecordTimer(\"00:00:00\")\n        setRecordTimerPaused(false)\n        setRecordDifferenceState(null)\n    }\n\n    const pause = () => {\n        if (!recordTimerPaused) {\n            setRecordTimerRunning(false)\n            setRecordTimerPaused(true)\n            clearInterval(recordTInterval)\n        } else {\n            setRecordTimerPaused(!recordTimerPaused)\n            startTimer()\n        }\n    }\n    \n    return (\n        <div className=\"record-container\">\n            {!recordingCreated && <RecordingIcon isRecording={isRecording} stopRecording={stopRecording} recordTimer={recordTimer} record={record}/>}\n            {recordingCreated &&\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n                <h1 style={{paddingBottom: \".5em\"}}>Preview Recording</h1>\n                <audio src={blobURL} controls=\"controls\" />\n                <div>\n                    <div className=\"record-buttons\">\n                        {user ? (\n                            <>\n                                <button className=\"timerBtn cancelBtn\" onClick={discardRecording}>Discard</button>\n                                <button className=\"timerBtn startBtn\" onClick={()=>setSaveRecordingModal(true)}>Save</button> \n                            </>\n                            ) : (\n                                <button className=\"timerBtn cancelBtn\" onClick={discardRecording}>Discard</button>\n                            )}\n                    </div>\n                    {!user && <Link to=\"/dashboard\">Login or sign up for an account to save your recordings</Link>}\n                </div>\n            </div>\n            }\n            {saveRecordingModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"save-recording-form\" onSubmit={handleSaveRecording}>\n                            <h2>Save Recording</h2>\n                            <label htmlFor=\"recordingName\">Title*</label><br/>\n                            <input autoFocus value={recordingTitle} onChange={e=>setRecordingTitle(e.target.value)} type=\"text\" placeholder=\"Name your recording\" id=\"recordingName\" required/>\n                            <div style={{marginTop: \"1em\"}}>\n                                <button className=\"modalBtn cancel\" type=\"button\" onClick={()=>setSaveRecordingModal(false)}>Cancel</button>\n                                <button className=\"modalBtn submit\" type=\"submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>) \n            }\n            {nameExistsModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"save-recording-form\" onSubmit={handleSaveRecording}>\n                            <h2>File name exists</h2>\n                            <p style={{textAlign: \"center\"}}>Please enter a new name or overwrite your recording</p>\n                            <label htmlFor=\"recordingName\">Title*</label><br/>\n                            <input autoFocus value={recordingTitle} onChange={e=>setRecordingTitle(e.target.value)} type=\"text\" placeholder=\"Name your recording\" id=\"recordingName\" required/>\n                            <div style={{marginTop: \"1em\"}}>\n                                <button className=\"modalBtn cancel\" type=\"button\" onClick={saveRecording}>Overwrite</button>\n                                <button className=\"modalBtn submit\" type=\"submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>) \n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/User.jsx",["273","274"],"/Users/lanegarner/Documents/Dev/shedr/src/components/RepList.jsx",["275","276"],"import { useState, useEffect, useContext } from 'react'\nimport { StoreContext } from '../Store'\nimport { TrashIcon } from \"../icons/TrashIcon\"\nimport { EditIcon } from \"../icons/EditIcon\"\n\nimport \"./RepList.scss\"\n\nlet selectedRep\n\nexport const RepList = () => {\n    const [ newTitle, setNewTitle ] = useState(\"\")\n    const [ newArtist, setNewArtist ] = useState(\"\")\n    const [ newStyle, setNewStyle ] = useState(\"\")\n    const [ newNotes, setNewNotes ] = useState(\"\")\n    const [ addRepModal, setAddRepModal ] = useState(false)\n    const [ modalOpen, setModalOpen ] = useState(false)\n    const [ filterRepertoire, setFilterRepertoire ] = useState(false)\n    const [ filterSearch, setFilterSearch ] = useState(\"\")\n    const [ rep, setRep ] = useState([])\n    const [ deleteRepModal, setDeleteRepModal] = useState(false)\n    const [ editRepModal, setEditRepModal] = useState(false)\n\n    const { user, firebase, setActivePage } = useContext(StoreContext)\n\n    let userId\n    if(user) {\n        userId = user.uid\n    } else {\n        userId = null\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        setActivePage(\"none\")\n    }, [])\n\n\n    const confirmAddRep = (e) => {\n        e.preventDefault();\n        const repRef = firebase.database().ref(\"repertoire/\" + userId);\n        const newRep = { title: newTitle, artist: newArtist, style: newStyle, notes: newNotes };\n        repRef.push(newRep);\n\n        setNewTitle(\"\");\n        setNewArtist(\"\");\n        setNewStyle(\"\");\n        setNewNotes(\"\");\n        setAddRepModal(false);\n    }\n\n    const handleDeleteRep = (id) => {\n        setDeleteRepModal(true)\n        selectedRep = id;\n    }\n    \n    const confirmDeleteRep = () => {\n        removeRep(selectedRep);\n        setDeleteRepModal(false);\n    }\n\n    const removeRep = (songId) => {\n        const songRef = firebase.database().ref(`/repertoire/${user.uid}/${songId}`);\n        songRef.remove();\n    }\n\n    const handleEditRep = (song) => {\n        setNewTitle(song.title)\n        setNewArtist(song.artist)\n        setNewStyle(song.style)\n        setNewNotes(song.notes)\n        setEditRepModal(true);\n        selectedRep = song.id;\n    }\n    \n    const confirmEditRep = () => {\n        editRep(selectedRep);\n        setEditRepModal(false);\n    }\n    \n    const editRep = (songId) => {\n        const songRef = firebase.database().ref(`/repertoire/${user.uid}/${songId}`);\n        const updatedSong = { title: newTitle, artist: newArtist, style: newStyle, notes: newNotes };\n        songRef.update(updatedSong); \n        setNewTitle(\"\");\n        setNewArtist(\"\");\n        setNewStyle(\"\");\n        setNewNotes(\"\");       \n    }\n    \n    \n    \n    useEffect(()=> {\n        if (addRepModal || deleteRepModal || editRepModal ) {\n            setModalOpen(true)\n        } else {\n            setModalOpen(false)\n        }\n    }, [addRepModal, deleteRepModal, editRepModal]);\n    \n    useEffect(() => {\n        if (modalOpen) {\n            document.body.style.overflow = 'hidden';\n        } else {\n            document.body.style.overflow = 'unset';\n        }\n    }, [modalOpen]);\n    \n    useEffect(() => {\n        if(user) {        \n            const repertoireRef = firebase.database().ref('repertoire/' + user.uid);\n            repertoireRef.on('value', (snapshot) => {\n                const songs = snapshot.val();\n                let newState = [];\n                for (let song in songs) {\n                    newState.push({\n                        id: song,\n                        title: songs[song].title,\n                        artist: songs[song].artist,\n                        style: songs[song].style,\n                        notes: songs[song].notes,\n                        });\n                    }\n                newState.sort((a,b)=> (a.title > b.title ? 1 : -1))\n                setRep(newState);\n            });\n        }\n    }, [user]);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    return (\n        <div className=\"rep-list-container\">\n            <h1>Repertoire List</h1>\n            <div>\n                <button className=\"timerBtn submitBtn\" onClick={()=>setAddRepModal(true)}>Add</button>\n                {rep.length !== 0 && \n                    <button className=\"timerBtn cancelBtn\" onClick={()=>setFilterRepertoire(!filterRepertoire)}>Filter</button>\n                }\n            </div>\n            {rep.length !== 0 ? (\n                <>\n                    {filterRepertoire && (\n                        <div>\n                            <label className=\"sr-only\" htmlFor=\"filterRep\">Filter</label>\n                            <input value={filterSearch} onChange={e=>setFilterSearch(e.target.value)} className=\"rep-search-field\" type=\"text\" id=\"filterRep\" placeholder=\"Filter song by title, artist, composer, etc...\" rows=\"5\" />\n                        </div>\n                    )}\n                    <table className=\"rep-table\">\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Artist/Composer</th>\n                                <th>Style</th>\n                                <th>Notes</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {rep.length !== 0 && (\n                                rep.map((song)=> (\n                                    <tr key={song.id}>\n                                        <td>{song.title}</td>\n                                        <td>{song.artist}</td>\n                                        <td>{song.style}</td>\n                                        <td>\n                                            <div className=\"remove-edit-rep\">\n                                                <div className=\"rep-icon\" onClick={()=>handleEditRep(song)}>\n                                                    <EditIcon  />\n                                                </div>\n                                                <div className=\"rep-icon\" onClick={()=>handleDeleteRep(song.id)}>\n                                                    <TrashIcon />\n                                                </div>\n                                            </div>\n                                            <div className=\"rep-notes\">{song.notes}</div>\n                                        </td>\n                                    </tr>\n                                ))\n                            )}\n                        </tbody>\n                    </table>\n                    </>\n                ) :\n                <div>\n                    <p>You do not have any songs saved...</p> \n                    <p>Click above to add your first song</p>\n                </div>\n            }\n            {addRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <form className=\"add-rep\" onSubmit={confirmAddRep}>\n                        <h2>Add new song</h2>\n                            <label htmlFor=\"title\">Title</label>\n                            <input value={newTitle} onChange={e=>setNewTitle(e.target.value)} id=\"title\" type=\"text\"/>\n                            <label htmlFor=\"artistComposer\">Artist/Composer</label>\n                            <input value={newArtist} onChange={e=>setNewArtist(e.target.value)} id=\"artistComposer\" type=\"text\"/>\n                            <label htmlFor=\"style\">Style</label>\n                            <input value={newStyle} onChange={e=>setNewStyle(e.target.value)} id=\"style\" type=\"text\"/>\n                            <label htmlFor=\"title\">Notes</label>\n                            <input value={newNotes} onChange={e=>setNewNotes(e.target.value)} id=\"notes\" type=\"text\"/>\n                            <div>\n                                <button type=\"button\" className=\"modalBtn cancel\" onClick={()=>setAddRepModal(false)}>Cancel</button>\n                                <button type=\"submit\" className=\"modalBtn submit\">Add</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>)\n            }\n            {deleteRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                        <h2>Are you sure?</h2>\n                        <p>This will delete this item from your repertoire list</p>\n                        <button className=\"modalBtn skip\" onClick={()=>setDeleteRepModal(false)}>Cancel</button>\n                        <button className=\"modalBtn cancel\" onClick={confirmDeleteRep}>Delete</button>\n                    </div>\n                </div>)\n            }\n            {editRepModal && (\n                <div className=\"modal-container\">\n                    <div className=\"modal\">\n                    <form className=\"add-rep\" onSubmit={confirmEditRep}>\n                        <h2>Edit Rep</h2>\n                            <label htmlFor=\"title\">Title</label>\n                            <input value={newTitle} onChange={e=>setNewTitle(e.target.value)} id=\"title\" type=\"text\"/>\n                            <label htmlFor=\"artistComposer\">Artist/Composer</label>\n                            <input value={newArtist} onChange={e=>setNewArtist(e.target.value)} id=\"artistComposer\" type=\"text\"/>\n                            <label htmlFor=\"style\">Style</label>\n                            <input value={newStyle} onChange={e=>setNewStyle(e.target.value)} id=\"style\" type=\"text\"/>\n                            <label htmlFor=\"title\">Notes</label>\n                            <input value={newNotes} onChange={e=>setNewNotes(e.target.value)} id=\"notes\" type=\"text\"/>\n                            <div>\n                                <button type=\"button\" className=\"modalBtn skip\" onClick={()=>setEditRepModal(false)}>Cancel</button>\n                                <button type=\"submit\" className=\"modalBtn submit\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>)\n            }\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/VegBurg.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTimer.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/App.jsx",["277"],"import { useEffect, useContext } from \"react\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nimport { auth } from \"./firebase.js\"\nimport FirebaseAuthContext from \"./firebaseAuthContext\"\n\nimport { Router } from \"./Router\"\nimport { Header } from \"./components/Header.jsx\"\nimport { Footer } from \"./components/Footer.jsx\"\nimport { StoreContext } from \"./Store\"\n\nexport const App = () => {\n  const { setUser } = useContext(StoreContext)\n  \n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } \n      })\n    },[])\n\n    // console.clear()\n    \n  return (\n    <FirebaseAuthContext>\n      <BrowserRouter>\n        <Header />\n        <Router />\n        <Footer />\n      </BrowserRouter>\n    </FirebaseAuthContext>\n  )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Metronome.jsx",["278","279","280","281"],"import { useState, useEffect, useRef , useContext} from \"react\"\nimport { StoreContext } from \"../../Store\"\n\nimport * as Tone from \"tone\"\nimport StartAudioContext from \"startaudiocontext\"\n\nimport click1Sample from \"./audio/click1.flac\"\nimport click3Sample from \"./audio/click3.wav\"\n\nimport \"./Metronome.scss\"\n\nconst click1 = new Tone.Player(click1Sample).toDestination()\n//-------SAVE FOR POLYRHYTHM MODE!!!-------------\n// const click2 = new Tone.Player(click2Sample).toDestination()\nconst click3 = new Tone.Player(click3Sample).toDestination()\n\nexport const Metronome = () => {    \n    const { tempo, setTempo, playing, setPlaying, timeSig, setTimeSig, setPosition, accent, setAccent, setClickVolume, clickVolume, polyrhythmMode, setPolyrhythmMode, polyrhythm, setPolyrhythm } = useContext(StoreContext)\n    const [taps, setTaps] = useState([])\n    \n    //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n    const three = 0.6666666666666666666666666666666666666666666666666666667\n    const five = 0.4\n    const seven = 0.285714285714286\n    \n    const handleTapTempo = () => {\n        if(!playing) {\n            click3.start()\n        }\n        let time = Date.now()\n        const newTaps = [...taps, time]\n        if (newTaps.length === 3) {\n            newTaps.shift()\n        }\n        setTaps(newTaps)\n    }\n    \n    useEffect(() => {\n        if (taps.length > 1) {\n            let newTaps = []\n            \n            taps.forEach((tap, i) => {\n                const tapMath = 60000 / (taps[i] - taps[i - 1])\n                newTaps.push(tapMath)\n            })\n            newTaps.shift()\n            let avgBpm = newTaps = newTaps.reduce((a,b) => a + b, 0) / newTaps.length\n            avgBpm = Math.round(avgBpm)\n            setTempo(avgBpm)\n        }\n    }, [taps])\n    \n    const handleClickVolume = (e) => {\n        setClickVolume(e.target.value)\n    }\n    \n    const gainToDecibels = (value) => {\n        if (value == null) return 0\n        return 20 * (0.43429 * Math.log(value))\n    }\n    \n    useEffect(() => {\n        click1.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n    \n    //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n    // useEffect(() => {\n    //     click2.volume.value = gainToDecibels(clickVolume)\n    // }, [clickVolume])\n    \n    useEffect(() => {\n        click3.volume.value = gainToDecibels(clickVolume)\n    }, [clickVolume])\n    \n    const handleAccent = () => {\n        if (playing) {\n            stopClick()\n            setAccent(!accent)\n            playClick()\n        } else {\n            setAccent(!accent)\n        }\n    }\n    \n    const handleTimeSig = (e) => {\n        setTimeSig(parseInt(e.target.value))\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempo = (e) => {\n        setTempo(e.target.value)\n        if (playing) {\n            stopClick()\n            playClick()\n        }\n    }\n    \n    const handleTempoInput = (e) => {\n        if(e.target.value !== \"\") {\n            setTempo(e.target.value)\n        } else {\n            stopClick()\n            setPlaying(false)\n            setTempo(e.target.value)\n        }\n    }\n    \n    const startStop = () => {\n        StartAudioContext(Tone.context)\n        Tone.start()\n        \n        if(!playing) {\n            setPlaying(true)\n            playClick()\n        } else {\n            Tone.Transport.cancel();\n            Tone.Transport.stop();\n            setPlaying(false)\n        }\n    }\n    \n    const playClick = () => {\n        if (tempo !== \"\") {\n            const bpmNum = parseInt(tempo);\n        \n        Tone.Transport.bpm.value = bpmNum;\n        Tone.Transport.timeSignature = timeSig;        \n        \n        accent && (\n        Tone.Transport.scheduleRepeat((time) => {\n            click1.start(time)\n        }, \"1m\")\n        )        \n        \n        Tone.Transport.scheduleRepeat((time) => {\n            setPosition(Tone.Transport.position)\n            click3.start(time)\n        }, \"4n\");\n        \n        //-------SAVE FOR POLYRHYTHM MODE!!!-------------\n        // if(polyrhythmMode) {\n        //     setTimeSig(4)\n        //     Tone.Transport.scheduleRepeat((time) => {\n        //         setPosition(Tone.Transport.position)\n        //         click2.start(time)\n        //     }, polyrhythm);\n        // }\n\n        Tone.Transport.start();\n\n        }\n    }\n    \n    const stopClick = () => {\n        Tone.Transport.stop();\n        Tone.Transport.cancel();\n        Tone.Transport.position = \"0:0:0\"\n    }\n    \n    const newPosition = parseInt(Tone.Transport.position.split(':')[1])\n    \n    const didMountRef = useRef(false)\n    \n    useEffect(() => {\n        if (didMountRef.current) {\n            if (playing) {\n                stopClick()\n                playClick()\n            }\n        } else didMountRef.current = true\n    }, [accent, timeSig, tempo, polyrhythm, polyrhythmMode])\n    \n    return (\n        <div className=\"metronome\">\n            {playing ? <h1 style={{color: \"#5AC18E\"}}>Met</h1> : <h1 style={{color: \"white\"}}>Met</h1>}\n            <div>\n                <input checked={accent} type=\"checkbox\" id=\"accent\" onChange={handleAccent} />\n                <label htmlFor=\"accent\" style={{fontWeight: 400}} >Accent</label>\n            </div>\n            {/* //-------SAVE FOR POLYRHYTHM MODE!!!------------- */}\n            {/* <div>\n                <input checked={polyrhythmMode} type=\"checkbox\" id=\"poly\" onChange={()=>setPolyrhythmMode(!polyrhythmMode)} />\n                <label htmlFor=\"poly\" style={{fontWeight: 400}} >Polyrhythm mode</label>\n            </div> */}\n            <div className=\"met-settings\">\n                {!polyrhythmMode ? (\n                <>\n                    <label htmlFor=\"selectTimeSig\">Time signature</label><br/>\n                    <select onChange={handleTimeSig} name=\"selectTimeSig\" id=\"selectTimeSig\" value={timeSig}>\n                        <option value=\"4\">4/4</option>\n                        <option value=\"3\">3/4</option>\n                        <option value=\"5\">5/4</option>\n                        <option value=\"7\">7/4</option>\n                    </select>\n                </>\n                ) : (\n                    <>\n                        <label className=\"time-sig-label\" htmlFor=\"selectPoly\">Polyrhythm</label><br/>\n                        <select onChange={(e)=>setPolyrhythm(e.target.value)} name=\"selectPoly\" id=\"selectPoly\" value={polyrhythm}>\n                            {/* <option value=\"3:2\">3:2</option> */}\n                            <option value={three}>3:4</option>\n                            <option value={five}>5:4</option>\n                            <option value={seven}>7:4</option>\n                            {/* <option value=\"7:8\">7:8</option> */}\n                        </select>\n                    </>\n                )}\n                <div className=\"bpm-slider\">\n                    <label htmlFor=\"bpmSlider\">Tempo</label>\n                    <div><input style={{width: \"2.5em\", fontSize: \"1.5em\"}} type=\"text\" value={tempo} onChange={handleTempoInput} /> BPM</div>\n                    <input\n                        id=\"bpmSlider\"\n                        type=\"range\"\n                        min=\"01\"\n                        max=\"400\"\n                        value={tempo}\n                        onChange={handleTempo} \n                    />\n                </div>\n                <div className=\"bpm-slider\">\n                    <label htmlFor=\"volumeSlider\">Volume</label><br/>\n                    <div>{clickVolume != 1 ? Math.round(clickVolume * 10): 11}</div>\n                    <input \n                        id=\"volumeSlider\"\n                        type=\"range\"\n                        min=\"0\"\n                        max=\"1\"\n                        step=\"0.01\"\n                        value={clickVolume}\n                        onChange={handleClickVolume}\n                    />\n                </div>\n            </div>\n            <button id=\"startStopBtn\" onClick={startStop}>\n                {playing ? 'Stop' : 'Start'}\n            </button>\n            <button onMouseDown={handleTapTempo}>Tap</button>\n            {playing ? <h3 className=\"Count\" style={{\"fontSize\": \"6em\", \"color\":\"#FFF\"}}>{newPosition + 1}</h3> : <div></div>}\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/MetDrone/Drone.jsx",[],"/Users/lanegarner/Documents/Dev/shedr/src/components/About.jsx",["282"],"import { useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { Link } from \"react-router-dom\"\n\nimport \"./About.scss\"\n\nexport const About = () => {\n    const { setActivePage } = useContext(StoreContext)\n    \n    useEffect(() => {\n        setActivePage(\"none\")\n        window.scrollTo(0, 0)\n    }, [])\n    \n    return (\n        <div className=\"about-container\">\n            <h1>About</h1>\n            <p>Shedr was created by me, Lane Garner, as my capstone app for the Fullstack Web Development program at Austin Coding Academy. I built it for myself and my guitar students to help keep track of our practice sessions along with some useful tools.</p>\n            <p>I built Shedr with <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noreferrer\">React</a>, <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"noreferrer\">Node.js</a>, <a href=\"https://sass-lang.com/\" target=\"_blank\" rel=\"noreferrer\">SCSS</a>, and <a href=\"https://firebase.google.com/\" target=\"_blank\" rel=\"noreferrer\">Firebase</a> along with some help from libraries and packages such as <a href=\"https://tonejs.github.io/\" target=\"_blank\" rel=\"noreferrer\">Tone.js</a>, <a href=\"https://github.com/tonaljs/tonal\" target=\"_blank\" rel=\"noreferrer\">Tonal.js</a>, <a href=\"https://www.npmjs.com/package/mic-recorder-to-mp3\" target=\"_blank\" rel=\"noreferrer\">Microphone Recorder to Mp3</a>, <a href=\"https://momentjs.com/\" target=\"_blank\" rel=\"noreferrer\">Moment.js</a>, <a href=\"https://p5js.org/\" target=\"_blank\" rel=\"noreferrer\">p5.js</a>, and <a href=\"https://github.com/LaneGarner/shedr/blob/main/package.json\" target=\"_blank\" rel=\"noreferrer\">more</a>.</p>\n            <p>You can check out my source code on <a href=\"https://github.com/LaneGarner/shedr\" >GitHub</a> and view some of my other development work at <a href=\"https://lanegarner.dev\" target=\"_blank\" rel=\"noreferrer\">lanegarner.dev</a>. If you have any feedback or ideas for the app feel free to <Link to=\"/feedback\" target=\"_blank\" rel=\"noreferrer\">reach out</Link>.</p>\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Settings.jsx",["283"],"import { useEffect, useContext } from 'react'\nimport { StoreContext } from \"../Store\"\n\nimport \"./Settings.scss\"\n\nexport const Settings = () => {\n    const { setActivePage } = useContext(StoreContext)\n\n    useEffect(() => {\n        setActivePage(\"none\")\n        window.scrollTo(0, 0);\n    }, [])\n    \n    return (\n        <div className=\"settings-container\">\n            <h1>Settings</h1>\n            <span>Remove account</span>\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/Stats.jsx",["284","285","286","287"],"import { useState, useEffect, useContext } from \"react\"\nimport { StoreContext } from \"../Store\"\n\nimport { summary } from 'date-streaks';\n\nimport { PracticeTopics } from \"./PracticeTopics\"\n\nexport const Stats = () => {\n    const { user, logs, setLogs, firebase, setActivePage } = useContext(StoreContext)\n    const [ totalTime, setTotalTime ] = useState()\n    const [ streak, setStreak ] = useState()\n\n    useEffect(() => {\n        setActivePage(\"none\")\n        window.scrollTo(0, 0);\n    }, [])\n\n    useEffect(() => {\n        if(user) {        \n        const logsRef = firebase.database().ref('logs/' + user.uid);\n        logsRef.orderByChild(\"startDate\").on('value', (snapshot) => {\n            let logs = snapshot.val();\n            let newState = [];\n            for (let log in logs) {\n                let thisDate = new Date(logs[log].startDate).toLocaleDateString()\n                thisDate = thisDate.replace(/\"/g,\"\")\n                let thisTime = new Date(logs[log].startDate).toLocaleTimeString()\n                newState.push({\n                    id: log,\n                    startDate: JSON.stringify(thisDate),\n                    startTime: JSON.stringify(thisTime),\n                    practiceTime: logs[log].practiceTime,\n                    practiceTopicNotes: logs[log].practiceTopicNotes,\n                    userId: logs[log].userId,\n                    });\n                }\n                newState.sort(function compare(a, b) {\n                    var dateA = new Date(a.startDate);\n                    var dateB = new Date(b.startDate);\n                    return dateA - dateB;\n                })\n                setLogs(newState.reverse())\n            });\n        }\n    }, [user, setLogs])\n\n    //format seconds to HH:SS:MM \n    const formatSec = (timestamp) => {\n        const hours = Math.floor(timestamp / 60 / 60);\n        const minutes = Math.floor(timestamp / 60) - (hours * 60);\n        const seconds = timestamp % 60;\n        const formatted = hours.toString().padStart(2, '0') + ':' + minutes.toString().padStart(2, '0') + ':' + seconds.toString().padStart(2, '0');\n        return formatted \n    }\n    \n    //calculate total practice time\n    useEffect(() => {\n        if (user) {\n            const fetchLogs = logs\n            const hrs = [0]\n            const min = [0]\n            const sec = [0]\n            fetchLogs.forEach(log => {\n                const hrsToSec = log.practiceTime[0] * 3600\n                hrs.push(hrsToSec)\n            })\n            fetchLogs.forEach(log => {\n                const minToSec = log.practiceTime[1] * 60\n                min.push(minToSec)\n            })\n            fetchLogs.forEach(log => sec.push(parseInt(log.practiceTime[2])))\n            const addConvertedHrs = hrs.reduce((a, b) => a + b)\n            const addConvertedMin = min.reduce((a, b) => a + b)\n            const addSec = sec.reduce((a, b) => a + b)\n            const totalSec = addConvertedHrs + addConvertedMin + addSec\n            const formatted = formatSec(totalSec)\n            setTotalTime(formatted.split(\":\"))\n        }\n    }, [logs])\n\n    //calculate streaks\n\n    useEffect(() => {\n        if (user) {\n            const dates = []\n            logs.forEach(log => {\n                const formatDate = new Date(log.startDate)\n                dates.push(formatDate)\n            })\n            const streaks = summary(dates)\n            setStreak(streaks)\n        }\n    }, [logs])\n\n    return (\n        <div className=\"stats-container\">\n            <h1>Practice Stats</h1>\n            <section id=\"streaks\">\n                <div><strong>Current streak:</strong> { streak && streak.currentStreak } days</div>\n                <div><strong>Longest streak:</strong> { streak && streak.longestStreak } days</div>\n                <div><strong>Total practice sessions:</strong> {logs.length}</div>\n                <div><strong>Total practice time:</strong> {totalTime && totalTime[0]} hours {totalTime && totalTime[1]} minutes {totalTime && totalTime[2]} seconds</div>\n            </section>\n            <PracticeTopics logs={logs} user={user}/>\n            {/* <div>Min per day/week/month</div> */}\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/PracticeTopics.jsx",["288"],"import { useState, useEffect } from \"react\"\n\nimport { Doughnut, Bar } from \"react-chartjs-2\"\n\nimport \"./Stats.scss\"\nimport \"./PracticeTopics.scss\"\n\n\nexport const PracticeTopics = ({ logs, user }) => {\n    const [ topics, setTopics ] = useState([])\n    \n    const data = {\n        labels: [...topics],\n        // labels: ['Pentatonics', 'Song review', 'New repertoire', 'Blues', 'Melodic minor scales', 'Arpeggios'],\n        datasets: [\n        {\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"aqua\",\n            \"blueviolet\",\n            \"coral\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            \"tomato\",\n            \"orange\",\n            \"dodgerblue\",\n            // 'rgb(75, 192, 192)',\n            // 'rgb(153, 102, 255)',\n            // 'rgb(255, 159, 64)',\n            ],\n            borderColor: [\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n            \n            ],\n            borderWidth: 1,\n        },\n        ],\n    }\n    const data2 = {\n        // labels: [...topics],\n        //pass array of timestamps to labels\n        labels: ['5/21/2021', '5/22/2021', '5/23/2021', '5/24/2021', '5/25/2021', '5/26/2021', '5/27/2021'],\n        datasets: [\n        {\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: [\n            \"orange\",\n            \"orange\",\n            \"orange\",\n            \"orange\",\n            \"orange\",\n            \"orange\",\n            // 'rgb(75, 192, 192)',\n            // 'rgb(153, 102, 255)',\n            // 'rgb(255, 159, 64)',\n            ],\n            borderColor: [\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n                \"#333\",\n            \n            ],\n            borderWidth: 1,\n        },\n        ],\n    }\n    \n    useEffect(() => {\n        if (user) {\n            const topicsList = []\n            const list = logs\n            list.forEach(item => {\n                topicsList.push(item.practiceTopicNotes.topic)\n            })\n            setTopics(topicsList)\n        }\n    }, [logs])\n\n    return (\n        <div style={{width: 500}}>\n            {topics && (\n            <div className=\"practice-topics\">\n            <Doughnut data={data} />\n            <h3 style={{textAlign: \"center\"}}>Practice minutes this week</h3>\n            <Bar\n                data={data2}\n                width={50}\n                height={25}\n                // options={{ maintainAspectRatio: false }}\n            />\n            </div>\n            )}\n\n        </div>\n    )\n}\n","/Users/lanegarner/Documents/Dev/shedr/src/components/RecordingIcon.jsx",[],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"289","replacedBy":"293"},{"ruleId":"291","replacedBy":"294"},{"ruleId":"289","replacedBy":"295"},{"ruleId":"291","replacedBy":"296"},{"ruleId":"289","replacedBy":"297"},{"ruleId":"291","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":6,"column":1,"nodeType":"301","endLine":132,"endColumn":2},{"ruleId":"302","severity":1,"message":"303","line":34,"column":7,"nodeType":"304","endLine":34,"endColumn":9,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"306","line":15,"column":8,"nodeType":"304","endLine":15,"endColumn":10,"suggestions":"307"},{"ruleId":"302","severity":1,"message":"306","line":21,"column":8,"nodeType":"304","endLine":21,"endColumn":10,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":13,"column":53,"nodeType":"311","messageId":"312","endLine":13,"endColumn":64},{"ruleId":"309","severity":1,"message":"313","line":8,"column":10,"nodeType":"311","messageId":"312","endLine":8,"endColumn":23},{"ruleId":"302","severity":1,"message":"306","line":18,"column":8,"nodeType":"304","endLine":18,"endColumn":10,"suggestions":"314"},{"ruleId":"302","severity":1,"message":"306","line":528,"column":8,"nodeType":"304","endLine":528,"endColumn":10,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":616,"column":17,"nodeType":"318","messageId":"319","endLine":616,"endColumn":30},{"ruleId":"302","severity":1,"message":"320","line":621,"column":8,"nodeType":"304","endLine":621,"endColumn":14,"suggestions":"321"},{"ruleId":"302","severity":1,"message":"320","line":630,"column":8,"nodeType":"304","endLine":630,"endColumn":26,"suggestions":"322"},{"ruleId":"302","severity":1,"message":"306","line":16,"column":8,"nodeType":"304","endLine":16,"endColumn":10,"suggestions":"323"},{"ruleId":"302","severity":1,"message":"324","line":51,"column":8,"nodeType":"304","endLine":51,"endColumn":23,"suggestions":"325"},{"ruleId":"302","severity":1,"message":"306","line":17,"column":8,"nodeType":"304","endLine":17,"endColumn":10,"suggestions":"326"},{"ruleId":"309","severity":1,"message":"327","line":31,"column":9,"nodeType":"311","messageId":"312","endLine":31,"endColumn":16},{"ruleId":"302","severity":1,"message":"328","line":58,"column":8,"nodeType":"304","endLine":58,"endColumn":22,"suggestions":"329"},{"ruleId":"302","severity":1,"message":"330","line":65,"column":8,"nodeType":"304","endLine":65,"endColumn":10,"suggestions":"331"},{"ruleId":"302","severity":1,"message":"332","line":118,"column":8,"nodeType":"304","endLine":118,"endColumn":10,"suggestions":"333"},{"ruleId":"302","severity":1,"message":"334","line":143,"column":8,"nodeType":"304","endLine":143,"endColumn":25,"suggestions":"335"},{"ruleId":"302","severity":1,"message":"336","line":168,"column":8,"nodeType":"304","endLine":168,"endColumn":27,"suggestions":"337"},{"ruleId":"302","severity":1,"message":"338","line":38,"column":8,"nodeType":"304","endLine":38,"endColumn":14,"suggestions":"339"},{"ruleId":"309","severity":1,"message":"340","line":11,"column":10,"nodeType":"311","messageId":"312","endLine":11,"endColumn":25},{"ruleId":"302","severity":1,"message":"306","line":26,"column":8,"nodeType":"304","endLine":26,"endColumn":10,"suggestions":"341"},{"ruleId":"302","severity":1,"message":"306","line":35,"column":8,"nodeType":"304","endLine":35,"endColumn":10,"suggestions":"342"},{"ruleId":"302","severity":1,"message":"324","line":127,"column":8,"nodeType":"304","endLine":127,"endColumn":14,"suggestions":"343"},{"ruleId":"302","severity":1,"message":"344","line":21,"column":7,"nodeType":"304","endLine":21,"endColumn":9,"suggestions":"345"},{"ruleId":"309","severity":1,"message":"346","line":18,"column":149,"nodeType":"311","messageId":"312","endLine":18,"endColumn":166},{"ruleId":"302","severity":1,"message":"347","line":51,"column":8,"nodeType":"304","endLine":51,"endColumn":14,"suggestions":"348"},{"ruleId":"302","severity":1,"message":"349","line":174,"column":8,"nodeType":"304","endLine":174,"endColumn":60,"suggestions":"350"},{"ruleId":"351","severity":1,"message":"352","line":225,"column":39,"nodeType":"318","messageId":"353","endLine":225,"endColumn":41},{"ruleId":"302","severity":1,"message":"306","line":14,"column":8,"nodeType":"304","endLine":14,"endColumn":10,"suggestions":"354"},{"ruleId":"302","severity":1,"message":"306","line":12,"column":8,"nodeType":"304","endLine":12,"endColumn":10,"suggestions":"355"},{"ruleId":"302","severity":1,"message":"306","line":16,"column":8,"nodeType":"304","endLine":16,"endColumn":10,"suggestions":"356"},{"ruleId":"302","severity":1,"message":"324","line":45,"column":8,"nodeType":"304","endLine":45,"endColumn":23,"suggestions":"357"},{"ruleId":"302","severity":1,"message":"358","line":79,"column":8,"nodeType":"304","endLine":79,"endColumn":14,"suggestions":"359"},{"ruleId":"302","severity":1,"message":"358","line":93,"column":8,"nodeType":"304","endLine":93,"endColumn":14,"suggestions":"360"},{"ruleId":"302","severity":1,"message":"358","line":125,"column":8,"nodeType":"304","endLine":125,"endColumn":14,"suggestions":"361"},"no-native-reassign",["362"],"no-negated-in-lhs",["363"],["362"],["363"],["362"],["363"],["362"],["363"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'changeState(s => ...)' if you only need 'state' in the 'changeState' call.","ArrayExpression",["364"],"React Hook useEffect has a missing dependency: 'setActivePage'. Either include it or remove the dependency array.",["365"],["366"],"no-unused-vars","'isRecording' is assigned a value but never used.","Identifier","unusedVar","'LogIconHeader' is defined but never used.",["367"],["368"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'setTunerMounted'. Either include it or remove the dependency array.",["369"],["370"],["371"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["372"],["373"],"'listRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadingComplete' and 'setRecordingNames'. Either include them or remove the dependency array. If 'setRecordingNames' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["374"],"React Hook useEffect has missing dependencies: 'fetchRecordings', 'updateList', and 'user'. Either include them or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'setLoadingComplete' and 'updateList'. Either include them or remove the dependency array. If 'setLoadingComplete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["376"],"React Hook useEffect has missing dependencies: 'myRecordingsMetadata' and 'myRecordingsURL'. Either include them or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'updateList'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'audioRef' and 'userId'. Either include them or remove the dependency array.",["379"],"'RecordIconLarge' is defined but never used.",["380"],["381"],["382"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["383"],"'setPolyrhythmMode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setTempo'. Either include it or remove the dependency array.",["384"],"React Hook useEffect has missing dependencies: 'playClick' and 'playing'. Either include them or remove the dependency array.",["385"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected",["386"],["387"],["388"],["389"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["390"],["391"],["392"],"no-global-assign","no-unsafe-negation",{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"395","fix":"397"},{"desc":"395","fix":"398"},{"desc":"395","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"395","fix":"404"},{"desc":"405","fix":"406"},{"desc":"395","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"395","fix":"420"},{"desc":"395","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"395","fix":"430"},{"desc":"395","fix":"431"},{"desc":"395","fix":"432"},{"desc":"405","fix":"433"},{"desc":"434","fix":"435"},{"desc":"434","fix":"436"},{"desc":"434","fix":"437"},"Update the dependencies array to be: [state]",{"range":"438","text":"439"},"Update the dependencies array to be: [setActivePage]",{"range":"440","text":"441"},{"range":"442","text":"441"},{"range":"443","text":"441"},{"range":"444","text":"441"},"Update the dependencies array to be: [freq, setTunerMounted]",{"range":"445","text":"446"},"Update the dependencies array to be: [freq, setTunerMounted, tunerOpen]",{"range":"447","text":"448"},{"range":"449","text":"441"},"Update the dependencies array to be: [user, setLogs, firebase]",{"range":"450","text":"451"},{"range":"452","text":"441"},"Update the dependencies array to be: [loadingComplete, myRecordings, setRecordingNames]",{"range":"453","text":"454"},"Update the dependencies array to be: [fetchRecordings, updateList, user]",{"range":"455","text":"456"},"Update the dependencies array to be: [setLoadingComplete, updateList]",{"range":"457","text":"458"},"Update the dependencies array to be: [loadingComplete, myRecordingsMetadata, myRecordingsURL]",{"range":"459","text":"460"},"Update the dependencies array to be: [update, updateList, updateTwo]",{"range":"461","text":"462"},"Update the dependencies array to be: [audioRef, user, userId]",{"range":"463","text":"464"},{"range":"465","text":"441"},{"range":"466","text":"441"},"Update the dependencies array to be: [firebase, user]",{"range":"467","text":"468"},"Update the dependencies array to be: [setUser]",{"range":"469","text":"470"},"Update the dependencies array to be: [setTempo, taps]",{"range":"471","text":"472"},"Update the dependencies array to be: [accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",{"range":"473","text":"474"},{"range":"475","text":"441"},{"range":"476","text":"441"},{"range":"477","text":"441"},{"range":"478","text":"451"},"Update the dependencies array to be: [logs, user]",{"range":"479","text":"480"},{"range":"481","text":"480"},{"range":"482","text":"480"},[830,832],"[state]",[412,414],"[setActivePage]",[699,701],[555,557],[11090,11092],[13566,13572],"[freq, setTunerMounted]",[13717,13735],"[freq, setTunerMounted, tunerOpen]",[469,471],[2054,2069],"[user, setLogs, firebase]",[613,615],[2018,2032],"[loadingComplete, myRecordings, setRecordingNames]",[2152,2154],"[fetchRecordings, updateList, user]",[3509,3511],"[setLoadingComplete, updateList]",[4268,4285],"[loadingComplete, myRecordingsMetadata, myRecordingsURL]",[4978,4997],"[update, updateList, updateTwo]",[1501,1507],"[audioRef, user, userId]",[784,786],[1141,1143],[3862,3868],"[firebase, user]",[564,566],"[setUser]",[1769,1775],"[setTempo, taps]",[4840,4892],"[accent, timeSig, tempo, polyrhythm, polyrhythmMode, playing, playClick]",[329,331],[291,293],[491,493],[1701,1716],[3080,3086],"[logs, user]",[3423,3429],[3122,3128]]